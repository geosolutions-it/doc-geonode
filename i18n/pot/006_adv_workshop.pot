# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, GeoNode Development Team
# This file is distributed under the same license as the GeoNode package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GeoNode 2.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-22 19:05+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_geotiff.rst:7
msgid "Adding a GeoTiff"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_geotiff.rst:9
msgid "The GeoTIFF is a widely used geospatial raster data format: it is composed of a single file containing both the data and the georeferencing information (not to be confused with the .tiff/.tfw/.prj file triplet, which is considered a \"world image\" file in GeoServer). This section provides instructions to add and publish a GeoTIFF file."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_geotiff.rst:12
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wfscascade.rst:18
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:20
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:21
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:62
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:100
msgid "Open the web browser and navigate to the GeoServer `Welcome Page <http://localhost:8083/geoserver>`_."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_geotiff.rst:14
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wfscascade.rst:20
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:22
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:23
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:64
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:102
msgid "Select :guilabel:`Add stores` from the interface."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_geotiff.rst:18
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:85
msgid "Select :guilabel:`GeoTIFF - Tagged Image File Format with Geographic information` from the set of available Raster Data Sources."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_geotiff.rst:23
msgid "Specify a proper name (as an instance, :file:`13tde815295_200803_0x6000m_cl`) in the :guilabel:`Data Source Name` field of the interface."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_geotiff.rst:25
msgid "Click on browse link in order to set the GeoTIFF location in the :guilabel:`URL` field."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_geotiff.rst:27
msgid "The 13tde815295_200803_0x6000m_cl.tif is located at :file:`${TRAINING_ROOT}/data/user_data/aerial/13tde815295_200803_0x6000m_cl.tif` (on Windows :file:`%TRAINIG_ROOT%\\\\data\\\\user_data\\\\aerial\\\\13tde815295_200803_0x6000m_cl.tif`)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_geotiff.rst:32
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:85
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wfscascade.rst:33
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:36
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:37
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:78
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:118
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:93
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:25
msgid "Click :guilabel:`Save`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_geotiff.rst:34
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:95
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:27
msgid "Publish the layer by clicking on the :guilabel:`publish` link."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_geotiff.rst:39
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wfscascade.rst:39
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:42
msgid "Check the Coordinate Reference Systems and the Bounding Boxes fields are properly set and click on :guilabel:`Save`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_geotiff.rst:43
msgid "At this point the GeoTIFF is being published with GeoServer. You can use the layer preview to inspect the data."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:7
msgid "Adding a Shapefile"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:9
msgid "The task of adding a Shapefile is one that is core to any GIS tool. This section covers the task of adding and publishing a Shapefile with GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:11
msgid "Navigate to the workshop directory :file:`${TRAINING_ROOT}/data/user_data/` (on Windows :file:`%TRAINING_ROOT%\\\\data\\\\user_data`) and find the following shapefiles::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:18
msgid "Copy the files to the following directory::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:22
msgid "for Windows::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:27
msgid "Ensure that all four parts of the shapefile are copied.  This includes the ``shp``, ``shx``, ``dbf``, and ``prj`` extensions."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:29
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:8
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:12
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:60
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:10
#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:11
msgid "Navigate to the GeoServer `Welcome Page <http://localhost:8083/geoserver/web/>`_."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:31
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:10
msgid "On the Welcome page locate the :guilabel:`Login` form located at the top right corner, and enter the username \"admin\" and password \"Geos\"."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:36
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:15
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:19
msgid "GeoServer Login"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:38
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:17
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:21
msgid "Click the :guilabel:`Add stores` link."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:43
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:21
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:25
msgid "Add stores link"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:45
msgid "Select the :guilabel:`Shapefile` link and click it."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:50
msgid "Add a new shapefile"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:52
msgid "The new data source menu contains a list of all the spatial formats supported by GeoServer. When creating a new data store one of these formats must be chosen. Formats like Shapefile and PostGIS are supported by default, and many other formats are available as extensions."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:54
msgid "On the :guilabel:`Edit Vector Data Source` page enter \"Mainrd\" in the :guilabel:`Data Source Name` and :guilabel:`Description` fields. Finally click on browse link in order to set the Shapefile location in the :guilabel:`URL` field and click :guilabel:`Save`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:56
msgid "The Mainrd.shp got just copied in the data directory, inside the \"data/boulder\" folder, and the file browser opens right in the data directory, so just click on \"data\" and then \"boulder\" and you'll find it"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:61
msgid "Specifying Shapefile parameters"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:63
msgid "After saving, you will be taken to a page that lists all the layers in the shapefile and gives you the option to publish any of them. Click :guilabel:`Publish`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:68
msgid "Publishing a layer from the shapefile"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:70
msgid "The :guilabel:`Coordinate Reference Systems` have to be manually populated. The :guilabel:`Name` and :guilabel:`Title` fields should be automatically populated."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:75
msgid "Populate fields."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:77
msgid "Scroll down the page and generate the bounds for the layer by clicking the :guilabel:`Compute from data` button in the :guilabel:`Bounding Boxes` section."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:82
msgid "Generating the layer bounding box"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:84
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:64
msgid "Scroll to the bottom of the page, notice the read only :guilabel:`Feature Type Detail` table and then click :guilabel:`Save`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:89
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:68
msgid "Submitting the layer configuration"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:91
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:70
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:49
msgid "If all went well, you should see something like this:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:96
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:74
msgid "After a successful save"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:98
msgid "At this point a shapefile has been added and is ready to be served by GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:103
msgid "Choose the ``preview`` link in the main menu and filter the layer list with ``mainrd``:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:108
msgid "Selecting the ``mainrd`` shapefile in the layer preview."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:110
msgid "Click on the ``OpenLayers`` link to preview the layer in an interactive viewer:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:114
msgid "The ``mainrd`` shapefile preview"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_shp.rst:116
msgid "In the :ref:`next <geoserver.shp_postgis>` section we will see how to load a shapeFile into PostGIS."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:7
msgid "Adding a SQL Parametric View based Layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:9
msgid "The traditional way to use database backed data is to configure either a table or a database view as a new layer in GeoServer. Starting with GeoServer 2.1.0 the user can also create a new layer by specifying a raw SQL query, without the need to actually creating a view in the database. The SQL can also be parametrized, and parameter values passed in along with a WMS or WFS request."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:13
msgid "**Creating a plain SQL view**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:15
msgid "In order to create an SQL view the administrator can go into the :guilabel:`Add a new resource` from the :guilabel:`Layers` page."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:20
msgid "Upon selection of a database backed store a list of tables and views available for publication will appear, but at the bottom of if a new link, :guilabel:`Configure new SQL view`, will appear:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:28
msgid "Selecting the link :guilabel:`Configure new SQL view` will open a new page where the SQL statement can be specified:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:32
msgid "Plain SQL View configuration"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:58
msgid "The query can be any SQL statement that can be validly executed as part of a subquery in the FROM clauses, that is ``select * from (<the sql view>) [as] vtable``. This is true for most SQL statements, but specific syntax might be needed to call onto a stored procedure depending on the database. Also, all the columns returned by the SQL statement must have a name, in some databases aliasing is required when calling function names"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:60
msgid "Once a valid SQL statement has been specified press the :guilabel:`refresh` link in the Attributes table to get a list of the feature type attributes:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:65
msgid "GeoServer will do its best to figure out automatically the geometry type and the native srid, but they should always be double checked and eventually corrected. In particular having the right SRID (spatial reference id) is key to have spatial queries actually work. In many spatial databases the SRID is equal to the EPSG code for the specific spatial reference system, but that is not always true (e.g., Oracle has a number of non EPSG SRID codes)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:67
msgid "Specify a valid SRID."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:71
msgid "Forcing manually 4326 SRID in this case"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:73
msgid "If stable feature ids are desired for the view's features one or more column providing a unique identification for the features should be checked in the ``Indentifier`` column. Always make sure those attributes generate a actually unique key, or filtering and WFS clients will mishbehave."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:75
msgid "Once the query and the attribute details are set press :guilabel:`Save` and the usual new layer configuration page will show up. That page will have a link to a SQL view editor at the bottom of the ``Data`` tab:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:80
msgid "Make sure the CRS is ``EPSG:4326`` and **write manually** ``(-180,-90,180,90)`` values in the :guilabel:`Bounding Boxes` sections."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:87
msgid "At this point the new WMS Layer is being published with GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:89
msgid "**Creating a parametric SQL view**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:91
msgid "As a rule of thumb use SQL parameter substitution only if the required functionality cannot be obtained with safer means, such as dynamic filtering (CQL filters) or SLD parameter substitution. Only use SQL parameters as a last resort, improperly validated parameters can open the door to `SQL injection attacks <http://en.wikipedia.org/wiki/SQL_injection>`_."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:93
msgid "A parametric SQL view is based on a SQL query containing parameters whose values can be dinamically provided along WMS or WFS requests. A parameter is bound by % signs, can have a default value, and should always have a validation regular expression."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:95
msgid "In order to create a parametric SQL view performs the steps 1 and 2 like before and then insert the following parameters:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:99
msgid "Parametric SQL View configuration"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:111
msgid "The query defines two parameters ``%MIN_OBS_YEAR%`` and ``%MAX_OBS_YEAR%``."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:113
msgid "Click on the :guilabel:`Guess parameters from SQL`. GeoServer will automatically create fields with the parameters spcified in the view:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:118
msgid "Always provide default values for each parameter in order to let the layer work properly and also be sure the regular expression for the values validation are correct."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:121
msgid "Examples of Regular Expressions:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:123
msgid "``^[\\d\\.\\+-eE]+$`` will check that the parameter value is composed with valid elements for a floating point number, eventually in scientific notation, but will not check that the provided value is actually a valid floating point number"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:124
msgid "``[^;']+`` will check the parameter value does not contain quotes or semicolumn, preventing common sql injection attacks, without actually imposing much on the parameter value structure"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:126
msgid "Fill in some default values for the parameters, so that GeoServer can run the query and inspect the results in the next steps. Set ``MAX_OBS_YEAR`` to 2020 and ``MIN_OBS_YEAR`` to 0."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:128
msgid ":guilabel:`Refresh` the attributes, check the Geometry SRID and publish the layer like before. Also assign the ``storm_track_interval`` style to the layer as Default Style."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:134
msgid "Click on the :guilabel:`OpenLayers` on the :guilabel:`Layer Preview` list for :guilabel:`v_storm_track_interval` layer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:136
msgid "At a first glance you won't see anything since the layer is using the default parameters for the observation years. Specify two years for the view adding this parameter at the end of the GetMap Request:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:138
msgid "``&viewparams=MIN_OBS_YEAR:2000;MAX_OBS_YEAR:2000``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:140
msgid "You should obtain a request like this:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:147
msgid "Now you are able to see the hurricanes from the parametric view and also dynamically choose the observation years interval of interest."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_sqllayers.rst:151
msgid "Parametric SQL View OL preview"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wfscascade.rst:7
msgid "Adding a WFS Cascade Layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wfscascade.rst:9
msgid "GeoServer has the ability to load data from a remote Web Feature Server (WFS). This is useful if the remote WFS lacks certain functionality that GeoServer contains. For example, if the remote WFS is not also a Web Map Server (WMS), data from the WFS can be cascaded through GeoServer to utilize GeoServer's WMS. If the remote WFS has a WMS but that WMS cannot output KML, data can be cascaded through GeoServer's WMS to output KML."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wfscascade.rst:14
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:16
msgid "**Configuration**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wfscascade.rst:16
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:18
msgid "The configuration as usage of the cascaded layers follows GeoServer traditional ease of use."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wfscascade.rst:24
msgid "Select :guilabel:`Web Feature Server` from the set of available Vector Data Sources."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wfscascade.rst:26
msgid "Specify a proper name (as an instance, :file:`wfs-cascade`) in the :guilabel:`Data Source Name` field of the interface."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wfscascade.rst:27
msgid "Specify :file:`http://demo1.geo-solutions.it/geoserver-enterprise/ows?service=wfs&version=1.0.0&request=GetCapabilities` as the URL of the sample data in the :guilabel:`Capabilities URL` field."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wfscascade.rst:31
msgid "Make sure that the HTTP Authentication fields match the remote server authorization you have on it (In this case the server is open so we don't need them)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wfscascade.rst:35
msgid "Publish the layer by clicking on the :guilabel:`publish` link near the `geosolutions_country` layer name. Notice that you can also add more layers later."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wfscascade.rst:43
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:46
msgid "At this point the new WMS Layer is being published with GeoServer. You can use the layer preview to inspect the data."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:7
msgid "Adding a WMS Cascade Layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:9
msgid "WMS cascading allows to expose layers coming from other WMS servers as if they were local layers. This provides for some interesting advantages:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:11
msgid "Clients connecting to your SDI need to care about less points of origin, which might be important for high security networks"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:12
msgid "It is now possible to ask for maps in formats not supported by the original server, or to reproject the maps in projections not supported by the original server (GeoServer supports out of the box almost 5000 different coordinate reference systems)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:13
msgid "It is now possible to mix the layers with local ones to generate print oriented formats such as PDF"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:14
msgid "It is now possible to provide more informations about the layer, such as a better description, more keywords, which will benefit all clients, in particular catalogues harvesting informations from your capabilities document"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:26
msgid "Select :guilabel:`WMS - Cascades a remote Web Map Service` from the set of available Other Data Sources."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:31
msgid "Specify a proper name (as an instance, :file:`geoserver-enterprise`) in the :guilabel:`Data Source Name` field of the interface."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:32
msgid "Specify :file:`http://demo1.geo-solutions.it/geoserver-enterprise/ows?service=wms&version=1.1.1&request=GetCapabilities` as the URL of the sample data in the :guilabel:`Capabilities URL` field."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\add_wmscascade.rst:38
msgid "Publish the layer by clicking on the :guilabel:`publish` link near the `GeoSolutions:ne_shaded` layer name. Notice that you can also add more layers later."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\adding_base_types.rst:7
msgid "Adding base types"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\adding_base_types.rst:9
msgid "This section explain how to add some of the base data types into GeoServer. As an example we will learn how to insert a ShapeFile and GeoTIFF into GeoServer, as well as how to import a Shapefile into PostGIS and then publish it from there."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\adding_base_types.rst:12
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gs_data_dir.rst:12
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling.rst:11
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_vector.rst:12
msgid "What you will learn"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\adding_base_types.rst:14
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gs_data_dir.rst:14
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling.rst:13
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_vector.rst:14
msgid "In this section you will:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\creating_setting.rst:8
msgid "Creating and setting a new GeoServer Data Directory"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\creating_setting.rst:11
msgid "Generally if GeoServer is running in Web Archive mode inside of a servlet container, like in this Workshop, the data directory is located at ``<web application root>/data`` (the data directory contains the GeoServer configuration data)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\creating_setting.rst:13
msgid "The first thing to do is to correctly configure the GEOSERVER_DATA_DIR. To increase the portability of their data and to facilitate updates GeoServer, in the default Workshop configuration the ``GEOSERVER_DATA_DIR`` is configured under the directory::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\creating_setting.rst:19
msgid "Generally this is not an issue, but if you run the system from the LiveDVD this folder resides in memory. The first thing to do is to move this folder into a local persistent storage."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\creating_setting.rst:22
msgid "Move the ``GEOSERVER_DATA_DIR`` somewhere in the persistent storage using the command::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\creating_setting.rst:27
msgid "Make a symbolic link to the ``GEOSERVER_DATA_DIR`` by issuing the command::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\creating_setting.rst:32
msgid "Check that the user ``geosolutions`` has permissions to read/write all the files/folder inside the ``GEOSERVER_DATA_DIR``."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\creating_setting.rst:34
msgid "Instead of creating a symbolic link you can configure GeoServer in order to allow it to point to the new ``GEOSERVER_DATA_DIR``. To do that edit the file :file:`/opt/tomcat-geoserver/webapps/geoserver/WEB-INF/web.xml` and modify the context param ``GEOSERVER_DATA_DIR``."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:6
msgid "Adding a GDAL Supported Format"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:7
msgid "In case the GDAL libraries are available, it is possible to access to several GDAL's supported data formats. Actually, the available GDAL plugins allow to support DTED, EHdr, ERDASImg, MrSID, JP2K (via MrSID Driver) and NITF data formats. Moreover, in case a valid license have been purchased and the proper native library is available, also ECW, JP2K (via ECW) and JP2K (via Kakadu) are supported. This section provides instructions to add and publish a MrSID, ECW and JP2K datasets."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:14
msgid "This assumes the GeoServer image GDAL plug-in is already installed. The GDAL plugin is normally an extension."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:16
msgid "If the store described in this section are not avaiable, install the 'geoserver-2.2-SNAPSHOT-gdal-plugin' from :file:`%TRAINING_ROOT%\\\\data\\\\plugins\\\\`. Just decompress the zip file into  :file:`%TRAINING_ROOT%\\\\webapps\\\\geoserver\\\\WEB-INF\\\\lib\\\\` and restart GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:19
msgid "MrSID Data Set"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:27
msgid "Select :guilabel:`MrSID - MrSID Coverage Format` from the set of available Raster Data Sources."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:31
msgid "Specify a proper name (as an instance, :file:`c3008957_nes_20`) in the :guilabel:`Data Source Name` field of the interface."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:33
msgid "Specify :file:`file:%TRAINING_ROOT%/data/user_data/c3008957_nes_20/c3008957_nes_20.sid` as URL of the sample data in the :guilabel:`Connections Parameter's - URL` field. (replace **%TRAINING_ROOT%** with your current training root directory)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:39
msgid "Assign a proper layername (e.g :file:`c3008957_nes_20`) then publish the layer by clicking on the :guilabel:`publish` link."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:43
msgid "click on :guilabel:`Save` when done."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:45
msgid "At this point the MrSID data is being published with GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:47
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:86
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:128
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:54
msgid "Click the :guilabel:`Layer Preview` link in the left GeoServer menu."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:49
msgid "Look for a *geosolutions:c3008957_nes_20* layer and click the :guilabel:`OpenLayers` link beside of it."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:56
msgid "ECW Data Set"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:58
msgid "Attention, you need a license in order to use ECW data sets. Here we are using a free distributed ECW file only for demonstration."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:60
msgid "ECW (Enhanced Compression Wavelet) is a proprietary wavelet compression image format optimized for aerial and satellite imagery."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:68
msgid "Select :guilabel:`ECW - ECW Coverage Format` from the set of available Raster Data Sources."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:72
msgid "Specify a proper name (as an instance, :file:`TerraColor_Sydney_AU_15m`) in the :guilabel:`Data Source Name` field of the interface."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:74
msgid "Specify :file:`file:%TRAINING_ROOT%/data/user_data/tc_sydney_au_ecw/TerraColor_Sydney_AU_15m.ecw` as URL of the sample data in the :guilabel:`Connections Parameter's - URL` field (replace **%TRAINING_ROOT%** with your current training root directory)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:80
msgid "Assign a proper layername (e.g :file:`TerraColor_Sydney_AU_15m`) then publish the layer by clicking on the :guilabel:`publish` link."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:84
msgid "At this point the ECW data is being published with GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:88
msgid "Look for a *geosolutions:TerraColor_Sydney_AU_15m* layer and click the :guilabel:`OpenLayers` link beside of it."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:96
msgid "JP2K Data Set"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:98
msgid "JPEG 2000 is a image coding system that uses state-of-the-art compression techniques based on wavelet technology."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:106
msgid "Select :guilabel:`JP2ECW - JP2 (ECW) Coverage Format` from the set of available Raster Data Sources."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:108
msgid "We used :guilabel:`JP2ECW - JP2 (ECW) Coverage Format` because :guilabel:`JP2MrSID - JP2 (MrSID) Coverage Format` is not fully stable, and may not work properly especially with several Linux distributions."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:112
msgid "Specify a proper name (as an instance, :file:`TerraColor_Sydney_AU_15m_JP2K`) in the :guilabel:`Data Source Name` field of the interface."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:114
msgid "Specify :file:`file:%TRAINING_ROOT%/data/user_data/tc_sydney_au_jp2/TerraColor_Sydney_AU_15m.jp2` as URL of the sample data in the :guilabel:`Connections Parameter's - URL` field. (replace **%TRAINING_ROOT%** with your current training root directory)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:120
msgid "Assign a proper layername (e.g :file:`TerraColor_Sydney_AU_15m_JP2K`) then publish the layer by clicking on the :guilabel:`publish` link."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:126
msgid "At this point the JP2K data is being published with GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gdal_format.rst:130
msgid "Look for a *geosolutions:TerraColor_Sydney_AU_15m_JP2K* layer and click the :guilabel:`OpenLayers` link beside of it."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gs_data_dir.rst:7
msgid "Managing GeoServer Data Directory"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\gs_data_dir.rst:9
msgid "This section explain how to manage the GeoServer Data Directory."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\index.rst:7
msgid "Adding Data to GeoServer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:4
msgid "Adding an Image Mosaic to GeoServer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:6
msgid "This section covers the task of adding and publishing a ImageMosaic file with GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:23
msgid "Select the :guilabel:`ImageMosaic` link and click it."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:27
msgid "Add a new Image Mosaic"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:29
msgid "On the :guilabel:`Add Raster Data Source` page enter :file:`${TRAINING_ROOT}/data/user_data/aerial` (on Windows :file:`%TRAINING_ROOT%\\\\data\\\\user_data\\\\aerial\\\\`) in the :guilabel:`URL` field (or browse the filesystem clicking on :guilabel:`Browse`), \"boulder_bg\" in the :guilabel:`Data Source Name` and :guilabel:`Description` fields, and click :guilabel:`Save`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:33
msgid "Specifying store parameters"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:35
msgid "After saving, you will be taken to a page that lists all the layers in the store and gives you the option to publish any of them. Click :guilabel:`Publish`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:39
msgid "Publishing a layer from the store"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:41
msgid "The :guilabel:`Coordinate Reference Systems` should be automatically populated, as well as the :guilabel:`Name`, :guilabel:`Title` and :guilabel:`Bounding Boxes` fields."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:43
msgid "Change the :guilabel:`Name` and :guilabel:`Title` into **boulder_bg** as shown in the figure."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:45
msgid "The CRS and BBox fields are auto-filled with information taken from the underlying files. The coverage options section is filled with default parameters (which will be discussed later on in the training)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:51
msgid "The coverage layer gui for the boulder_bg layer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:56
msgid "The coverage bands details"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:58
msgid "Scroll to the bottom of the page and then click :guilabel:`Save`. If all went well you should see something like this:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:62
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:53
msgid "After a successful save."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:64
msgid "In the :guilabel:`Layer Preview` section click on the OpenLayers link to preview the layer in an interactive viewer, filtering by `boulder_bg` name:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\mosaic.rst:68
msgid "Mosaic preview."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:7
msgid "Adding a Postgis layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:9
msgid "This task shows how to add a PostGIS layer into GeoServer:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:14
msgid "If you are not already logged in, on the Welcome page locate the :guilabel:`Login` form located at the top right corner, and enter the username \"admin\" and password \"Geos\"."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:27
msgid "Select the :guilabel:`PostGIS` link and click it."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:32
msgid "Add new PostGIS Store"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:34
msgid "On the :guilabel:`New Vector Data Source` page fill the following parameter:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:36
msgid ":guilabel:`Data source name`, 'shape'"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:37
msgid ":guilabel:`port`, '5434'"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:38
msgid ":guilabel:`database`, 'shape' the name of the database created in previous workshop step."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:39
msgid ":guilabel:`user`, 'geosolutions' the name of the user database owner."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:40
msgid ":guilabel:`password`, 'Geos' the user password."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:42
msgid "and click :guilabel:`Save`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:48
msgid "Setting database connection parameters"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:50
msgid "After saving, you will be taken to a page that lists all the layers in the PostGIS database and gives you the option to publish any of them. Click :guilabel:`Publish`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:54
msgid "Publishing a layer from the PostGIS table"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:56
msgid "The :guilabel:`Name` and :guilabel:`Title` fields should be automatically populated. Fill the :guilabel:`Declared SRS` field to set the Coordinate Reference Systems and generate the bounds for the layer by clicking the :guilabel:`Compute from data` and :guilabel:`Compute from native bounds` buttons in the :guilabel:`Bounding Boxes` section"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:62
msgid "Populating fields and generating the layer bounding box"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\postgis_lay.rst:76
msgid "At this point the PostGIS layer has been added and is ready to be served by GeoServer. Use the layer preview to view its contents, filtering on the 'main_road' name."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\shp_postgis.rst:7
msgid "Loading a Shapefile into PostGIS"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\shp_postgis.rst:9
msgid "This task shows how to load a ShapeFile into PostGIS database:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\shp_postgis.rst:11
msgid "Open the terminal window and enter the following command and press enter to creating a new database named 'shape':"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\shp_postgis.rst:13
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\shp_postgis.rst:24
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:88
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:134
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:186
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:200
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:210
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:247
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:276
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:373
msgid "Linux::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\shp_postgis.rst:17
#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\shp_postgis.rst:28
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:94
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:130
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:192
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:204
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:214
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:253
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:286
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:379
msgid "Windows::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\shp_postgis.rst:22
msgid "Enter the following command and press enter to load the ShapeFile into 'shape' database:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\shp_postgis.rst:32
msgid "The ShapeFile will be loaded within the 'main_roads' table of the 'shape' database. The following screenshot shows some of the table contents in ``pgAdmin III``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\shp_postgis.rst:36
msgid "A PostGIS table by ShapeFile"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\shp_postgis.rst:38
msgid "In the :ref:`next <geoserver.postgis_lay>` section we will see how to add a PostGIS layer into GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:7
msgid "Structure of the GeoServer Data Directory"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:9
msgid "The following is the GEOSERVER_DATA_DIR structure::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:38
msgid "**File**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:39
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:39
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:22
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:82
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:26
msgid "**Description**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:40
msgid "``coverages``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:41
msgid "Contains some demo raster layers for this training"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:42
msgid "``data``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:43
msgid "Not to be confused with the ``GeoServer data directory`` itself, the data directory is a location where actual data can be stored. This directory is commonly used to store shapefiles and raster files but can be used for any data that is file based. The main benefit of storing data files inside of the data directory is portability."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:44
msgid "``demo``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:45
msgid "The demo directory contains files which define the sample requests available in the Sample Request Tool."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:46
msgid "``gwc``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:47
msgid "This directory holds the cache created by the embedded GeoWebCache service."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:48
msgid "``gwc-layers``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:49
msgid "This directory holds the configuration files created by the embedded GeoWebCache service for each layer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:50
msgid "``layergroups``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:51
msgid "Contains information on the layer groups configurations."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:52
msgid "``logs``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:53
msgid "This directory contains the GeoServer logging files (log file and logging properties files)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:54
msgid "``palettes``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:55
msgid "The palettes directory is used to store pre-computed Image Palettes. Image palettes are used by the GeoServer WMS as way to reduce the size of produced images while maintaining image quality."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:56
msgid "``security``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:57
msgid "The security directory contains all the files used to configure the GeoServer security subsystem. This includes a set of property files which define access roles, along with the services and data each role is authorized to access."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:58
msgid "``styles``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:59
msgid "The styles directory contains a number of Styled Layer Descriptor (SLD) files which contain styling information used by the GeoServer WMS."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:60
msgid "``temp``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:61
msgid "Temporary directory, used by the WPS service."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:62
msgid "``user_projections``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:63
msgid "The user_projections  directory contains extra spatial reference system definitions. The epsg.properties can be used to add new spatial reference systems, whilst the epsg_override.properties file can be used to override an official definition with a custom one."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:64
msgid "``validation``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:65
msgid "This directory contains the validation rules"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:66
msgid "``workspaces``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:67
msgid "The various workspaces directories contain metadata about ``stores`` and ``layers`` which are published by GeoServer. Each layer will have a layer.xml file associated with it, as well as either a coverage.xml or a featuretype.xml file depending on whether it's a raster or vector."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:68
msgid "``www``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:69
msgid "The www directory is used to allow GeoServer to act like a regular web server and serve regular files. While not a replacement for a full blown web server the www  directory can be useful to easily serve OpenLayers map applications (this avoids the need to setup a proxy in order to respect the `same origin policy <http://en.wikipedia.org/wiki/Same_origin_policy>`_)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:70
msgid "``global.xml``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:71
msgid "Contains settings that go across services, including contact information, JAI settings, character sets and verbosity."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:72
msgid "``gwc-gs.xml``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:73
msgid "Contains various settings for the GeoWebCache service."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:74
msgid "``logging.xml``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:75
msgid "Specifies the logging level, location, and whether it should log to std out."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:76
msgid "``wcs.xml``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:77
msgid "Contains the service metadata and various settings for the WCS service."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:78
msgid "``wfs.xml``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:79
msgid "Contains the service metadata and various settings for the WFS service."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:80
msgid "``wms.xml``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\001_adding_data\structure.rst:81
msgid "Contains the service metadata and various settings for the WMS service."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:4
msgid "Examine an existing style"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:6
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:156
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:11
msgid "From the GeoServer `Welcome Page <http://localhost:8083/geoserver>`_ navigate to :guilabel:`Style`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:10
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:160
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:15
msgid "Navigating to Style configuration"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:12
msgid "From the style list select the `citylimits` style"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:16
msgid "The styles list"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:18
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:109
msgid "Inside the *Style Editor* we have the following style:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:92
msgid "The most important section are:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:94
msgid "The ``<Rule>`` tag combines a number of symbolizers (we have also the possibility to define the OGC filter) to define the portrayal of a feature."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:95
msgid "The ``<PolygonSymbolizer>`` styles polygons and contain styling information about their border (stroke) and their fill."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:96
msgid "The ``<TextSymbolizer >`` specifies text labels and their style:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:98
msgid "``<Label>`` Specifies the content of the text label"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:99
msgid "``<Font>`` Specifies the font information for the labels."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:100
msgid "``<LabelPlacement>`` Sets the position of the label relative its associate feature."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:101
msgid "``<Fill>`` Determines the fill color of the text label."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:102
msgid "VendorOption ``maxDisplacement`` Controls the displacement of the label along a line. Normally GeoServer would label a polygon in its centroid, provided the location is not busy with another label and that the label is not too big compare to the polygon, or not label it at all otherwise. When the maxDisplacement is set, the labeller will search for another location within maxDisplacement pixels from the pre-computed label point."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:103
msgid "VendorOption ``Group`` Sometimes you will have a set of related features that you only want a single label for. The grouping option groups all features with the same label text, then finds a representative geometry for the group."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:105
msgid "The ``<MaxScaleDenominator>`` and ``<MinScaleDenominator>`` are used to apply a particular SLD rule to a specific scale. The above SLD makes sure that the Boulder border disappear once we zoom in enough to see the city details. An alternative approach could be to keep the layer showing, but switch it to a different style, for example a think red line, so that the details of the city are not disturbed by the polygon fill."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:107
msgid "Now from the style list select the `rivers` style."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:143
msgid "This is a very simple Line style. Take into account the LineSymbolizer that styles lines. Lines are one-dimensional geometry elements that contain position and length. Lines can be comprised of multiple line segments."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:146
msgid "The outermost tag is the <Stroke> tag. This tag is required, and determines the visualization of the line:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:148
msgid "``stroke`` Specifies the solid color given to the line, in the form #RRGGBB.  Default is black (``#000000``)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:149
msgid "``stroke-width`` Specifies the width of the line in pixels.  Default is ``1``."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:151
msgid "In this case ``MaxScaleDenominator`` is used to make sure that the rivers start showing up when we are zoomed in enough, and in particular as the city borders disappear"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:154
msgid "Create a simple style for points"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:162
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:17
msgid "Click :guilabel:`New`"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:166
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:21
msgid "Adding a new style"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:168
msgid "Enter \"landmarks\" in the :guilabel:`Name` field."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:172
msgid "Creating a new style"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:174
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:65
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:272
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:46
msgid "In the :guilabel:`SLD Editor` enter the following XML:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:212
msgid "Take into account:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:215
msgid "``WellKnownName`` The name of the common shape. Options are circle, square, triangle, star, cross, or x. Default is square."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:215
msgid "``fill`` Specifies how the symbolizer should be filled.  Options are a ``<CssParameter name=\"fill\">`` specifying a color in the form ``#RRGGBB``, or ``<GraphicFill>`` for a fill made with a repeated graphic."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:216
msgid "``fill-opacity`` Determines the opacity (transparency) of symbolizers.  Values range from ``0`` (completely transparent) to ``1`` (completely opaque).  Default is ``1``."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:218
msgid "Then click :guilabel:`Save` button."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:220
msgid "Open the  ``geosolutions:bptlandmarks`` vector layer, but this time associate the style as a \"Additional Style\":"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:224
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:233
msgid "Open the Layers Preview"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:226
msgid "Click on the :guilabel:`Save` button."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_simple.rst:228
msgid "Preview the ``geosolutions:bptlandmarks`` layer, which with the default style should be empty due to scale dependencies. Then click the option button at the top left of the map and select the ``landmarks`` style in the style drop down:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:7
msgid "Adding a Style"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:9
msgid "The most important function of a web map server is the ability to style and render data. This section covers the task of adding a new style to GeoServer and configuring the default style for a particular layer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:23
msgid "Enter \"mainrd\" in the :guilabel:`Name` field and notice the file upload dialogue :guilabel:`SLD file`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:27
msgid "Specifying style name and populating from a file."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:29
msgid "Navigate to the workshop (on Linux) :file:`${TRAINING_ROOT}/data/user_data/` directory (on Windows :file:`%TRAINING_ROOT%\\\\data\\\\user_data\\\\`), select the :file:`foss4g_mainrd.sld` file, and click :guilabel:`Upload`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:32
msgid "In GeoServer, styles are represented via SLD (Styled Layer Descriptor) documents. SLD is an XML format for specifying the symbolization of a layer. When an SLD document is uploaded the contents are shown in the text editor.  The editor can be used to edit the contents of the SLD directly."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:34
msgid "Add the new style by clicking :guilabel:`Submit`. Once it's save, you should see something like this:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:38
msgid "Submitting style"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:40
msgid "After having created the style, it's time to apply it to a vector layer. Click on the :guilabel:`Layers` link."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:44
msgid "Navigating to Layers"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:46
msgid "Select the \"Mainrd\" on the `Layers` page."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:50
msgid "Selecting a layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:52
msgid "Select the :guilabel:`Publish` tab."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:56
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:63
msgid "Publish tab"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:58
msgid "Assign the new created style \"mainrd\" as the default style."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:65
msgid "Many new users mistake the :guilabel:`Available Styles` for the :guilabel:`Default Style`, please take into account that they are different, the default one allows that style to be used implicitly when no style is specified in a map request, while the available ones are just optional compatible styles."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:67
msgid "Geoserver 2.x assigns a default style depending on the geometry of the objects and the type, for example: `line`, `poly`, `raster`, `point`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:69
msgid "Scroll to the bottom of the page and hit :guilabel:`Save`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\add_style.rst:71
msgid "Use the map preview to show how the style, please note you'll have to zoom in once to show the data due to the map scale filters (``MaxScaleDenominator`` directive in the SLD)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:4
msgid "Creating a Base Map with a Layer Group"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:6
msgid "The best way to easily set-up a map with more than one layer for consumption is to create a `Layer Group`, that is what we are going to do in this section."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:8
msgid "Locate the :guilabel:`Layer Group` link and click it."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:13
msgid "Layer Group link"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:15
msgid "Click the :guilabel:`Add new layer group` link."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:19
msgid "Add new layer group link"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:21
msgid "Name it ``test``."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:25
msgid "Click the `Add layer` link:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:29
msgid "Add new layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:31
msgid "Select the \"Mainrd\" layer in the popup window."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:35
msgid "Select a layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:37
msgid "Add also \"BoulderCityLimits\" and \"bplandmarks\", the final list should look like this:."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:41
msgid "List of layers for the group"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:43
msgid "You can use the green arrows to adjust the ordering of the layers until it looks like the above figure."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:45
msgid "Click the generate bounds button to have GeoServer compute the group bounds from the layers inside of it:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:47
msgid "Scroll to the bottom of the page and then click :guilabel:`Save`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:55
msgid "The autogenerated bounds may be too large and you may experience a bad feeling when previewing the map. You can optionally reduce the layer group bounds by inserting manually the bbox values. Good values are the following: minx = 3.057.566,8646; maxx = 3.079.500,65246; miny = 1.241.929,35617; maxy = 1.257.467,5777"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:58
msgid "The layer group is now ready to be consumed:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:62
msgid "Go to the :guilabel:`Layer Preview` link at the bottom of the lefthand menu."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:66
#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:17
msgid "Layer Preview"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:68
msgid "Find the `test` layer group and click on the :guilabel:`OpenLayers` link. You will see a slippy map with all the configured layers of the Boulder district. You can control zoom by using the mouse wheel, pan by dragging, and zoom by window holding ``SHIFT`` pressed while dragging."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:72
msgid "OpenLayers view"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:74
msgid "Check the browser's address bar for an interesting sample WMS request for the layer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:76
msgid "As you might have noticed before, a larger, more realistic group has already been configured for you. It is named ``boulder``. Have a look at its definition and add to this the `Mainrd` layer. Then using the green arrows move the layer at the following position (see the screenshot)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:80
msgid "A new layer inside the existing layer group."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:82
msgid "Then use the Map Preview to display it."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:84
msgid "Try clicking in the middle of the map. A couple of tables with more information about the vector features that have been clicked should appear at the bottom."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:88
msgid "Feature info"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:90
msgid "Try zoomin in more and more. New layers should start to appear. This is scale dependent styling."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:92
msgid "Now let's see how desktop clients handle the layer group, and how we can change the way the see it."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:94
msgid "Go to the command line, enter the workshop directory, if you haven't done that yet, run ``setenv.bat`` and then ``udig.bat``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:96
msgid "Once both GeoServer and uDig are up, organize their Windows so that you can see GeoServer and uDig ones at the same time"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:98
msgid "Now go to the GeoServer home page, where all the capabilities links are kept, take the WMS 1.1.1 one, and drag&drop it into uDig \"Catalog\" tab to import the WMS as a uDig data source:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:102
msgid "Look at the layer tree. The ``boulder`` group is visible as a simple layer, and all the layers it contains are actually shown at the same level as the group."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:106
msgid "Let's change it so that the layer group internal structure is shown. Go back to the \"boulder\" layer group page, and change its \"mode\" to \"Named tree\", then press the \"Save\" button"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:110
msgid "We need to make uDig aware of the change. Right click the root of the the capabilities tree and choose the \"Reset\" command"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\base_map.rst:114
msgid "Now most of the layers are contained inside the \"boulder\" group"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:4
msgid "Charting"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:6
msgid "GeoServer can produce maps with charts through the chart extension. Bundled with GeoServer is an open source version of the (deprecated) `Google Chart API <https://developers.google.com/chart/image/>`_ called `Eastwood Charts <http://www.jfree.org/eastwood/>`_."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:8
msgid "You can display bar or pie charts (Most Google Charts except for Google-o-meter and spider charts are supported by the Eastwood library but the same does not apply to the corresponding GeoServer extension) for each feature on your map. You can control colors or labels. You can use percentages that are in your data attributes or compute percentages from counts on the fly."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:11
msgid "How Charting Works"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:12
msgid "The Charting Extension makes usage of a URL inside the <ExternalGraphic> element of SLD documents. The URL used follows the Google Chart API syntax, but the chart is generated internally in GeoServer, hence no call to external services made removing any privacy or security concern and providing maximum performance. All the information about the chart that you want, such as chart data, size, colors, and labels, are part of the URL."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:14
msgid "Inside the URL we can use variable substitution for using the attributes of the underlying features that are read from the datasource allowing us to create stunning dynamic charts using our own data."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:16
msgid "An example of a chart created using an <ExternalGraphic> element is shown here below:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:26
msgid "All URLs start with https://chart? followed by the parameters that specify chart data and appearance. Parameters are name=value pairs, separated by an ampersand character (&), and parameters can be in any order, after the ?. All charts require at minimum the following parameters: *cht* (chart type), *chd* (data), and *chsv* (chart size). However, there are many more parameters for additional options, and you can specify as many additional parameters as the chart supports."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:28
msgid "We are now going to see examples and explanation for the various types of charts supported. First of all we will start with the standard features support by all the charts."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:31
msgid "Standard Features"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:33
msgid "All Chart URLs have the following format:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:39
msgid "The standard parameters as part of the above URL have the following meaning:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:42
msgid "The *cht* parameter allows us to control the type of charts; as an example *cht=p* can be used for a 2D (flat) Pie."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:44
msgid "The *chs* parameter allows us to control the size of charts; as an example *chs=500x200* specifies the chart size (width x height), in pixels. As an alternative we can use the <Size> element of external graphics (we'll show an example in the following."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:46
msgid "The *chd* parameter allows us to control the chart data; as an example *chd=t:60,40* can be used to provide tabular data to the diagram rendering system. We can use variable substitution and other GeoServer mechanisms to pass data sources value as the chart data. A typical example would be something like *chd=t:${100 * MALE / PERSONS},${100 * FEMALE / PERSONS}&amp* where *MALE*, *PERSONS* and *FEMALE* are attribute of GeoServer data sources."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:48
msgid "The *chl* parameter allows us to control the label of charts; as an example *chl=Male|Female* can be used to label a chart."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:51
msgid "Pie Charts"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:52
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:259
msgid "Quoting Wikipedia,"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:54
msgid "\"A pie chart (or a circle graph) is a circular chart divided into sectors, illustrating numerical proportion. In a pie chart, the arc length of each sector (and consequently its central angle and area), is proportional to the quantity it represents.\""
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:56
msgid "Let us know create a sample map using the Pie Charts element leveraging on the the data provided with the training. Afterwards we will review the various options."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:58
msgid "To print dynamic charts on a map using a Pie symbol over the United Stats map add a new style called :guilabel:`statespies` by adding the SLD provided below as indicated in this picture."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:63
msgid "Creating a new Dynamic Style"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:123
msgid "In order to have the :guilabel:`states` layer use this style with no additional indications, modify the default style of the :guilabel:`states` layer using the user interface to point to the newly created :guilabel:`statespies`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:128
msgid "Changing the default style of the states layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:130
msgid "Now go to the **Layer Preview** to view the new style in action."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:135
msgid "Previewing the states layer with the :guilabel:`statespies` applied"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:138
msgid "Pie Chart Options"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:140
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:333
msgid "Let us quickly analyse the components of the ExternalGraphic call, which follow the rules of a Google Charts API call:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:142
msgid "**Pie Chart Types**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:144
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:337
msgid "The *cht* parameter allows us to control the type of pie. Supported options are as follows:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:146
msgid "*cht=p* for a 2D (flat) Pie"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:148
msgid "*cht=p3* for a 3D (flat) Pie"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:150
msgid "*cht=pc* **is not supported**."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:152
msgid "**Pie Chart Data**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:154
msgid "``chd=t:${100 * MALE / PERSONS},${100 * FEMALE / PERSONS}`` the chart data is expressed in \"text\" format, and in particular, the first value is the result of 100 * MALE / PERSONS, where MALE and PERSONS are two attributes of feature being rendered"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:156
msgid "**Pie Chart Background**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:158
msgid "chf=bg,s,FFFFFF00: we state that the chart background fill is solid, white and   transparent. In articular, the color is expressed as RRGGBBAA, where AA is the alpha component, which controls transparency. In particular 0 is fully transparent, 255 is fully opaque"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:160
msgid "**Pie Chart Size**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:162
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:378
msgid "The size of the chart is controlled using the usual <Size> element of external graphics, an in particular, it's setup so that it's proportional to the PERSONS attribute via the expression: 20 + (PERSONS / 20,000,000) * 60."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:164
msgid "**Pie Chart Colors**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:166
msgid "We can specify the colors of all values, each value, or some values using the *chco* parameter. This override the usage of the default Background Fills *chf* parameter, hence it is optional."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:168
msgid "Syntax is as follows:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:174
msgid "for specifying individual colors for slices and"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:180
msgid "for specifying a gradient to be applied to the slices."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:182
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:369
msgid "where *color* is in `RRGGBB hexadecimal format <https://developers.google.com/chart/image/docs/chart_params#gcharts_rgb>`_."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:184
msgid "**Pie Chart Labels**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:186
msgid "We can specify labels for individual pie chart slices using the *chl* parameter."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:188
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:385
msgid "The syntax is a follows:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:194
msgid "**Pie Chart Rotation**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:196
msgid "Pie Chart Rotation can be achieved via the *chp* parameter. By default, the first series is drawn starting at 3:00, continuing clockwise around the chart."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:198
msgid "The syntax is as follows:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:204
msgid "Additional information on creating pie charts can be found `on the official pie charts documentation <https://developers.google.com/chart/image/docs/gallery/pie_charts>`_"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:206
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:394
msgid "A more comprehensive example can be found here below:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:251
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:435
msgid "The resulting image can be found here below:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:258
msgid "Bar Charts"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:261
msgid "\"A bar chart or bar graph is a chart with rectangular bars with lengths proportional to the values that they represent. The bars can be plotted vertically or horizontally. A vertical bar chart is sometimes called a column bar chart.\""
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:263
msgid "Let us know create a sample map using the Bar Charts element leveraging on the the data provided with the training. Afterwards we will review the various options."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:265
msgid "To print dynamic charts on a map using a Bar symbol over the United Stats map add a new style called :guilabel:`statesbars` by adding the SLD provided below as indicated in this picture."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:270
msgid "Creating a new Dynamic Style with Bar Charts"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:331
msgid "Bar Chart Options"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:335
msgid "**Bar Chart Types**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:339
msgid "*cht=bvg* for simple 2D vertical Bars layed out as groups."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:341
msgid "*cht=bhg* for simple 2D horizontal Bars layed out as groups."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:343
msgid "*cht=bvs* for simple 2D vertical Bars layed out as stacks."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:345
msgid "*cht=bvo* **is not supported**."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:348
msgid "**Bar Chart Data**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:350
msgid "``chd=t:${100 * MALE / PERSONS},${100 * FEMALE / PERSONS}`` the chart data is expressed in \"text\" format, and in particular, the first value is the result of ``100 * MALE / PERSONS``, where MALE and PERSONS are two attributes of feature being rendered. This type of sequence is good for grouped bar charts. Values for successive groups are separated by ``|``. Values within the same group are separated by comma."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:352
msgid "**Bar Chart Colors**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:354
msgid "Note that by default, all series are displayed in the same color; if you don't specify different colors for different series, it will be hard to distinguish that there are multiple series in your chart."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:356
msgid "You can specify the colors of individual bars, individual series, or multiple series using the *chco* parameter. If you don't specify a different color for each series, all series will be the same color. Syntax is as follows:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:362
msgid "or"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:372
msgid "**Bar Chart Background**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:374
msgid "``chf=bg,s,FFFFFF00``: we state that the chart background fill is solid, white and   transparent. In particular, the color is expressed as RRGGBBAA, where AA is the alpha component, which controls transparency. In particular 0 is fully transparent, 255 is fully opaque."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:376
msgid "**Bar Chart Size**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:381
msgid "**Bar Chart Labels**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:383
msgid "Bar charts support standard axis labels, but labels along the base of the bars are assigned to individual bars, rather than spread out along the bar chart. (To spread out labels evenly, use the *chxp* parameter as described below.) If you specify axis labels but don't specify custom labels along the bar axis, the bar labels will be the index number of each bar or group of bars. You can customize axis labels using the *chxl* parameter."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\charting.rst:392
msgid "Additional information on creating pie charts can be found `on the official bar chart documentation <https://developers.google.com/chart/image/docs/gallery/bar_charts>`_"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:5
msgid "Cross layer filtering with GeoServer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:7
msgid "Normal GeoServer operation allows a filter to be applied on each layer in isolation, based on its attribute and external information (geometry, values) provided by the user. Cross layer filtering is instead the ability to select features from one layer that bear some relationship with features coming from another layer. Common questions that cross layer filters can help answering are:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:13
msgid "find all the ice cream stores located in a public park (point vs polygon)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:14
msgid "find all bus stops within 100m from the National Bank subsidiaries (point vs point, with distance reference)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:15
msgid "find all coastal roads (line VS polygon, assuming we have a set of polygons representing the water areas)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:17
msgid "In order to solve these questions with a vanilla GeoServer a client would have to first use WFS to gather all the geometries satisfying the base conditions (e.g., find the National Bank Subsidiaries), load and unite them, and then issue a second request to the server in order to get the data from the other layer (e.g., the bus stops within 100m from the previously loaded points)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:24
msgid "Round trips without cross layer filtering"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:27
msgid "The querylayer module"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:29
msgid "The querylayer extension, already installed in the workshop GeoServer instance, provides three new filter functions that can be used to avoid the client/server extra round trips, and have the server handle the secondary geometries collection instead."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:37
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:31
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:64
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:36
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:33
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:63
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:80
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:82
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:115
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:21
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:54
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:88
msgid "**Name**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:38
msgid "**Arguments**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:40
msgid "querySingle"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:41
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:44
msgid "``layer``: String, ``attribute``:String, ``filter``:String"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:42
msgid "Queries the specified ``layer``applying the specified (E)CQL ``filter`` and returns the value of ``attribute`` from the first feature in the result set. The layer name should be qualified (e.g. ``topp:states``), the filter can be ``INCLUDE`` if no filtering is desired"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:43
msgid "queryCollection"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:45
msgid "Queries the specified ``layer``applying the specified (E)CQL ``filter`` and returns the list of the values from ``attribute`` out of every single feature in the result set. The layer name should be qualified (e.g. ``topp:states``), the filter can be ``INCLUDE`` if no filtering is desired. Will throw an exception if too many results are being collected (see the memory limits section for details)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:47
msgid "collectGeometries"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:48
msgid "``geometries``: a list of Geometry objects"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:49
msgid "Turns the list of geometries into a single Geometry object, suitable for being used as the reference geometry in spatial filters. Will throw an exception if too many coordinates are being collected (the results of queryCollection cannot be used as is)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:51
msgid "These filter functions can be used directly in CQL filters, OGC filters and SLD, meaning they are available both from WMS and WFS."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:56
msgid "Finding all polygonal landmarks crossing a trail"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:58
msgid "The `following map <http://localhost:8083/geoserver/geosolutions/wms/reflect?layers=geosolutions:bplandmarks,Trails&format=application/openlayers&width=512&height=512&BBOX=-105.31,39.97,-105.26,40.2>`_ , obtained using the WMS reflector to keep the URL short, shows all polygonal landmarks and trails in Boulder (trails are visible when zooming-in due to scale dependencies)::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:65
msgid "Polygonal landmarks and trails in Boulder"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:67
msgid "Now, let's assume we want to find all polygonal landmarks crossing any trail using the above filter functions. The first step would be to locate all the trails and extract their geometry attribute (``the_geom``)::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:72
msgid "The above builds a list of geometries that we want to turn into a single ``MULTILINESTRING``, in order to use it as a reference for a ``INTERSECTS`` filter. So we'll call ``collectGeometries``::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:76
msgid "Now that we have all the trails in a single geometry object we can use it to build a intersection filter with the polygonal landmarks::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:80
msgid "Since the map contains two layers and we only want to filter on the first, the final CQL filter used in the GetMap request will be::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:84
msgid "The result is that only two polygonal landmarks, the Boulder Mountain Park, and the smaller Buckingham Park, cross any trail:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:88
msgid "Polygonal landmarks intersecting trails in Boulder"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:91
msgid "Finding all buildings located inside a park"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:93
msgid "In this case we'll start with `this map <http://localhost:8083/geoserver/geosolutions/wms/reflect?layers=geosolutions:bplandmarks,bbuildings&format=application/openlayers&width=512&height=512&&BBOX=-105.29,40.01,-105.28,40.02>`_::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:99
msgid "Buildings and parks in Boulder"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:101
msgid "The filter construction is similar to the previous case, but this time we need to collect geometries only from parks, which have a ``MTFCC`` attribute equals to ``K2180``::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:107
msgid "Buildings inside parks in Boulder"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:111
msgid "Finding all buildings close enough to the Boulder County Courthouse"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:113
msgid "In this case we want to find all the buildings close to the Boulder County Courthouse. The `reference map <http://localhost:8083/geoserver/geosolutions/wms/reflect?layers=geosolutions:bptlandmarks,bbuildings&format=application/openlayers&width=512&height=512&&BBOX=-105.28061758059,40.016146865234,-105.27475307863,40.021151240234>`_ this time is::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:120
msgid "Boulder County Courthouse surrounded by buildings"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:122
msgid "This will extract a single geometry that we'll use as a reference, so this time we are going to use the ``querySingle`` function instead, and use the ``DWITHIN`` function to locate all buildings within 400 feet from the courthouse::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:126
msgid "and the resulting map is going to be:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\cross_layer_filter.rst:130
msgid "Buildings close to the Boulder County Courthouse"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:4
msgid "Styling with CSS"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:6
msgid "The CSS extension module allows to build map styles using a compact, expressive styling language already well known to most web developers: Cascading Style Sheets."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:8
msgid "The standard CSS language has been extended to allow for map filtering and managing all the details of a map production. In this section we'll experience creating a few simple styles with the CSS language."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:11
msgid "Creating line styles"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:13
msgid "From the main menu bar select the `CSS styles <http://localhost:8083/geoserver/web/?wicket:bookmarkablePage=:org.geoserver.community.css.web.CssDemoPage>`_ entry"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:15
msgid "Click on the \"Choose a different layer\" link and switch to the Mainrd layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:17
msgid "Click on the \"Create a new style\" link and input ``css_mainrd`` as the style name, then press the \"Create\" button"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:21
msgid "Creating a new CSS style for the Mainrd layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:23
msgid "Set the style contents to the following, press submit and switch to the map preview"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:35
msgid "Now let's create a cased line effect by adding a second set of colours and widths, and forcing two different z indexes for them. Press submit, look at the map and at the generated SLD"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:48
msgid "Finally, let's add a label that follows the road"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:73
msgid "Creating point styles"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:74
msgid "Similarly to the previous section, switch the map to \"bptlandmarks\" and create a new style called \"css_bptlandmarks\""
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:76
msgid "Insert the following in the CSS to get a basic point style, and press \"Submit\":"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:88
msgid "Let's change the color of the points by specifying a fill. If we specified a fill in the top level rule it would be interpreted as a polygonal fill, to express that we want to fill inside the marks we have to create a new rule with the ``:mark`` pseudo-selector:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:104
msgid "Finally, let's override the default styling for all shopping centers. Shopping centers are not easy to find, they have a ``MTFCC`` category of ``C3081`` and contain ``Shopping`` in the name"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:126
msgid "Creating polygon styles"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:127
msgid "For this exercise, change the current layer to \"WorldCountries\" and create a new style called \"css_worldcountries\""
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:129
msgid "We want to create a simple 3 class thematic map based on the country population, stored in the ``POP_EST`` attribute"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:148
msgid "Let's also add a very thin black border around all polygons, regardless of their population, using the ``*`` selector"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:173
msgid "Styling raster data"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:175
msgid "For this exercise we are going to switch to the \"srtm\" layer and create a new ``css_raster`` style"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:177
msgid "In order to activate raster styling the ``raster-channels`` property needs to be specified, in this case with a value of ``auto`` to let the engine choose automatically the bands to use:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:187
msgid "The above map shows GeoServer automatically creating a grayscale map out of the elevation data, with automatic adaptation to the current contents of the map (the black areas you see once applied the map are \"no data\" areas, try to go into an area that does not have any)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\css.rst:189
msgid "Now let's apply a color map to get a nicer and consistent looking map instead"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:5
msgid "Filtering Maps"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:8
msgid "This section shows the GeoServer WMS filtering capabilities."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:12
msgid "Go to the :guilabel:`Layer Preview` link at the bottom of the left-hand menu and show the :guilabel:`geosolutions:WorldCountries` layer with OpenLayers 'Common Format'."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:16
msgid "Showing the GeoServer layer preview"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:20
msgid "Show the layer with OpenLayers"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:22
msgid "From the :guilabel:`Filter` combo box select 'CQL' and enter the following command in the text field::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:26
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:40
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:56
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:70
msgid "Click 'Apply Filter' button on the right."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:30
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:44
msgid "Result of the CQL filter"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:32
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:46
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:76
msgid "The corresponding WMS request is::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:36
msgid "Now enter the following command in the text field::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:50
msgid "From the :guilabel:`Filter` combo box select 'OGC' and enter the following filter in the text field:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:60
msgid "Result of the OGC filter"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:62
msgid "The corresponding WMS request is ::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:66
msgid "From the :guilabel:`Filter` combo box select 'FeatureID' and enter the following features ids in the text field separated by comma::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\filtering.rst:74
msgid "Result of the FeatureID filter"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\index.rst:7
msgid "Pretty maps with GeoServer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\index.rst:9
msgid "This module describes how to manage the GeoServer maps visualization. Will be discussed all those aspects which relate styles, decorations, Layer Groups and other interesting GeoServer features affecting the WMS protocol."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\index.rst:11
msgid "In this module you will:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:5
msgid "Accessing Map information"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:7
msgid "This workshop section describes how to use the GeoServer template system to create custom HTML GetFeatureInfo responses. GetFeatureInfo is a WMS standard call that allows one to retrieve information about features and coverages displayed in a map."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:9
msgid "The map can be composed of various layers, and GetFeatureInfo can be instructed to return multiple feature descriptions, which may be of different types. GetFeatureInfo can generate output in various formats: GML2, plain text and HTML."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:11
msgid "Templating is concerned with the HTML one."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:14
msgid "Go to the **Layer preview** to show :guilabel:`geosolutions:bplandmarks` layer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:16
msgid "Click for example on the :guilabel:`Rocky Mountain Natl Park` region in the OpenLayers map to show the FeatureInfo."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:21
msgid "Default GetFeatureInfo request"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:23
msgid "In order to configure a custom template of the GetFeatureInfo results create three files .FTL in :guilabel:`$GEOSERVER_DATA_DIR/workspaces/geosolutions` directory named::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:30
msgid "The Template is managed using `Freemarker <http://freemarker.sourceforge.net/>`_. This is a simple yet powerful template engine that GeoServer uses whenever developers allowed user customization of textual outputs. In particular, at the time of writing it's used to allow customization of GetFeatureInfo, GeoRSS and KML outputs."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:32
msgid "Splitting the template in three files allows the administrator to keep a consistent styling for the GetFeatureInfo result, but use different templates for different workspaces or different layers: this is done by providing a master ``header.ftl`` and ``footer.ftl`` file, but specify a different ``content.ftl`` for each layer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:34
msgid "In :guilabel:`header.ftl` file enter the following HTML:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:83
msgid "In :guilabel:`content.ftl` file enter the following HMTL:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:101
msgid "In :guilabel:`footer.ftl` file enter the following HMTL:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:112
msgid "Go to the Map Preview  to show :guilabel:`geosolutions:bplandmarks` layer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:114
msgid "Click on the :guilabel:`Rocky Mountain Natl Park` region in the OpenLayers map to show the new FeatureInfo representation."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\info.rst:118
msgid "Custom GetFeatureInfo template"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\map_decorations.rst:6
msgid "Decorating a Map"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\map_decorations.rst:9
msgid "WMS Decorations provide a framework for visually annotating images from WMS with absolute, rather than spatial, positioning. This example of decoration include scaleline, legends, and image."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\map_decorations.rst:12
msgid "Go to $GEOSERVER_DATA_DIR and create a new directory named :guilabel:`layouts` and create a new file named :guilabel:`boulder_ly.xml` inside it."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\map_decorations.rst:15
msgid "Inside the :guilabel:`boulder_ly.xml` file enter the following XML (replace ``${GEOSERVER_DATA_DIR}`` with your actual path, e.g., ``file://C:/training/geoserver_data`` ):"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\map_decorations.rst:40
msgid "Save and close the file."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\map_decorations.rst:42
msgid "Go to the **Layer Preview** to preview the new map decoration on :guilabel:`geosolutions:Mainrd` layer. Once the layout :guilabel:`boulder_ly.xml` is defined, request it by adding :guilabel:`&format_options=layout:boulder_ly` to the request parameters."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\map_decorations.rst:47
msgid "Map decoration"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\map_decorations.rst:49
msgid "The request::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\map_decorations.rst:53
msgid "Zoom-in until the layer and legend appears since for this layer we have scale_denominator based rules. Also you can apply this format_layout to any layer, but be careful with the overalys since you will have all the legends printed out on the right-top side of the map."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:6
msgid "Producing and Using palettes"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:8
msgid "GeoServer has the ability to output high quality 256 color images. This tutorial introduces you to the palette concepts, the various image generation options, and offers a quality/resource comparison of them in different situations. In this section the task is to use the palettes."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:11
msgid "Some image formats, such as GIF or PNG, can use a palette, which is normally a table of 256 colors use get get better compression (trading it sometimes with a lower image quality). Basically, instead of representing each pixel with its full color triplet, which takes 24bits (plus eventual 8 more for transparency), they use a 8 bit index that represent the position inside the palette, and thus the color. This allows for images that are 3-4 times smaller than the standard images, with the limitation that only 256 different colors can appear on the image itself. Depending of the actual map, this may be a very stringent limitation, visibly degrading the image quality, or it may be that the output cannot be told from a full color image.  For many common vector maps one can easily find 256 representative colors that are a good fit. In the latter case, the smaller footprint of paletted images is usually a gain in both performance and costs, because more data can be served with the same internet connection, and the clients will obtain responses faster."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:15
msgid "Options to enable paletted output"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:17
msgid "The easiest way to get a paletted image output is to ask for a 256 color output format, such as:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:19
msgid "image/png8: PNG output, with a 256 color palette"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:20
msgid "image/gif: standard GIF output"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:22
msgid "These output formats, if no other parameters are provided, do compute the optimal palette on the fly. This is an expensive process (CPU bound) but, depending on the speed of the network connecting the server and the client, the extra CPU cost can be offset by a lower data transfer time (especially on slow/busy networks)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:24
msgid "Optimal palette computation is anyway a repetitive work that can be done up front: a user can compute the optimal palette once, and tell GeoServer to use it. There are three ways to do so:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:27
msgid "Use the `internet safe palette <http://www.intuitive.com/coolweb/colors.html>`_, a standard palette built in into GeoServer, by appending palette=safe to the GetMap request. Of course, to get good results, the styling will have to be made using the colors in that palette."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:29
msgid "Provide a palette by example. In this case, the user will generate an 256 color images using an external program (such as Photoshop), and then will save it into the $GEOSERVER_DATA_DIR/palettes directory. The sample file can be either in GIF or PNG format. If the file is named mypalette.gif or mypalette.png, the user will be able to refer it appending palette=mypalette to the GetMap request. GeoServer will load the palette from the file and use it."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:30
msgid "Provide a palette file. The process is just as before, but this time only the palette, in .PAL format, will be stored into the $GEOSERVER_DATA_DIR/palettes directory. The PAL file in in Microsoft Palette Format, and can be generated by programs such as Paint Shop Pro and IrfanView."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:34
msgid "An Example with Vector Data"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:36
msgid "Enough theory, let's have a look at how to deal with paletted images in practice. We'll use the ``prato`` basemap to gather some numbers and we'll change various parameters in order to play with formats and palettes. Here goes the sampler:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:39
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:113
msgid "The standard PNG full color output::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:45
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:120
msgid "*The standard PNG output*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:47
msgid "**Parameters**:``FORMAT=image/png`` | Size: 105.5 KB | Map generation time: 186 ms"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:50
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:126
msgid "JPEG output::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:57
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:134
msgid "*JPEG output*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:59
msgid "**Parameters**:``FORMAT=image/jpeg`` | Size: 43.2 KB | Map generation time: 100 ms"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:61
msgid "The PNG8 output::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:68
msgid "*The PNG8 output*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:70
msgid "**Parameters**:``FORMAT=image/png8`` | Size: 48.0 KB | Map generation time: 190 ms"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:73
msgid "PNG + internet safe palette::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:80
msgid "*The PNG output + internet safe palette*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:82
msgid "**Parameters**:``FORMAT=image/png&palette=safe`` | Size: 38.8 KB | Map generation time: 161 ms"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:85
msgid "PNG + palette by example::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:92
msgid "*The PNG output palette by example*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:94
msgid "**Parameters**:``FORMAT=image/png&palette=boulder`` | Size: 54.4 KB | Map generation time: 163 ms"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:98
msgid "Generating the custom palette"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:100
msgid "To generate a custom palette you can use IrfanView for example, on Windows. The steps are simple:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:102
msgid "open the png 24 bit version of the image"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:103
msgid "use Image/Decrease Color Depth and set 256 colors"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:104
msgid "use Image/Palette/Export to save the palette"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:108
msgid "An example with raster data"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:110
msgid "To give you an example when paletted images may not fit the bill, let's consider the geosolutions:13tde815295_200803_0x6000m_cl coverage from the sample data, and repeat the same operation as before."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:123
msgid "**Parameters**:``FORMAT=image/png`` | Size: 528.9 KB | Map generation time:90ms"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:136
msgid "**Parameters**:``FORMAT=image/jpeg`` | Size: 39.5 KB | Map generation time: 35ms"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:138
msgid "PNG8 output (the output using a \"palette by example would be the same\")::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:145
msgid "*PNG8 output*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:147
msgid "**Parameters**:``FORMAT=image/png8`` | Size: 141.8 KB | Map generation time: 201ms"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:149
msgid "PNG output + safe palette::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:156
msgid "*PNG + sape palette output*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:158
msgid "**Parameters**:``FORMAT=image/png&palette=safe`` | Size: 96.8 KB | Map generation time: 235ms"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\palettes.rst:160
msgid "As the sampler shows, the JPEG output has the same quality as the full color image, is generated faster and uses only a fraction of its size. At the opposite, the version using the internet safe palette is fast and smaller than the full PNG, but the output is totally ruined. Everything considered, JPEG is the clear winner, sporting good quality, fast image generation and smaller size that. PNGs are the suggested imagery raster format only in case the output needs to be used as an overlay and thus requires transparent areas, or when the raster has large areas with uniform colors, which may happen for example in land use rasters."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:5
msgid "Patterns and Hatches"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:7
msgid "Go and edit the configuration of the ``bplandmarks`` layer, enter the publish tab and associate the ``cemetery_mark`` and ``cemetery_graphics`` styles as \"Additional styles\" for the layer, then press \"Save\""
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:11
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:233
msgid "From the `Welcome Page <http://localhost:8083/geoserver>`_ navigate to :menuselection:`Styles`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:13
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:235
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:8
msgid "You have to be logged in as Administrator in order to activate this function."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:15
msgid "Select \"cemetery_graphics\" from the list"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:19
msgid "Patterns filling SLD"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:21
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:80
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:243
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:288
msgid "In the :guilabel:`SLD Editor` you will see the following XML:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:70
msgid "Filling with patterns"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:72
msgid "The above SLD defines a ``<PolygonSymbolizer>`` with a ``<GraphicFill>`` pointing to a png *./img/landmarks/area/grave_yard.png* in the GeoServer data directory, which will be used by GeoServer as pattern to fill the polygon."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:74
msgid "Like before, select now \"cemetery_mark\" from the list"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:78
msgid "True Type Font filling SLD"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:145
msgid "Filling with TTF fonts"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:147
msgid "The above SLD defines a ``<PolygonSymbolizer>`` with a ``<GraphicFill>`` looking for a specific *Windings* character which will be used by GeoServer as pattern to fill the polygon. The ``graphic-margin`` ``VendorOption`` is used to add some space around symbols."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:149
msgid "Lets now take a look at another way to fill polygons using patterns, the *Hatches*. From the `Welcome Page <http://localhost:8083/geoserver>`_ navigate to :menuselection:`Styles` and select \"wetlands\" from the list."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:151
msgid "You may switch to the second page in order to find the style."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:155
msgid "Wetlands style with some hatches"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:202
msgid "Comment out the following line in order to see the polygons at lower zoom levels too:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:208
msgid "Click :guilabel:`Submit` to add the new SLD."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:210
msgid "To see how the styles work, make sure the default style of the :guilabel:`Wetlands_regulatory_area` feature type is set to :guilabel:`wetlands`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:214
msgid "Changing the default style of the :guilabel:`Wetlands_regulatory_area` feature type to *wetlands*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:216
msgid "Use the `Map Preview <http://localhost:8083/geoserver/web/?wicket:bookmarkablePage=:org.geoserver.web.demo.MapPreviewPage>`_ to preview the new style."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:220
msgid "Previewing the :guilabel:`bplandmarks` layer with the hatches applied"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:222
msgid "On the previous example we used *times* as hatches mark. GeoServer makes available different kinds of hatches marks:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:226
msgid "Different types of hatches marks."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:229
msgid "Dashes"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:231
msgid "Lets now familiarize a bit with *Dashes*. We are going to see how it's possible to draw several kind of dashes to represent different types of trails or roads."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:237
msgid "Select \"trails\" from the list"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:241
msgid "Dashes SLD"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:276
msgid "Simple dash-array"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:278
msgid "The above SLD defines a ``<LineSymbolizer>`` with a ``<Stroke>`` using the CSS property *stroke-dasharray* to represent the trails like a simle gray dash."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:280
msgid "Encodes a dash pattern as a series of numbers separated by spaces. Odd-indexed numbers (first, third, etc) determine the length in pxiels to draw the line, and even-indexed numbers (second, fourth, etc) determine the length in pixels to blank out the line. Default is an unbroken line. Starting from version 2.1 dash arrays can be combined with graphic strokes to generate complex line styles with alternating symbols or a mix of lines and symbols."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:282
msgid "The Style above is the default one for the layer :guilabel:`geosolutions:Trails`. Lets have a look at a bit more complex example. From the `Welcome Page <http://localhost:8083/geoserver>`_ navigate to :menuselection:`Styles` and select \"trails2\" from the list"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:286
msgid "Trails2 Style"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:335
msgid "We may notice two interesting things in this style, two ``<LineSymbolizer>`` the first one defining a *circle* Mark with a simple dasharray and the second one a simple stroke defining also a *dashoffset*. The latter specifies the distance in pixels into the dasharray pattern at which to start drawing. Default is 0."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:337
msgid "Open the :guilabel:`geosolutions:Trails` layers and add *trails2* as an additional style, then go to the :guilabel:`Layer Preview` to see it in action"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\patterns_dash_arrays.rst:341
msgid "You have to zoom in from the layer preview in order to see the lines due to the *MaxScaleDenominator*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:4
msgid "Roads and labelling roads"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:6
msgid "From the `Welcome Page <http://localhost:8083/geoserver>`_ navigate to :menuselection:`Styles --> mainrd` in order to edit the mainrd SLD."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:10
msgid "In the :guilabel:`SLD Editor` find the :guilabel:`sld:TextSymbolizer` associated to the :guilabel:`ogc:PropertyName` *LABEL_NAME*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:14
msgid "Road style"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:16
msgid "The style defines a ``<Font>`` and an ``<Halo>`` in order to render the value of the property *LABEL_NAME* for that layer. The interesting part is at the bottom where several ``<VendorOption>`` are specified. Those options are GeoServer specific and allows us to have better and nicer result by tweaking the label renderer behaviour."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:21
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:25
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:47
msgid "**Option**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:23
msgid "**Type**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:24
msgid "**followLine**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:25
msgid "The followLine option forces a label to follow the curve of the line."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:31
msgid "To use this option place the following in your ``<TextSymbolizer>``. It is required to use ``<LinePlacement>`` along with this option to ensure that all labels are correctly following the lines:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:39
msgid "boolean"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:40
msgid "**repeat**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:41
msgid "The repeat option determines how often GeoServer labels a line. Normally GeoServer would label each line only once, regardless of their length. Specify a positive value to make it draw the label every repeat pixels."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:47
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:87
msgid "number"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:48
msgid "**group**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:49
msgid "Sometimes you will have a set of related features that you only want a single label for. The grouping option groups all features with the same label text, then finds a representative geometry for the group."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:51
msgid "Roads data is an obvious example - you only want a single label for all of ``main street``, not a label for every piece of ``main street``."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:55
msgid "When the grouping option is off (default), grouping is not performed and each geometry is labelled (space permitting)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:59
msgid "With the grouping option on, all the geometries with the same label are grouped together and the label position is determined from ALL the geometries."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:64
msgid "**Point Set** first point inside the view rectangle is used."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:66
msgid "**Line Set** lines are (a) networked together (b) clipped to the view rectangle (c) middle of the longest network path is used."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:68
msgid "**Polygon Set** polygons are (a) clipped to the view rectangle (b) the centroid of the largest polygon is used."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:75
msgid "Watch out - you could group together two sets of features by accident. For example, you could create a single group for ``Paris`` which contains features for Paris (France) and Paris (Texas)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:77
msgid "enum{yes/no}"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:78
msgid "**maxDisplacement**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:79
msgid "The maxDisplacement option controls the displacement of the label along a line. Normally GeoServer would label a line at its center point only, provided the location is not busy with another label, and not label it at all otherwise. When set, the labeller will search for another location within maxDisplacement pixels from the pre-computed label point."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:81
msgid "When used in conjunction with repeat, the value for maxDisplacement should always be lower than the value for repeat."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:89
msgid "Another important thing to notice in this style is the **road casing**, that is, the fact each road segment is painted by two overlapping strokes of different color and size."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:91
msgid "Placing the strokes in the two separate feature type styles is crucial:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:93
msgid "with the symbolizers in two separate FeatureTypeStyle element all roads are painted with the large stroke, and then again with the thin, lighter one."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:94
msgid "if instead the two symbolizers were placed in the same FeatureTypeStyle element the result would be different, and not pleasing to see, since the renderer would take the first road, paint with the large and thin strokes in sequence, then move to the next one and repeat until the end"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\roads.rst:99
msgid "Road casing with a single FeatureTypeStyle element"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:5
msgid "Geometry transformations"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:7
msgid "This section show how to GeoServer provides a number of filter functions that can actually manipulate geometries by transforming them into something different: this is what we call *geometry transformations in SLD*."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:10
msgid "Extracting vertices"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:12
msgid "Using skills learned in the :ref:`adding styles <geoserver.add_style>` section, create a new style named :guilabel:`mainrd_transform` using the following SLD:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:51
msgid "The ``vertices`` function returns a multi-point made with all the vertices of the original geometry"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:53
msgid "Using skills learned in the :ref:`adding styles <geoserver.add_style>` section, modify the styling of the ``Mainrd`` layer and add ``mainrd_transform`` as an alternate style (hint, select the ``mainrd_transform`` style in the first list below \"available styles\" and then use the right arrow to move it in the \"selected styles\"):"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:57
msgid "Adding the mainrd_transform style as a secondary style for Mainrd"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:59
msgid "Use the Preview link to display the Mainrd layer, then open the options box and choose the alternate style from the drop down:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:63
msgid "Extracting and showing the vertices out of a geometry"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:67
msgid "Line buffer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:69
msgid "Using skills learned in the geoserver.addstyle section, create a new style :guilabel:`mainrd_buffer` using the following SLD"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:105
msgid "The ``buffer`` function builds a polygon of all the points that are withing the specified distance from the original geometry."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:107
msgid "As done previously, modify the styling of the ``Mainrd`` layer and add ``mainrd_buffer`` as an alternate style:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:111
msgid "Adding the mainrd_buffer style as a secondary style for Mainrd"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:114
msgid "Use the `Map Preview <http://localhost:8083/geoserver/mapPreview.do>`_ to preview the new style."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\sld_transform.rst:118
msgid "Extracting start and end point of a line"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:5
msgid "Styling point data"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:7
msgid "Point data in SLD can be depicted with ``PointSymbolizer`` and labelled with ``TextSymbolizer``. This section describe an existing, realistic style, available in the data directory that depicts the *point landmarks* layer (``bptlandmarks``) with icons and labels."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:11
msgid "The dataset"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:13
msgid "The ``bptlandmarks`` layer (Boulder point landmarks) contains the location of significant point entities such as malls, schools, airports and the like. The attribute structure is reported in the `GeoServer page for such layer <http://localhost:8083/geoserver/web/?wicket:bookmarkablePage=:org.geoserver.web.data.resource.ResourceConfigurationPage&name=bptlandmarks&wsName=geosolutions>`_:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:18
msgid "Point landmarks attribute structure"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:20
msgid "The style will use the ``MTFCC`` code to categorize the various points in the different types (e.g., schools have ``MTFCC = K2543``, and eventually use ``FULLNAME`` for the label. This results in the `following map <http://localhost:8083/geoserver/geosolutions/wms?service=WMS&version=1.1.0&request=GetMap&layers=geosolutions:BoulderCityLimits,geosolutions:bptlandmarks&styles=line,&bbox=-105.688,39.914,-105.06,40.261&width=597&height=330&srs=EPSG:4269&format=application/openlayers>`_:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:25
msgid "Point landmarks in Boulder"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:27
msgid "The complete style we'll be referring to is named ``point_landmark``, you can have a look at the full style in the `GeoServer style editor <http://localhost:8083/geoserver/web/?wicket:bookmarkablePage=:org.geoserver.wms.web.data.StyleEditPage&name=point_landmark>`_:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:31
#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:45
msgid "Point landmarks style"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:35
msgid "Point symbolizers"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:37
msgid "A point symbolizer depicts a symbol by means of a ``Mark`` or a ``External Graphic``. The former is a built-in vector symbol that can be stroked and filled at the styler will, but only a handful of such symbols are available, whilst the latter can be a user provided image or SVG graphic."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:40
msgid "The point landmark styles use the Open Street Map icons for most of the locations. The images have been added inside the data directory, inside ``styles/im``, since this allows to refer them by relative path:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:47
msgid "Given the above symbols a point symbolizer looks as follows:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:61
msgid "The icon is depicted on the screen as-is, at its natural resolutions. The ``labelObstacle`` vendor parameter, specific to GeoServer, makes sure the point is icon is treated as a `label obstacle <http://docs.geoserver.org/latest/en/user/styling/sld-extensions/label-obstacles.html>`_, that is, makes sure no label will ever be depicted over the point."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:65
msgid "Text symbolizers for points"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:67
msgid "The text symbolizer associates a label with a point using an attribute value as the label source. The following symbolizer is used to label schools:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:120
msgid "Highlights about the above style:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:122
msgid "Uses ``FULLNAME`` as the label source"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:123
msgid "Uses a Arial 12pt font"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:124
msgid "Places the label below the point, and offsets it by 10 pixel to the south"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:125
msgid "Applies a white halo to make it stand out of the background map"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:126
msgid "Sets its priority to 200000 (high, important) to make sure the label is depicted in preference to others"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:127
msgid "Uses the ``autoWrap`` option to make it wrap on the next line if it's larger than 100 pixels (the full list of labelling vendor options is available in the `GeoServer user guide <http://docs.geoserver.org/latest/en/user/styling/sld-reference/labeling.html>`_)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:131
msgid "Using Rules to assign a different styling to each point"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:133
msgid "A Rule is a SLD construct allowing the style editor to control scale dependencies and filter data so that only certain data is depicted using the symbolizers contained in the rule."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:135
msgid "The rule for the school points looks as follows:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:156
msgid "Highlights about the above rule:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:158
msgid "makes sure the symbolizers are applied only to the features whose ``MTFCC = K2543``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:159
msgid "shows the symbols only when the scale denominator is below 100000 (e.g., shows them at 1:10000, but not at 1:2000000)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:162
msgid "Using dynamic symbolizers to reduce the style size"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:164
msgid "The overall ``point_landmark`` style has 8 different rules using different symbols for each type and amounts to almost 550 lines of XML. The same style could be written in a much more compact way if we could store the symbol name in some attribute and expand it in the external graphic URL."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:166
msgid "Standard SLD 1.0 does not allow for that, but GeoServer supports extensions to it known as *dynamic symbolizers* that allow for generic CQL expressions to be embedded in the URL. The data directory already contains a secondary layer, ``bptlandmarks_2876``, which is using a different projection and has a ``IMAGE`` attribute containing the file names."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:169
msgid "The style can then be reduced to a single rule using the following point symbolizer:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:183
msgid "Here is the overall style:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:275
msgid "And `here is a map <http://localhost:8083/geoserver/geosolutions/wms?service=WMS&version=1.1.0&request=GetMap&layers=geosolutions:BoulderCityLimits,geosolutions:bptlandmarks&styles=line,&bbox=-105.688,39.914,-105.06,40.261&width=597&height=330&srs=EPSG:4269&format=application/openlayers>`_ using this alternate style:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_points.rst:280
msgid "Point landmarks using dynamic symbolizers"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_uom.rst:6
msgid "Styling in real world units"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_uom.rst:8
msgid "By default SLD interprets all sizes expressed in the style sheet (e.g., line widths, symbol sizes) as being pixels on the map."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_uom.rst:10
msgid "It is however possible to make the style sheet use real world units, e.g., meters or feet, by specifying the desired unit of measure as an attribute of the symbolizer. The supported unit of measure are:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_uom.rst:12
msgid "meter"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_uom.rst:13
msgid "foot"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_uom.rst:14
msgid "pixel"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_uom.rst:16
msgid "The following line style uses a line width of 40 meters:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_uom.rst:29
msgid "Setting up a uom based style in GeoServer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_uom.rst:31
msgid "Create a new style named ``line40m`` using the following SLD:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_uom.rst:60
msgid "Associate the ``line40m`` to ``MainRd`` as a secondary style:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_uom.rst:64
msgid "Adding the line40m style as a secondary style for Mainrd"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_uom.rst:66
msgid "Preview the ``MainRd`` layer and switch to the ``line40m`` style:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_uom.rst:70
msgid "A uom based line, zoomed out"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_uom.rst:72
msgid "Zoom in and out and observe how the width of the line on screen varies by changing the zoom level"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\style_uom.rst:76
msgid "Zooming in on the same line"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling.rst:5
msgid "Styling with SLD"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling.rst:7
msgid "This section introduces the concepts of the Styled Layer Descriptor (SLD) markup language. SLD is the styling engine used by GeoServer, and how all WMS portrayal is specified."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:5
msgid "Styling Raster data"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:7
msgid "In the previous section we have created and optimized some vector styles. In this section we will deal with a styled SRTM raster and we will see how to get a better visualization of that layer by adding hillshade."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:9
msgid "From the `Welcome Page <http://localhost:8083/geoserver>`_ navigate to :menuselection:`Layer Preview` and select the OpenLayers link for the ``geosolutions:srtm`` layer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:13
msgid "SRTM rendering with DEM style"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:15
msgid "There is a DEM style associated to that SRTM dataset layer, resulting in such a colored rendering."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:17
msgid "Return to the GeoServer `Welcome Page`, select the :menuselection:`Styles` and click the ``dem`` style to see which color map is applied."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:19
msgid "You have to be logged in as Administrator in order to edit/check styles."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:23
msgid "Style editing"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:25
msgid "Note the entries with ``opacity = 0.0`` which allow to make no data values as transparent."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:27
msgid "The current DEM style allows to get a pleasant rendering of the SRTM dataset but we can get better results by combining it with an hillshade layer which will be created through another GDAL utility (gdaldem)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:30
msgid "Adding hillshade"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:32
msgid "Open a shell and run::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:42
msgid "The ``z`` parameter exaggerates the elevation, the ``s`` parameter provides the ratio between the elevation units and the ground units (degrees in this case), ``-co tiled=yes`` makes gdaldem generate a TIFF with inner tiling. We'll investigate this last option better in the following pages."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:44
msgid "From the `Welcome Page <http://localhost:8083/geoserver>`_ navigate to :menuselection:`Styles` and select `Add a new style` as previously seen in the :ref:`Adding a style <geoserver.add_style>` section."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:79
msgid "Note the opacity values being less than 1, in order to made it partially transparent which will allows to do overlaying on other layers"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:81
msgid "Set :file:`hillshade` as name and then click the :guilabel:`Submit` button."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:83
msgid "Select :guilabel:`Add stores` from the GeoServer `Welcome Page` to add the previously created ``hillshade`` raster."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:87
msgid "Specify :file:`hillshade` as name in the :guilabel:`Data Source Name` field of the interface."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:89
msgid "Click on  :guilabel:`browse` link in order to set the GeoTIFF location in the :guilabel:`URL` field."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:91
msgid "make sure to specify the :file:`srtm_boulder_hs.tiff` previously created with gdaldem, which should be located at :file:`${TRAINING_ROOT}/geoserver_data/data/boulder`"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:99
msgid "Publishing Raster Layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:101
msgid "Set :file:`SRTM Hillshade` as Title"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:103
msgid "Switch to `Publishing` tab"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:107
msgid "Make sure to set the default style to ``hillshade`` on the `Publishing --> Default Style` section."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:111
msgid "Editing Raster Publishing info"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:113
msgid "Click :guilabel:`Save` to create the new layer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:115
msgid "Use the **Layer Preview** to preview the new layer with the hillshade style."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:119
msgid "Previewing the new raster layer with the hillshade style applied"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:121
msgid "Edit the Layer Preview URL in your browser by locating the `layers` parameter"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:125
msgid "Insert the `geosolutions:srtm,` additional layer (note the final comma) before the `geosolutions:hillshade` one, and in the `styles` parameter, add a comma before `hillshade` to make GeoServer use the default style for the srtm layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:129
msgid "Press Enter to send the updated request. The Layer Preview should change like this where you can see both the srtm and hillshade layers."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_raster.rst:133
msgid "Layer preview with srtm and hillshade being overlaid"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_vector.rst:5
msgid "Styling Vector data"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\002_pretty_maps\styling_vector.rst:7
msgid "In previous modules the style for a layer was configured by uploading an existing SLD. In this section the task of creating a new SLD document from scratch will be covered. In particular we are going to create some styles that can be applied to vectorial datasets, in the first case by drawing patterns and dash arrays to polygons and lines and in the second case drawing roads and labels to lines."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:6
msgid "Example n° 1: Serving a large number of GrayScale GeoTiff with Palette"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:9
msgid "In this example there is a group of Gray GeoTiff images. The purpose of this section is to describe how to merge these images using GDAL. These data are taken from the `Regione Marche Cartographic Portal <http://www.ambiente.marche.it/Territorio/Cartografiaeinformazioniterritoriali/Archiviocartograficoeinformazioniterritoriali/Cartografie/ORTOFOTOCARTEREGIONALI110000.aspx#>`_."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:12
msgid "Data have the same pixel resolution and same Coordinate Reference System *EPSG:26592*."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:14
msgid "Navigate to the workshop directory :file:`${TRAINING_ROOT}/data/user_data/gdal_processing_data` (on Windows :file:`%TRAINING_ROOT%\\\\data\\\\user_data\\\\gdal_processing_data`) and find the *grayscale_data* directory."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:16
msgid "Navigate inside the *grayscale_data* directory with the SDKshell."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:18
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:20
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:17
msgid "The following operations must be executed from the shell inside the selected directory. In Windows, run *setenv.bat* if not already launched."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:20
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:22
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:19
msgid "Calling the **gdalinfo** command on an image for retrieving the associated information::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:24
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:26
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:23
msgid "And the result is::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:57
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:45
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:55
msgid "From **gdalinfo** it is possible to note:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:59
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:47
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:57
msgid "No CRS definition. An image without CRS cannot be displayed on GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:60
msgid "Tiles Striped (5494x1)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:61
msgid "LZW Compression."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:62
msgid "ColorInterpretation as a Palette."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:64
msgid "Using **gdal_translate** it is possible to change the ColorInterpretation from Palette to Gray.::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:68
msgid "The final image format is not GeoTiff but **VRT**. This format simply creates an **XML** file containing information about the operation to perform on the image; the output image is created only when the image must be shown to the screen. The CRS is set with the **-a_srs** parameter. The color interpretation can be set to *gray* because each palette value is equal to a grayscale value (this last step is optional)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:72
msgid "The **expand gray** option does not create a multi banded image but only one band is present."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:74
msgid "In future a possible operation could be the processing of the input image with the color interpretation set to *gray* and the calculation of the optimal palette on the final image."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:76
msgid "For executing the same operation on all the input images a script called **script.sh** (Linux) or **script.bat** (Windows) must be created and executed:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:78
msgid "In order to edit the scripts use the basic **notepad** editor on Windows or **gedit** on Linux. Remember that on Linux, after the script creation, it must be marked as *executable* with the command ``chmod +x <nome_script>.sh``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:80
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:81
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:314
msgid "**Linux**::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:92
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:95
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:328
msgid "**Windows**::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:98
msgid "Creating a list of the VRT files::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:107
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:112
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:346
msgid "Merging of all the input files with the **gdalbuildvrt** command::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:111
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:168
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:231
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:250
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:65
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:156
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:116
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:233
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:350
msgid "Parameters used:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:113
msgid "**-srcnodata 255 -vrtnodata 255** : setting of the input and output image No Data."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:114
msgid "**-resolution highest** : selection of the highest image resolution."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:115
msgid "**-input_file_list list.txt** : definition of the input file list."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:117
msgid "The result of calling **gdalinfo** on the output image is::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:162
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:166
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:403
msgid "Transforming from VRT to GeoTiff with **gdal_translate**::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:166
msgid "This operation might take many minutes."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:170
msgid "**-co \"BLOCKXSIZE=512\" -co \"BLOCKYSIZE=512\" -co \"TILED=YES\"** : setting tile dimensions."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:171
msgid "**-co \"BIGTIFF=YES\" -co \"COMPRESS=DEFLATE\"** : (Optional) loss-less compression of the image for reducing the disk space occupation, similar to LZW."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:173
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:71
msgid "**-co \"BIGTIFF=YES\"** is used because GDAL is not automatically able to convert the GeoTiff image into a BigTiff if compression is set."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:176
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:107
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:179
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:416
msgid "From **gdalinfo**::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:217
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:219
msgid "This image can be displayed on GeoServer but a further optimization step could bring to better performances. There could be two ways for optimizing the GeoServer performances:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:220
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:222
msgid "building image overviews."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:221
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:223
msgid "building a pyramid of the image."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:223
msgid "(**Optional**) Optimization."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:225
msgid "Building overview with gdaladdo::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:229
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:154
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:231
msgid "Overviews are reduced views of the input image used by GeoServer for displaying the image at a lower resolutions."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:233
msgid "**-r cubicspline** : setting the interpolation mode to *cubicspline* (by default is *nearest-neighbour*)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:234
msgid "**--config COMPRESS_OVERVIEW DEFLATE** : setting DEFLATE compression on the overviews, for reducing disk space occupation."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:235
msgid "**--config GDAL_TIFF_OVR_BLOCKSIZE 512** : setting tile dimensions on overviews."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:236
msgid "**2 ~ 32** : setting overview level."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:238
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:162
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:240
msgid "And with **gdalinfo**::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:244
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:204
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:251
msgid "Then the result can be displayed in GeoServer by configuring the image as a GeoTiff (see :ref:`Adding a GeoTiff <geoserver.add_geotiff>` section)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:246
msgid "Building a pyramid through several **gdalwarp** invokations, each time by reducing the image resolution::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:252
msgid "**-r cubicspline** : definition interpolation method."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:253
msgid "**-dstnodata 255 -srcnodata 255** : definition of the image input and output NO DATA."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:254
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:262
msgid "**-multi** : forcing to use multithreading."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:255
msgid "**-tr 2,53458 -2,53458** : definition of the image resolutions."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:257
msgid "Output image from **gdalinfo**::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:270
msgid "After another **gdalwarp** on the output image::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:274
msgid "And **gdalinfo**::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:286
msgid "The operations must be executed on the first image, then the same operation must be repeated on the output image and so on. This cycle allows to create a pyramid of images, each one with a lower resolution."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:289
msgid "Then the result can be displayed in GeoServer by configuring the images as a pyramid (see :ref:`Advanced Mosaic and Pyramid configuration <geoserver.mosaic_pyramid>` section)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:292
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:206
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:288
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:467
msgid "Displaying the result on GeoServer:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:296
msgid "*Result with gdaladdo*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example1.rst:300
msgid "*Result with ImagePyramid*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:6
msgid "Example n° 2: Serving a large number of DTM ASCII Grid Files"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:8
msgid "In this example there is a group of DTM images in ASCII Grid format. The purpose of this section is to describe how the GDAL commands may be used for merging the input files provided. These data are taken from `Regione Calabria Open Data Portal <http://pr5sit.regione.calabria.it/web/pr5sit/sezione-opendata1;jsessionid=D37F21C541E793075AF90E3B0A3AAFBD>`_ at the `ASCII - GRID` section."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:12
msgid "Data have the same pixel resolution and same Coordinate Reference System *EPSG:3003*."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:14
msgid "This example requires GDAL with Python bindings."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:16
msgid "Navigate to the workshop directory :file:`${TRAINING_ROOT}/data/user_data/gdal_processing_data` (on Windows :file:`%TRAINING_ROOT%\\\\data\\\\user_data\\\\gdal_processing_data`) and find the *DTM_data* directory."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:18
msgid "Navigate inside the *DTM_data* directory with the SDKshell."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:48
msgid "Tiles Striped (193x1)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:49
msgid "No Compression."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:51
msgid "Listing of all the images into a single text list with the following command::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:59
msgid "Merging of all the input files with the **gdal_merge.py** command::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:63
msgid "This command must be executed with python for avoiding import errors."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:67
msgid "**-o merged.tif** : definition of the output file name."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:68
msgid "**-co \"TILED=YES\" -co \"BLOCKXSIZE=512\" -co \"BLOCKYSIZE=512\"** : definition of tile dimensions."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:69
msgid "**-co \"COMPRESS=DEFLATE\" -co \"ZLEVEL=9\" -co \"BIGTIFF=YES\"** : definition of the compression mode."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:73
msgid "**-init -9999** : initialization of the image pixels to NO DATA."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:74
msgid "**-a_nodata -9999** : definition of the output value for NO DATA."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:75
msgid "**-n -9999** : definition of the input pixel value to ignore during merging."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:76
msgid "**-ot Float32** : definition of the image output type."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:77
msgid "**--optfile list.txt** : definition of the input file list."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:79
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:121
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:355
msgid "The **gdalinfo** output on the merged image is::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:99
msgid "The merged image has a good tiling(512x512) and compression, but the CRS is still undefined."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:101
msgid "Setting of the image CRS with **gdal_translate**::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:105
msgid "The various input parameters are maintained because by default GDAL do not compress the input image and set a bad tiling."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:148
msgid "This image can be displayed on GeoServer but a further optimization step could bring to better performances."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:150
msgid "(**Optional**) Creation of the **overviews** associated to the merged image for having better throughput::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:158
msgid "**-r nearest** : definition of the interpolation method."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:159
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:236
msgid "**--config COMPRESS_OVERVIEW DEFLATE** : definition of the compression on overviews."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example2.rst:160
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:237
msgid "**--config GDAL_TIFF_OVR_BLOCKSIZE 512** : definition of the tile dimensions on overviews."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:6
msgid "Example n° 3: Serving a large number of Cartographic Black/White GeoTiff with Palette"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:8
msgid "In this example there is a group of Cartographic Black/White images from \"CARTA TECNICA DELLA REGIONE TOSCANA\". The purpose of this example is to describe how the GDAL commands may be used for merging the input files provided."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:11
msgid "Data have the same pixel resolution and same Coordinate Reference System *EPSG:25832*. Also each pixel is stored into single bit."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:13
msgid "Navigate to the workshop directory :file:`${TRAINING_ROOT}/data/user_data/gdal_processing_data` (on Windows :file:`%TRAINING_ROOT%\\\\data\\\\user_data\\\\gdal_processing_data`) and find the *CTR_data* directory."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:15
msgid "Navigate inside the *CTR_data* directory with the SDKshell."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:58
msgid "Color Interpretation as palette."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:59
msgid "A GeoTransformation matrix is associated."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:60
msgid "Tiles Striped (16050x4)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:61
msgid "Packbits Compression."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:63
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:306
msgid "Executing the following commands on the tiff images::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:69
msgid "The first operation sets the CRS to each image and creates a **VRT** file, for reducing space occupation. Also the use of **gdalwarp** internally performs the GeoTransformation associated to the image."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:72
msgid "The second operation is used for changing the color interpretation from *palette* to *gray*. This operation is done because in the final steps other grey levels will be added with the interpolation. The expansion to the *gray* color interpretation leads to an expansion of the pixel dimension from 1 to 8 bits."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:75
msgid "The **expand gray** option does not create a multi banded image but only a single banded one."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:77
msgid "If the user wants to keep the palette, then can go directly to the *Optional elaboration without expanding the Palette* paragraph."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:79
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:312
msgid "These operations must be executed inside a script:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:102
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:335
msgid "Listing of all the **VRT** files into a single text list with the following command::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:110
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:343
msgid "Delete the **_temp.vrt** files from the list because they overlap with the final vrt files created."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:118
msgid "**-srcnodata 255 -vrtnodata 255** : definition of the No Data associated with the file."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:119
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:353
msgid "**-input_file_list list.txt** : definition of input files to elaborate."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:170
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:407
msgid "The various input parameters are:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:172
msgid "**-a_nodata none** : avoid setting 255 as No Data for a better image optimization."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:173
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:410
msgid "**-co \"BLOCKXSIZE=512\" -co \"BLOCKYSIZE=512\" -co \"TILED=YES\"** : definition of the tile dimensions."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:174
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:411
msgid "**-co \"BIGTIFF=YES\" -co \"COMPRESS=DEFLATE\"** : definition of the compression method."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:176
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:413
msgid "BIGTIFF=YES must be set for big images because when compression is used, by default **gdal_translate** is not able to check if the final image is a BigTiff or not."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:225
msgid "(**Optional**) Optimization methods. Here are described two possible optimizations each of them using a different interpolation type:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:227
msgid "Creation of the **overviews** associated to the merged image for having better throughput::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:235
msgid "**-r average** : definition of the interpolation method."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:238
msgid "**2 ~ 128** : definition of the overviews level"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:253
msgid "(**Optional**) Creation of a **pyramid** associated to the merged image and displaying the image on GeoServer with the ImagePyramid plugin (see :ref:`Advanced Mosaic and Pyramid configuration <geoserver.mosaic_pyramid>` section)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:255
msgid "For building a pyramid the **gdalwarp** command must be called several times. The operation to execute on the first image is::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:259
msgid "The parameters are:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:261
msgid "**-r cubic** : definition of the interpolation method (**average** interpolation can be used only with GDAL 1.10)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:263
msgid "**-tr 0,200000745642814 -0,200000745642814** : definition of the image resolution."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:265
msgid "From **gdalinfo** on the result image::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:275
msgid "Then the same operation, with another value for the resolution must be executed on the result image::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:279
msgid "These operation must be repeated until the final image has a resolution 128 times lower than that of the initial image."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:281
msgid "Each call of **gdalwarp** reduces by half the image resolution."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:283
msgid "After creating the various rasters, they must be saved inside a new directory. This directory must be internally divided into sub-directories numbered from 1 to 7, each of them containing a raster of smaller dimension(going from 1 to 7) and leaving the original raster in the super-directory."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:286
msgid "Then the user can configure the following structure with the ImagePyramid plugin."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:293
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:472
msgid "Result as a pyramid (Zoom on the image for seeing the result)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:298
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:477
msgid "Result with overviews (Zoom on the image for seeing the result)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:302
msgid "Optional elaboration without expanding the Palette"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:304
msgid "If the user wants to keep the palette the steps to achieve are quite similar."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:352
msgid "**-srcnodata 0 -vrtnodata 0** : definition of the No Data associated with the file."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:409
msgid "**-co \"NBITS=1\"** : sets the bits per pixel to 1, because the Palette contains only 0 or 1."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:460
msgid "(**Optional**) Optimization methods described here are similar to that described above:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:462
msgid "The overview creation method is equal to that described above."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\example3.rst:464
msgid "For creating the pyramid the commands to use are the same as described above with the addition of the **-co \"NBITS=1\"** command."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\index.rst:7
msgid "Advanced Processing With GDAL Utilities"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\advanced_gdal\index.rst:8
msgid "In this section we are including some advanced examples of processing of Raster Data for GeoServer serving using GDAL Utilities. Here below you can find a list of examples."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:6
msgid "Using the ImageMosaic plugin with footprint management"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:10
msgid "Introduction"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:12
msgid "This section describes how to associate a vector footprint to a raster dataset in GeoServer using the ImageMosaic plugin."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:14
msgid "**A vector footprint is a shape used as a mask for the mosaic**. Masking can be useful for hiding pixels which are meaningless, or for enhancing only few regions of the image in respect to others."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:16
msgid "This chapter contains two sub-sections:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:18
msgid "The first sub-section, **Configuration**, describes the possible configurations needed to set up an ImageMosaic with footprint."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:19
msgid "The second sub-section, **Examples**, provides examples of configuration of an ImageMosaic with footprint."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:22
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:15
msgid "Configuration"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:23
msgid "A vector footprint can be linked to an Imagemosaic in three different ways:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:25
msgid "By using for each mosaic granule a **Sidecar File**, a Shapefile with the same filename of the granule which contains the footprint for it;"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:26
msgid "By using a single Shapefile called **footprints.shp** which contains all the footprints for each granule; each feature contained in the shapefile represent a footprint for an Imagemosaic granule. Each footprint is associated to a granule with the *location* attribute;"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:27
msgid "By using a file called **footprints.properties**, this option add more flexibility to the option number 2."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:29
msgid "The last option allows to write the following configuration inside the **footprints.properties** file::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:34
msgid "So the user is free to decide the Shapefile name to use (not only footprints.shp) and the attribute to use for the footprint granule association adding also a custom filter for the content of that attribute."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:36
msgid "The **footprint.properties** can be used also to hold other kind of configurations, see the *Inset Support* paragraph below."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:38
msgid "For example if a Shapefile called **fakeShapeFile** stores the various footprints in a table like this, where each *Name* attribute is referred to a granule file:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:42
msgid "And the associated granules are:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:44
msgid "ortho_1-1_1n_s_la087_2010_1.tif"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:45
msgid "ortho_2-2_1n_s_la075_2010_1.tif"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:46
msgid "ortho_1-1_1n_s_la103_2010_1.tif"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:47
msgid "and so on ..."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:49
msgid "The associated **footprints.properties** file must be like this::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:54
msgid "The **substring** operation is done for comparing the footprint attribute names and the granule names without the *.tif* extension. Standard GeoServer Filter Functions can be use in this expression. A complete reference for them can be found `here <http://docs.geoserver.org/2.6.x/en/user/filter/function_reference.html#string-functions>`_."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:58
msgid "Footprint Behaviours"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:60
msgid "There are three possible behaviours for Footprint:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:62
msgid "*None*: simply doesn't use the Footprint and behaves like a standard ImageMosaic layer;"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:63
msgid "*Transparent*: adds an alpha band of 0s on the image portions outside of the Footprint making them transparent, typically used for RGB data;"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:64
msgid "*Cut*: set the background value on the image portions outside of the Footprint, typically used for GrayScale data."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:66
msgid "The behaviour must be set directly on the Layer configuration page."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:69
msgid "Inset Support"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:71
msgid "Another feature of the *Footprint* is the possibility to calculate an **Inset** on the vector footprint prior to applying it to the image. With the *Inset* a shrinking of the footprint is applied, typically for removing compression artefacts or any nasty effect at the borders. The inset can be activated by adding the following code inside **footprints.properties**::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:79
msgid "Each modification of the **footprints.properties** file requires to *Reload* GeoServer. This operation can be achieved by going to :guilabel:`Server Status` and clicking on the :guilabel:`Reload` button on the bottom-right side of the page."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:83
msgid "Examples"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:85
msgid "The two datasets used in the following can be found into"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:87
msgid "Linux: :file:`${TRAINING_ROOT}/data/user_data/footprint_data`"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:88
msgid "Windows :file:`%TRAINING_ROOT%\\\\data\\\\user_data\\\\footprint_data`"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:90
msgid "The content of the footprint_data is:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:92
msgid "The first dataset, *mosaic_single_tiff*, contains a Shapefile called *srtm_boulder.shp* which represents a mask to use on the Boulder (Colorado) layer inside the :file:`${TRAINING_ROOT}/data/user_data/boulder` folder and can be used for testing footprint configuration with a *Sidecar File*."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:93
msgid "The second dataset, *mosaic_sample*, is a mosaic which represents Italy and is used for testing the other two configurations."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:95
msgid "Here are presented a few steps for configuring a new ImageMosaic layer with footprint."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:98
msgid "1. Vector Footprint configured with a sidecar file"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:100
msgid "Here the steps to load am Imagemosaic with a sidecar file as a vector footprint."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:103
msgid "Step 1: Create a new ImageMosaic Layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:105
msgid "As seen in a previous chapter an ImageMosaic data store can be created by going to :menuselection:`Stores --> Add New Store --> ImageMosaic`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:107
msgid "Load the *mosaic_single_tiff* folder, from the TRAINING_ROOT folder navigate to :file:`\\\\data\\\\user_data\\\\footprint_data\\\\mosaic_single_tiff`"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:111
msgid "Publish a Layer from that store going to :menuselection:`Layers --> Add New Resource`, choosing the name of the data store created above and then clicking on the :guilabel:`publish` button."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:115
msgid "Step 2: Configuring a new Layer for the Mosaic"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:117
msgid "fill the field **Declared CRS** with the value ``EPSG:4326`` if the CRS is not automatically set."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:119
msgid "The layer will be rendered depending on the value of the *FootprintBehavior* field:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:123
msgid "The user can set one of the three values for the Footprint behaviour as described above (*None*, *Transparent*, *Cut*)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:125
msgid "After that, the user must confirm the modification by clicking on the :guilabel:`Save` button on the bottom side of the page."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:128
msgid "Step 3: Example Results"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:130
msgid "Here are presented the results for each dataset."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:132
msgid "This is an example of mosaic (*mosaic_single_tiff*) without applying Footprint:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:136
msgid "And this is the result of setting **FootprintBehavior** to *Cut*:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:140
msgid "Then navigate the filesystem in the mosaic directory, open (or create it if not exist) the file footprints.properties and write::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:145
msgid "to add an inset."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:147
msgid "Remember that each modification on **footprints.properties** requires a GeoServer catalog and a GeoServer resource cache reloading in order to apply the changes."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:149
msgid "If an Inset is added, the final mosaic is:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:154
msgid "2. Vector Footprint configured with footprints.shp"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:156
msgid "Repeat the steps described above but loading the *mosaic_sample* folder from :file:`%TRAINING_ROOT%\\\\data\\\\user_data\\\\footprint_data\\\\mosaic_sample`"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:158
msgid "This is another example of mosaic (*mosaic_sample*) without Footprint:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:162
msgid "And now after setting **FootprintBehavior** to *Transparent* (no Inset is used) on the Layer:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:167
msgid "3. Vector Footprint configured with *footprints.properties*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:169
msgid "For testing this functionality the user must"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:171
msgid "Clone the directory :file:`%TRAINING_ROOT%\\\\data\\\\user_data\\\\footprint_data\\\\mosaic_sample` and call it ``mosaic_sample2``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:172
msgid "Rename all the *footprints.xxx* files that compose the shapefile to *mask.xxx* (don't rename *footprints.properties* too!) and load another ImageMosaic datastore."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:173
msgid "open (create if not exist) the **footprints.properties** file and write::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:179
msgid "In order to specify an inset and use a footprint shapefile with a custom name."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:181
msgid "Then publish the imagemosaic located in the cloned directory called ``mosaic_sample2``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\imagemosaic_footprint.rst:183
msgid "The result of setting **FootprintBehavior** to *Transparent*, Inset type to *border* and Inset value to 0.00001 is:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\index.rst:7
msgid "Advanced Raster Data Management"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:6
msgid "Advanced Mosaics and Pyramids Configuration"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:8
msgid "In this section will learn how to manage Image Mosaics and Image Pyramids in GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:11
msgid "Configuring an Image Mosaic"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:13
msgid "As introduced in a previous section an Image Mosaic is composed of a set of datasets which are exposed as a single coverage. The ImageMosaic format allows to automatically build and setup a mosaic from a set of georeferenced datasets. This section provides better instructions to configure an Image Mosaic"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:16
msgid "Before you start, ensure that the :ref:`Maps - Raster <geoserver.mosaic>` section has been completed."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:18
msgid "We will configure an ImageMosaic using the optimized dataset. As explained in the :ref:`Maps - Raster <geoserver.mosaic>` section, follow the steps 1 to 4, then at the step 5 fill the fields as explained below."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:20
msgid "Specify a proper name (as an instance, :file:`boulder_bg_optimized`) in the :guilabel:`Data Source Name` field of the interface."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:21
msgid "Specify :file:`file:<TRAINING_ROOT>/data/user_data/optimized` as URL of the sample data in the :guilabel:`Connections Parameter's - URL` field."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:31
msgid "Set :file:`boulder_bg_optimized` as name and title of the layer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:35
msgid "Check the Coordinate Reference Systems and the Bounding Boxes fields are properly set."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:37
msgid "Customize the ImageMosaic properties if needed. For the sample mosaic, set the OutputTransparentColor to the value **000000** (Which is the Black color). click on :guilabel:`Save` when done."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:41
msgid "**AllowMultithreading**: If true, enable tiles multithreading loading. This allows to perform parallelized loading of the granules that compose the mosaic."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:42
msgid "**BackgroundValues**: Set the value of the mosaic background. Depending on the nature of the mosaic it is wise to set a value for the no data area (usually -9999). This value is repeated on all the mosaic bands."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:43
msgid "**Filter**: Filter granules based on attributes from the input coverage."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:44
msgid "**InputTransparentColor**: Set the transparent color for the granules prior to mosaicking them in order to control the superimposition process between them. When GeoServer composes the granules to satisfy the user request, some of them can overlap some others, therefore, setting this parameter with the opportune color avoids the overlap of no data areas between granules."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:45
msgid "**MaxAllowedTiles**: Set the maximum number of the tiles that can be load simultaneously for a request. In case of a large mosaic this parameter should be opportunely set to not saturating the server with too many granules loaded at the same time."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:46
msgid "**MergeBehavior**: Merging behaviour for the various granules of the mosaic that GeoServer will produce. This parameter controls whether we want to merge in a single mosaic or stack all the bands into the final mosaic."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:47
msgid "**OutputTransparentColor**: Set the transparent color for the created mosaic."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:48
msgid "**SORTING**: Allow to specify the time order of the obtained granules set. Valid values are DESC (descending) or ASC (ascending). Note that it works just using DBMS as indexes."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:49
msgid "**SUGGESTED_TILE_SIZE**: Controls the tile size of the input granules as well as the tile size of the output mosaic. It consists of two positive integers separated by a comma, like 512,512."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:50
msgid "**USE_JAI_IMAGEREAD**: If true, GeoServer will make use of JAI ImageRead operation and its deferred loading mechanism to load granules; if false, GeoServer will perform direct ImageIO read calls which will result in immediate loading."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:52
msgid "At this point the ImageMosaic is being published with GeoServer. Next step is checking how the performances in accessing the datasets have been improved."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:56
msgid "Look for a *geosolutions:boulder_bg* layer (the dataset without optimization) and click the :guilabel:`OpenLayers` link beside of it."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:60
msgid "Play with the map preview by zooming and panning. When zooming, the response time isn't immediate due to the access to the underlying big datasets which haven't been optimized."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:62
msgid "Return to the :guilabel:`Layer Preview` page."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:64
msgid "Look for a *geosolutions:boulder_bg_optimized* layer (the optimized dataset with tiling and overviews set) and click the :guilabel:`OpenLayers` link beside of it."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:68
msgid "Play with the map preview by zooming and panning:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:70
msgid "Check how the **performances have been improved** leveraging on both overviews and tiling."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:72
msgid "Note the **better image quality** of the lowest resolution views, having used an average interpolation algorithm when creating the overviews."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:76
msgid "Configuring an Image Pyramid"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:78
msgid "GeoServer can efficiently deal with large TIFF with overviews, as long as the TIFF is below the 2GB size limit. Once the image size goes beyond such limit it's time to start considering an image pyramid instead. An image pyramid builds multiple mosaics of images, each one at a different zoom level, making it so that each tile is stored in a separate file. This comes with a composition overhead to bring back the tiles into a single image, but can speed up image handling as each overview is tiled, and thus a sub-set of it can be accessed efficiently (as opposed to a single GeoTIFF, where the base level can be tiled, but the overviews never are)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:82
msgid "In order to build the pyramid we'll use the `gdal_retile.py <http://www.gdal.org/gdal_retile.html>`_ utility, part of the GDAL command line utilities and available for various operating systems."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:84
msgid "Navigate to the workshop directory and create the `bmpyramid` directory into the `<TRAINING_ROOT>\\\\data\\\\user_data` directory"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:86
msgid "From the command line run"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:102
msgid "The `gdal_retile.py  <http://www.gdal.org/gdal_retile.html>`_ user guide provides a detailed explanation for all the possible parameters, here is a description of the ones used in the command line above:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:104
msgid "`-v`: verbose output, allows the user to see each file creation scroll by, thus knowing progress is being made (a big pyramid construction can take hours)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:105
msgid "`-r bilinear`: use bilinear interpolation when building the lower resolution levels. This is key to get good image quality without asking GeoServer to perform expensive interpolations in memory"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:106
msgid "`-levels 4`: the number of levels in the pyramid"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:107
msgid "`-ps 2048 2048`: each tile in the pyramid will be a 2048x2048 GeoTIFF"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:108
msgid "`-co \"TILED=YES\"`: each GeoTIFF tile in the pyramid will be inner tiled"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:109
msgid "`-co \"COMPRESS=JPEG\"`: each GeoTIFF tile in the pyramid will be JPEG compressed (trades small size for higher performance, try out it without this parameter too)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:110
msgid "`-targetDir bmpyramid`: build the pyramid in the bmpyramid directory. The target directory must exist and be empty"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:111
msgid "`bmreduced.tiff`: the source file"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:113
msgid "This will produce a number of TIFF files in bmpyramid along with the sub-directories `1`, `2,` `3`, and `4`."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:115
msgid "Go to the **Stores** section an add a new ``Raster Data Source`` clicking on **ImagePyramid**:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:120
msgid "*Adding a ImagePyramid Data Source*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:124
msgid "This assumes the GeoServer image pyramid plug-in is already installed. The pyramid is normally an extension."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:126
msgid "If the ImagePyramid store is not avaiable, before doing the exercise install the geoserver pyramid plugin from :file:`{%TRAINING_ROOT%/data/plugins/}` . Just decompress the zip file into :file:`{%TRAINING_ROOT%/webapps/geoserver/WEB-INF/lib/}` and restart GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:128
msgid "Specify a proper name (``bm_pyramid``) in the Data Source Name field of the interface and specify a proper URL with the pyramid data directory"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:141
msgid "*Configuring a image pyramid store*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:143
msgid "Click the **Save** button."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:147
msgid "When clicking save the store will look into the directory, recognize a ``gdal_retile`` generated structure and perform some background operations::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:153
msgid "Publish the new pyramid created:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:158
msgid "*Choosing the coverage for publishing*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:160
msgid "Setup the layer parameter **USE_JAI_IMAGEREAD** to false to get better scalability: as told before the image loading using imageread is done using the JAI deferred mode so the data will be really loaded when are needed. This may cause many idle open ImageReaders, in case of having to deal with big pyramids (lots of granules over many levels) and it could cause performances issues."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:165
msgid "*Tuning the pyramid parameters*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:167
msgid "Click **Submit** button and go to the GeoServer **Map Preview** to see the pyramid:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\mosaic_pyramid.rst:172
msgid "*Previewing the pyramid*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:6
msgid "Introduction To Processing With GDAL Utilities"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:8
msgid "In the :ref:`Adding a GeoTiff <geoserver.add_geotiff>` section, a GeoTIFF file has been added to GeoServer as is. However, it's common practice to do a preliminary analysis on the available data and, if needed, optimize it since configuring big datasets without proper pre-processing, may result in low performance when accessing them. In this section, instructions about how to do data optimization will be provided by introducing some FWTools Utilities."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:11
msgid "On a *Windows* machine you can set-up a shell with all GDAL Utilities opening a terminal and running the file :file:`setenv.bat` under the `%TRAINING_ROOT%` folder. This operation must repeated whenever a new terminal window is open. Alternatively run directly the file :file:`gdal.bat` under the `%TRAINING_ROOT%` folder."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:14
msgid "gdalinfo"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:15
msgid "This utility allows to get several info from the GDAL library, for instance, specific Driver capabilities and input Datasets/Files properties."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:18
msgid "*gdalinfo - Getting Drivers Capabilities*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:20
msgid "Being GeoTIFF a widely adopted geospatial format, it's useful to get information about the GDAL GeoTIFF's Driver capabilities using the command::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:24
msgid "This is only a trimmed down version of a typical output::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:107
msgid "From the above list of create options it's possible to determine the main GeoTIFF Driver's writing capabilities:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:99
msgid "COMPRESS: customize the compression to be used when writing output data"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:100
msgid "JPEG_QUALITY: specify a quality factor to be used by the JPEG compression"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:101
msgid "TILED: When set to YES it allows to tile output data"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:102
msgid "BLOCKXSIZE, BLOCKYZISE: Specify the Tile dimension width and Tile dimension height"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:103
msgid "PHOTOMETRIC: Specify the photometric interpretation of the data"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:104
msgid "PROFILE: Specify the GeoTIFF profile to be used (some profiles only support a minimal set of TIFF Tags while some others provide a wider range of Tags)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:105
msgid "BIGTIFF: Specify when to write data as BigTIFF (A TIFF format which allows to break the 4GB Offset boundary)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:110
msgid "*gdalinfo - Getting Dataset/File Properties*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:111
msgid "The following instructions allow you to get information about the sample dataset previously configured in GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:113
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:19
msgid "Run::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:131
msgid "Part of the *gdalinfo* output on a sample dataset"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:133
msgid "Check the **Block** info as well as the **Overviews** info if present."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:135
msgid "**Block**: It represents the internal tiling. Notice that the sample dataset has tiles made of 16 rows having width equals to the full image width."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:136
msgid "**Overviews**: It provides information about the underlying overviews. Notice that the sample dataset doesn't have overviews since the *Overviews* property is totally missing from the gdalinfo output."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:139
msgid "gdal_translate"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:140
msgid "This utility allows to convert a dataset to a different format by allowing a wide set of parameters to customize the conversion."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:142
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:227
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:337
msgid "Running the command::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:146
msgid "allows to get the list of supported parameters as well as the supported output formats::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:178
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:240
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:366
msgid "Where the meaning of the main parameters is summarized below:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:162
msgid "*-ot*: allows to specify the output datatype (Make sure that the specified datatype is contained in the *Creation Datatypes* list of the Writing driver)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:163
msgid "*-of*: specify the desired output format (GTIFF is the default value)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:164
msgid "*-b*: allows to specify an input band to be written in the output file. (Use multiple *-b* option to specify more bands)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:165
msgid "*-mask*: allows to specify an input band to be write an output dataset mask band."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:166
msgid "*-expand*: allows to expose a dataset with 1 band with a color table as a dataset with 3 (rgb) or 4 (rgba) bands. The (gray) value allows to expand a dataset with a color table containing only gray levels to a gray indexed dataset."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:167
msgid "*-outsize*: allows to set the size of the output file in terms of pixels and lines unless the *%* sign is attached in which case it's as a fraction of the input image size."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:168
msgid "*-unscale*: allows to apply the scale/offset metadata for the bands to convert from scaled values to unscaled ones."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:169
msgid "*-scale*: allows to rescale the input pixels values from the range src_min to src_max to the range dst_min to dst_max. (If omitted the output range is 0 to 255. If omitted the input range is automatically computed from the source data)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:170
msgid "*-srcwin*: allows to select a subwindow from the source image in terms of xoffset, yoffset, width and height"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:171
msgid "*-projwin*: allows to select a subwindow from the source image by specifying the corners given in georeferenced coordinates."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:172
msgid "*-a_srs*: allows to override the projection for the output file. The srs_def may be any of the usual GDAL/OGR forms, complete WKT, PROJ.4, EPSG:n or a file containing the WKT."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:173
msgid "*-a_ullr*: allows to assign/override the georeferenced bounds of the output file."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:174
msgid "*-a_nodata*: allows to assign a specified nodata value to output bands."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:175
msgid "*-co*: allows to set a creation option in the form \"NAME=VALUE\" to the output format driver. (Multiple *-co* options may be listed.)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:176
msgid "*-stats*: allows to get statistics (min, max, mean, stdDev) for each band"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:177
msgid "*src_dataset*: is the source dataset name. It can be either file name, URL of data source or subdataset name for multi*-dataset files."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:178
msgid "*dst_dataset*: is the destination file name."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:181
msgid "*gdal_translate - Tiling the sample dataset*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:182
msgid "The following steps provide instructions to tile the sample dataset previously configured in GeoServer, by using the GeoTiff driver."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:184
msgid "Create a directory to store the converted data:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:198
msgid "Convert the input sample data to an output file having tiling set to 512x512. Run:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:208
msgid "Optionally, check that the output dataset have been successfully tiled, by running the command:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:221
msgid "Part of the *gdalinfo* output on the tiled dataset. Notice the **Block** value now is 512x512"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:224
msgid "gdaladdo"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:225
msgid "This utility allows to add overviews to a dataset. The following steps provide instructions to add overviews to the tiled sample dataset."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:231
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:341
msgid "allows to get the list of supported parameters::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:237
msgid "*-r*: allows to specify the resampling algorithm (Nearest is the default value)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:238
msgid "*-ro*: allows to open the dataset in read-only mode, in order to generate external overview (for GeoTIFF especially)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:239
msgid "*filename*: represents the file to build overviews for."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:240
msgid "*levels*: allows to specify a list of overview levels to build."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:243
msgid "*gdaladdo - Adding overviews to the sample dataset*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:245
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:274
#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:371
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:67
msgid "Run:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:259
msgid "to add 5 levels of overviews having 2,4,8,16,32 subsampling factors applied to the original image resolution respectively."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:261
msgid "Optionally, check that the overviews have been added to the dataset, by running the command::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:267
msgid "Part of the *gdalinfo* output on the tiled dataset with overviews. Notice the **Overviews** properties"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:270
msgid "Process in bulk"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:272
msgid "Instead of manually repeating these 2 steps (retile + add overviews) for each file, we can invoke a few commands to get it automated."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:296
msgid "will be open a text editor. Copy the following content::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:311
msgid "Then save the file and run the created .bat file::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:315
msgid "You should see a list of run like this::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:329
msgid "This process can take some seconds."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:331
msgid "At this point optimized datasets have been prepared and they are ready to be served by GeoServer as an ImageMosaic."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:334
msgid "gdalwarp"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:335
msgid "This utility allows to warp and reproject a dataset. The following steps provide instructions to reproject the aerial dataset (which has \"EPSG:26913\" coordinate reference system) to WGS84 (\"EPSG:4326\")."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:357
msgid "*-s_srs*: allows to specify the source coordinate reference system"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:358
msgid "*-t_srs*: allows to specify the target coordinate reference system"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:359
msgid "*-te*: allows to set georeferenced extents (expressed in target CRS) of the output"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:360
msgid "*-tr*: allows to specify the output resolution (expressed in target georeferenced units)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:361
msgid "*-ts*: allows to specify the output size in pixel and lines."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:362
msgid "*-r*: allows to specify the resampling method (one of near, bilinear, cubic, cubicspline and lanczos)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:363
msgid "*-srcnodata*: allows to specify band values to be excluded from interpolation."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:364
msgid "*-dstnodata*: allows to specify nodata values on output file."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:365
msgid "*-wm*: allows to specify the amount of memory (expressed in megabytes) used by the warping API for caching."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:369
msgid "*gdalwarp - Reprojecting sample dataset to WGS84*"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:385
msgid "to reproject the specified aerial dataset to WGS84 coordinate reference system."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:387
msgid "Optionally, check that reprojection has been successfull, by running the command::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:393
msgid "Part of the *gdalinfo* output on the warped dataset. Notice the updated **Coordinate System** property"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\003_adv_raster\processing.rst:396
msgid "In the :ref:`next <geoserver.mosaic_pyramid>` section, instructions to configure an ImageMosaic will be provided."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\filter.rst:4
msgid "Filtering and Extracting vector data"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\filter.rst:6
msgid "WFS also defines mechanisms to only retrieve a subset of the data that matches some specified constraints."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\filter.rst:8
msgid "Create a new ``request.xml`` file in the training root and past the following request into it::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\filter.rst:19
msgid "Go on the command line, move to the training folder root, and execute the request using CURL::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\filter.rst:24
msgid "Now, let's write an equivalent request - using the name of the state instead of the ``id``- issuing a ``GET`` and encoding the filter in a language called `CQL <http://en.wikipedia.org/wiki/CQL>`_. Copy the following  URL in your browser's navigation bar::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\filter.rst:30
msgid "The CQL filter in the Firefox URL bar"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\filter.rst:34
msgid "The results of the CQL filter"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\filter.rst:36
msgid "That's how a feature set is filtered with either the OGC encoding or the CQL notation."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\filter.rst:38
msgid "In the :ref:`next <geoserver.vector_data.wfst>` section we will see how to edit the features via a protocol called WFS Transactional (WFS-T)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:4
msgid "Retrieving vector data and metadata"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:6
msgid "In this section we will learn how to deal with vector data using WFS. First we will learn how to deal with metadata and then how to retrieve the features. We will be using the layer named ``Counties`` in the workshop namespace."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:8
msgid "The Open Geospatial Consortium Web Feature Service Interface Standard (WFS) provides an interface allowing requests for geographical features across the web using platform-independent calls. One can think of geographical features as the \"source code\" behind a map, whereas the WMS interface or online mapping portals like Google Maps return only an image, which end-users cannot edit or spatially analyze."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:13
msgid "On the Welcome page locate the :guilabel:`Layer Preview` link (no need to login)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:19
msgid "Navigate to the WFS GML output of the `Counties` layer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:23
msgid "WFS GML output"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:25
msgid "Depending on the browser, the output may be unformatted or recognized as XML. Here is what Firefox 3 shows: http://localhost:8083/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=geosolutions:Counties&maxFeatures=50&outputFormat=GML2"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:30
msgid "Default WFS layer preview."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:32
msgid "We recommend the Mozilla Firefox web browser for navigating WFS response documents."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:35
msgid "Now that we know the quick and easy way to get WFS data, let's go back and do it the way a standard WFS client works. First, the only thing expected to be known is the WFS server url: http://localhost:8083/geoserver/ows?service=WFS&version=1.0.0"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:37
msgid "Using that url, we can issue a ``GetCapabilities`` request in order to know which layer it contains and what operations are supported: http://localhost:8083/geoserver/ows?service=WFS&version=1.0.0&request=GetCapabilities"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:42
msgid "GetCapabilities response"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:44
msgid "If we scroll below, we will find the ``Counties`` feature type described:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:48
msgid "GetCapabilities response (``Counties`` feature type)"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:52
msgid "Now let's request more information for the ``Counties`` layer using a ``DescribeFeatureType`` request:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:52
msgid "http://localhost:8083/geoserver/ows?service=WFS&version=1.0.0&request=DescribeFeatureType&typename=geosolutions:Counties"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:54
msgid "Which gives us information about the fields names and types as well as the geometry type, in this case ``MultiPolygon``."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:58
msgid "DescribeFeatureType response for Counties feature type"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:61
msgid "After that, we can issue a basic ``GetFeature`` request, that looks like this::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:65
msgid "Notice it's almost the same as the one that Geoserver generated, but it's requestin a single feature specifying its identifier via ``featureId=Counties.1``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\get.rst:67
msgid "In the :ref:`next <geoserver.vector_data.filter>` section we will see how to filter the WFS output based on various attributes."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\index.rst:7
msgid "Advanced Vectorial Data Management"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\index.rst:9
msgid "This module presents working with vector data, how to obtain vector data information, filter, extract and update."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\index.rst:11
msgid "In this module you will learn how to:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:4
msgid "Modifying Feature Types"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:6
msgid "GeoServer provides a fully Transactional Web Feature Service (WFS-T) which enables users to insert/delete/modify the avilable FeatureTypes. This section shows a few of the GeoServer WFS-T capabilities and interactions with GIS clients."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:10
msgid "Modifying Feature Types using GeoNode"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:12
msgid "Open your instance of `GeoNode <http://geonode.org>`_ and log in as a `superuser` or a user having write rigths on at least some `Layers`"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:17
msgid "GeoNode Layers"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:19
msgid "Select a `Layer` on which whon you have right to edit `data`"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:21
msgid "You can edit **only** `Layers` which have been stored on a JDBC DataStore, like a DataBase. On GeoNode this is only possible if the ``DB datastore`` has been enabled from the ``settings``."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:26
msgid "GeoNode Layer Select"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:28
msgid "Click on `Edit Layer` and then, from the pop-up window, click on `Edit data`"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:30
msgid "The `Edit data` button will be available **only** for writable `Layers` (see above)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:35
msgid "GeoNode Edit Layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:37
msgid "When the `Map` shows up along with your `Layer`, zoom in to a region you want to update or create."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:42
msgid "GeoNode Navigate Layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:45
msgid "Identify the `Edit` button on the map top toolbar, click on the **small arrow** on the left in order to show up the context menu."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:50
msgid "GeoNode Edit Button"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:52
msgid "Lets first `Modify` a FeatureType. Click on **Modify**."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:57
msgid "GeoNode Modify FeatureType"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:59
msgid "Select a geometry and click over it. From the small info dialog window, select **Edit**"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:64
msgid "GeoNode Editing a FeatureType"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:66
msgid "Modify the geometry and/or the values of the field as you wish, and then click on **Save**."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:68
msgid "If you want you can also completely delete the FeatureType by clicking on the **Delete** button from the same info dialog window."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:73
msgid "GeoNode Updating a FeatureType"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:75
msgid "Verify that the changes have been stored on GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:77
msgid "Replace the URL ::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:81
msgid "with ::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:85
msgid "Pay attention to the parameter: ``layer`` becomes ``layers``, plural. If you want you can also add an **output format** parameter, like ``format=openlayers``. In that case the complete URL becomes::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:87
msgid "http://your_host/geoserver/wms/reflect?layers=geonode:streams_1&format=openlayers"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:92
msgid "GeoServer Displaying the Updated Layer"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:94
msgid "Click over the FeautreType in order to display the updates values too."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:96
msgid "Repeat the FeatureType editing but this time click on **Create** (or simply click over the `Edit` button and **not** on its right small arrow)."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:101
msgid "GeoNode Creating a FeatureType"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:106
msgid "GeoServer Displaying the New Feature"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:109
msgid "Modifying Feature Types using a Desktop GIS client"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:111
msgid "Open `uDig <http://udig.refractions.net>`_ GIS desktop client by going on the command line, changing directory in the training root if necessary, and running the ``udig`` commmand."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:113
msgid "Add GeoServer WFS to the catalog."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:117
msgid "Use the import button in the catalog tab, and select \"data\" in the first page of the wizard"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:121
msgid "Selection of Web Feature Service data"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:123
msgid "Insert into the URL text box the following address::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:129
msgid "The WFS URL"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:131
msgid "Select the `Mainrd` from the list"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:135
msgid "WFS Datasets shown into the uDig catalog"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:137
msgid "Load the `Mainrd` Feature Type using *drag-n-drop*."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:141
msgid "Importing `Mainrd` into the map"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:143
msgid "Perform a zoom operation on the upper-right part of the layer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:147
#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:151
msgid "Zooming in ..."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:153
msgid "By using the :guilabel:`Select and Edit Geometry` tool try to move/add/remove some vertex to the small line at the center of the screen."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:157
msgid "Playing with the Geometry"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:159
msgid "Once finished use the :guilabel:`Commit` tool to persist the changes on GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:163
msgid "Committing changes throught the WFS-T protocol"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:165
msgid "Use GeoServer **Layer Preview** to view the changes on the `Mainrd` layer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:167
msgid "In order to view the streets lines you have to specify the `line` style on the GetMap request."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:171
msgid "Showing the changes to the `Mainrd` Feature Type"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:173
msgid "On uDig look the Feature attribute values using the :guilabel:`Info` tool."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:177
msgid "Retrieving Feature Type info from uDig interface"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:179
msgid "Now open/create the ``request.xml`` file in the training root dir and set in the following requst, which will be used to issue an **Update** Feature type request to the WFS-T updating all roads labelled as ``Monarch Rd`` to ``Monarch Road``"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:198
msgid "Issue the WFS-T request towards GeoServer using curl on the command line::"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:202
msgid "The response should be a TransactionResponse XML document containing a ``wfs:SUCCESS`` element"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:204
msgid "Ask the info again using the uDig :guilabel:`Info` tool ..."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:206
msgid "In order to issue a GetFeatureInfo request from the OpenLayers MapPreview tool, just left-click over the line."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:210
msgid "Obtaining the updated Feature Type info from uDig interface"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:212
msgid "Finally, obtain the Feature type info using the GetFeatureInfo operation issued directly by the `Map Preview <http://localhost:8083/geoserver/mapPreview.do>`_ ."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\004_adv_vector\wfst.rst:216
msgid "Obtaining the updated Feature Type info from OpenLayers MapPreview GetFeatureInfo"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\index.rst:4
msgid "Spatial Processing with GeoNode"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:4
msgid "Spatial Processing with Sextante"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:6
msgid "Once you have connected to a GeoNode service and its data is available from QGIS, analysis can be performed on it, just as if you were using local data."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:8
msgid "SEXTANTE is the analysis and data processing framework of QGIS, and it can be used to run a large number of different analysis algorithms for both raster and vector data. Both WCS and WFS connections can be used to get data that can be processes through SEXTANTE."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:10
msgid "The SEXTANTE toolbox is the main component to call processing algorithms, and it contains a list all of available ones, organized by providers."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:15
msgid "The *QGIS algorithms* group contains native python algorithms. Most of the remaining ones represent algorithms that depend on a third-party application. From the point of view of the user, however, there is no difference in the way these algorithms are executed, since they share a common UI and SEXTANTE takes care of the communication between the application and QGIS."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:17
msgid "To run an algorithm, just click on its name in the toolbox, and a dialog will appear to define the inputs and outputs of the selected algorithm."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:22
msgid "All dialogs used to entering the parameters needed for an algorithm are created on-the-fly, and they all share the same look and feel, no matter which application the algorithm relies on."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:24
msgid "If the selected algorithm requires vector layers, all loaded vector layers will be available, including those from WFS connections. If it requires raster layers, all loaded raster layers will be available, including those from WCS connections."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:26
msgid "Click on *Ok* and the algorithm will be run and its outputs loaded in the QGIS canvas."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:28
msgid "Algorithm depending on third-party application can be called in the same way. WFS and WMS layers will be available as well, even if the application does not support web services. SEXTANTE will take care of creating an intermediate file or selecting a compatible way of feeding the data into the application, performing all necessary import operations under the hood."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:30
msgid "For instance, you can run algorithm that uses the R statistical computing software to perform a statistical analysis on the data loaded from a WFS connection."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:34
msgid "The interface to define the input parameters is very similar to the one we saw in the previous example (and to those of all the other algorithms), and using an external application makes no difference from the point of view of the user."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:38
msgid "SEXTANTE algorithms are aware of the state of layers used for input. That means that they can take into account whether there is a selection in a vector layer, even in the case of calling an external application. In the SEXTANTE configuration menu, in the *General* group, check the \"Use selected features\" option to enable this behavior."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:40
msgid "image:: use_selected.png"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:42
msgid "Now you can make a selection and call the R algorithm used before. It will just use those features that you selected."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:44
msgid "Notice that SEXTANTE provides the context for seamlessly integrating all the pieces and allowing to easily work with all of them together. In this case, GeoServer is providing the data, QGIS is providing the interface where we perform the selection, and R is providing the processing. SEXTANTE is just the mediator between these elements."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:46
msgid "Using SEXTANTE we can interact with a GeoServer instance not just to consume its data, but to import into it, having a bidirectional connection."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:48
msgid "In the *GeoServer/PostGIS tools* group, you will find some tools that you can use to create a new workspace, import a layer or import a style, among others."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:52
msgid "Styles are imported using an SLD file. Since QGIS supports exporting the style of a layer to SLD, you can create you styling using QGIS, then export it, and then use the corresponding SEXTANTE algorithm to add it to your GeoServer. To create and export a style, just right-click on a layer name in the TOC, select *Properties*, and then move to the *Style* tab. Clink on *Save Style...\" and the select *SLD style*."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:56
msgid "Calling algorithms from the toolbox is the most common way of processing data with SEXTANTE, but in some cases that might not be the best alternative, specially if we have a workflow that involves a large number of different processes. SEXTANTE includes a graphical modeler that allow to create complex workflows that can be later executed as a single process, thus simplifying the process."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:58
msgid "The modeler interface is started from the SEXTANTE menu, using the \"SEXTANTE modeler\" menu."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:62
msgid "Creating a model involves adding a set of inputs and then the algorithms to use on then, defining the links between them."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:64
msgid "As an example, the model in the figure below takes a points layer, interpolates a raster layer from it and then extracts contour lines for that resulting raster layer, given an interval. The final layer is imported into a GeoServer instance. Used with a WFS service, this can be used to easily create an additional lines layer for a given points layer in a GeoServer instance, such as one containing temperature data for a set of sensors."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:68
msgid "The model can be added to the toolbox and run as any of the built-in algorithms."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:72
msgid "Its parameters dialog is also created automatically from the inputs it takes and the outputs it produces."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:76
msgid "SEXTANTE exposes its API through the QGIS python console, including not just all its available algorithms, but also several tools for easy handling both vector and raster data and creating new geoalgorithms. Users familiar with python will be able to create much more complex models with ease, and to automate tasks that involve processing."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:78
msgid "algorithms are executed ussing the ``runalg`` method, passing the name of the algorithm and the parameters it requires. Importing a layer into geoserver can be done from the QGIS console using code like the one shown below:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:86
msgid "Algorithms in the ``gspg`` namespace include utilities for interacting with both GeoServer and PostGIS."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:88
msgid "If the layer is loaded into QGIS, there is no need to enter the filename. The layer object can be obtained with the ``getobject()`` method and then passed to the algorithm call instead of the filename. For a layer named *mylayer*, that would be:"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:97
msgid "Finally, a last productivity tool is available in SEXTANTE: the batch processing interface. Repeated calls to a single algorithm are simplified by using the batch processing interface. This can be used, for instance, to perform a bulk import of layers into GeoServer, by setting the batch processing interface to call the *Import into GeoServer* algorithm as many times as layers are to be imported."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:99
msgid "To open the batch processing interface, right-click on the name of an algorithm in the toolbox and select *Run as batch process*."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:103
msgid "Each row in the table (3 by default) represents a single execution, and more rows can be added manually, or will be automatically added when selecting a set of input layers, each of them to be used as input in a different execution of the algorithm."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:107
msgid "Models can also be run as a batch process. The model defined above, which computed a set of contour lines from a points layer and imported the result into GeoServer, can be called repeatedly using the same input layer and different intervals, to get contour layers of different level of detail, suitable to be rendered at different scales."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\005_spatial_processing\sextante.rst:109
msgid "More detailed documentation about SEXTANTE can be found at a dedicated chapter in the current QGIS manual, at http://docs.qgis.org/html/en/docs/user_manual/sextante/index.html. For the most up-to-date version, check the corresponding entry at the QGIS documentation github repository, at https://github.com/qgis/QGIS-Documentation/tree/master/source/docs/user_manual/sextante"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\index.rst:4
msgid "Advanced Data Management and Processing"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\index.rst:16
msgid ":ref:`geoserver.adding_data`"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\index.rst:16
msgid "Learn how to add data to GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\index.rst:19
msgid ":ref:`geoserver.pretty_maps`"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\index.rst:19
msgid "Learn how to create pretty styles for the Maps in GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\index.rst:22
msgid ":ref:`geoserver.raster_data`"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\index.rst:22
msgid "Learn advanced tecquinques for the delivery of Raster Data with GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\index.rst:25
msgid ":ref:`geoserver.vector_data`"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\index.rst:25
msgid "Learn advanced tecquinques for the delivery of Vectorial Data with GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\index.rst:27
msgid ":ref:`spatial_processing`"
msgstr ""

#: ..\..\006_adv_workshop\001_adv_data_mgmt\index.rst:28
msgid "Learn how to do Spatial Processing using external tools."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:5
msgid "GeoNode Django Apps"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:7
msgid "The user interface of a GeoNode site is built on top of the Django web framework.  GeoNode includes a few \"apps\" (reusable Django modules) to support development of those user interfaces.  While these apps have reasonable default configurations, for customized GeoNode sites you will probably want to adjust these apps for your specific needs."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:49
msgid "``geonode.base`` - GeoNode core functionality"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:51
msgid "Stores core functionality used throughout the GeoNode application."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:54
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:103
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:371
msgid "Template Tags"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:55
msgid "num_ratings <object>"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:57
msgid "Returns the number of ratings an object has.  Example usage::"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:64
msgid "categories"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:66
msgid "Returns topic categories and the count of objects in each category."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:70
msgid "``geonode.documents`` - Document creation and management"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:72
msgid "Manages uploaded files that can be related to maps.  Documents can be any type of file that is included in the ALLOWED_DOCUMENTS_TYPES setting."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:76
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:153
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:353
msgid "``settings.py`` Entries"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:81
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:20
msgid "ALLOWED_DOCUMENT_TYPES"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:79
msgid "Default: ``['doc', 'docx', 'xls', 'xslx', 'pdf', 'zip', 'jpg', 'jpeg', 'tif', 'tiff', 'png', 'gif', 'txt']``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:81
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:23
msgid "A list of acceptable file extensions that can be uploaded to the Documents app."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:86
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:26
msgid "MAX_DOCUMENT_SIZE"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:84
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:27
msgid "Default: ``2``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:86
msgid "The maximum size (in megabytes) that an upload will be before it gets rejected."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:89
msgid "``geonode.layers`` - Layer creation and geospatial data management"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:90
msgid "This Django app provides support for managing and manipulating single geospatial datasets known as layers."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:93
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:134
msgid "Models"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:94
msgid "Attribute - Feature attributes for a layer managed by the GeoNode."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:95
msgid "Layer - A data layer managed by the GeoNode"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:96
msgid "Style - A data layer's style managed by the GeoNode"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:99
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:140
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:326
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:344
msgid "Views"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:100
msgid "Creating, viewing, browsing, editing, and deleting layers and their metadata"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:105
msgid "featured_layers"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:105
msgid "Returns the the 7 newest layers."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:108
msgid "layer_thumbnail <layer>"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:108
msgid "Returns the layer's thumbnail."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:111
msgid "``manage.py`` Commands"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:118
msgid "importlayers"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:114
msgid "``python manage.py importlayers``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:116
msgid "Brings a data file or a directory full of data files into a GeoNode site.  Layers are added to the Django database, the GeoServer configuration, and the GeoNetwork metadata index."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:123
msgid "updatelayers"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:121
msgid "``python manage.py updatelayers``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:123
msgid "Scan Geoserver for data that has not been added to GeoNode."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:126
msgid "``geonode.maps`` - Map creation and geospatial data management"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:128
msgid "This Django app provides some support for managing and manipulating geospatial datasets.  In particular, it provides tools for editing, viewing, and searching metadata for data layers, and for editing, viewing, and searching maps that aggregate data layers to display data about a particular topic."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:136
msgid "Map - A collection of data layers composed in a particular order to form a map"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:137
msgid "MapLayer - A model that maintains some map-specific information related to a layer, such as the z-indexing order."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:142
msgid "The maps app provides views for:"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:144
msgid "Creating, viewing, browsing, editing, and deleting Maps"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:146
msgid "These operations require the use of GeoServer to manage map rendering, as well as GeoExt to provide interactive editing and previewing of maps and data layers."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:149
msgid "There are also some url mappings in the ``geonode.maps.urls`` module for easy inclusion in GeoNode sites."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:270
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:171
msgid "OGC_SERVER"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:156
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:172
msgid "Default: ``{}`` (Empty dictionary)"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:158
msgid "A dictionary of OGC servers and and their options.  The main server should be listed in the 'default' key.  If there is no 'default' key or if the ``OGC_SERVER`` setting does not exist GeoNode will raise an Improperly Configured exception.  Below is an example of the ``OGC_SERVER`` setting::"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:177
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:189
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:470
msgid "BACKEND"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:173
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:190
msgid "Default: ``\"geonode.geoserver\"``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:175
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:192
msgid "The OGC server backend to use.  The backend choices are:"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:177
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:194
msgid "``'geonode.geoserver'``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:183
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:197
msgid "BACKEND_WRITE_ENABLED"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:180
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:211
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:216
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:221
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:198
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:243
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:259
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:271
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:366
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:379
msgid "Default: ``True``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:182
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:200
msgid "Specifies whether the OGC server can be written to.  If False, actions that modify data on the OGC server will not execute."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:192
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:248
msgid "LOCATION"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:186
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:195
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:249
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:278
msgid "Default: ``\"http://localhost:8080/geoserver/\"``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:188
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:251
msgid "A base URL from which GeoNode can construct OGC service URLs. If using Geoserver you can determine this by visiting the GeoServer administration home page without the /web/ at the end.  For example, if your GeoServer administration app is at http://example.com/geoserver/web/, your server's location is http://example.com/geoserver."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:198
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:277
msgid "PUBLIC_LOCATION"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:197
msgid "The URL used to in most public requests from GeoNode.  This settings allows a user to write to one OGC server (the LOCATION setting) and read from a seperate server or the PUBLIC_LOCATION."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:203
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:284
msgid "USER"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:201
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:285
msgid "Default: ``'admin'``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:203
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:287
msgid "The administrative username for the OGC server as a string."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:208
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:264
msgid "PASSWORD"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:206
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:265
msgid "Default: ``'geoserver'``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:208
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:267
msgid "The administrative password for the OGC server as a string."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:213
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:258
msgid "MAPFISH_PRINT_ENABLED"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:213
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:261
msgid "A boolean that represents whether the Mapfish printing extension is enabled on the server."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:218
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:270
msgid "PRINT_NG_ENABLED"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:218
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:273
msgid "A boolean that represents whether printing of maps and layers is enabled."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:223
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:242
msgid "GEONODE_SECURITY_ENABLED"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:223
msgid "A boolean that represents whether GeoNode's security application is enabled."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:228
msgid "GEOGIT_ENABLED"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:226
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:231
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:236
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:356
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:62
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:237
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:291
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:297
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:359
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:492
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:498
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:507
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:559
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:565
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:589
msgid "Default: ``False``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:228
msgid "A boolean that represents whether the OGC server supports Geogig datastores."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:233
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:290
msgid "WMST_ENABLED"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:233
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:238
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:293
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:299
msgid "Not implemented."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:238
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:296
msgid "WPS_ENABLED"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:270
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:204
msgid "DATASTORE"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:241
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:205
msgid "Default: ``''`` (Empty string)"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:243
msgid "An optional string that represents the name of a vector datastore that GeoNode uploads are imported into.  In order to support vector datastore imports there also needs to be an entry for the datastore in the ``DATABASES`` dictionary with the same name.  Example::"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:273
msgid "GEOSERVER_CREDENTIALS"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:273
#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:276
msgid "Removed in GeoNode 2.0, this value is now specified in the ``OGC_SERVER`` settings."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:276
msgid "GEOSERVER_BASE_URL"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:287
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:33
msgid "CATALOGUE"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:279
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:34
msgid "A dict with the following keys:"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:281
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:36
msgid "ENGINE: The CSW backend (default is ``geonode.catalogue.backends.pycsw_local``)"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:282
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:37
msgid "URL: The FULLY QUALIFIED base url to the CSW instance for this GeoNode"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:283
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:38
msgid "USERNAME: login credentials (if required)"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:284
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:39
msgid "PASSWORD: login credentials (if required)"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:286
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:41
msgid "pycsw is the default CSW enabled in GeoNode.  pycsw configuration directives are managed in the PYCSW entry."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:295
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:45
msgid "PYCSW"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:290
msgid "A dict with pycsw's configuration.  Of note are the sections ``metadata:main`` to set CSW server metadata and ``metadata:inspire`` to set INSPIRE options.  Setting ``metadata:inspire['enabled']`` to ``true`` will enable INSPIRE support.  Server level configurations can be overridden in the ``server`` section.  See http://pycsw.org/docs/configuration.html for full pycsw configuration details."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:300
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:308
#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:38
msgid "SITEURL"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:298
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:309
msgid "Default: ``'http://localhost:8000/'``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:300
msgid "A base URL for use in creating absolute links to Django views."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:303
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:78
msgid "DEFAULT_MAP_BASE_LAYER"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:303
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:79
msgid "The name of the background layer to include in newly created maps."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:309
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:82
msgid "DEFAULT_MAP_CENTER"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:306
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:83
msgid "Default: ``(0, 0)``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:308
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:85
msgid "A 2-tuple with the latitude/longitude coordinates of the center-point to use in newly created maps."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:316
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:89
msgid "DEFAULT_MAP_ZOOM"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:312
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:90
msgid "Default: ``0``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:314
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:92
msgid "The zoom-level to use in newly created maps.  This works like the OpenLayers zoom level setting; 0 is at the world extent and each additional level cuts the viewport in half in each direction."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:319
msgid "``geonode.proxy`` - Assist JavaScript applications in accessing remote servers"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:321
msgid "This Django app provides some HTTP proxies for accessing data from remote servers, to overcome restrictions imposed by the same-origin policy used by browsers.  This helps the GeoExt applications in a GeoNode site to access various XML documents from OGC-compliant data services."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:330
msgid "geonode.proxy.views.proxy"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:329
msgid "This view forwards requests without authentication to a URL provided in the request, similar to the proxy.cgi script provided by the OpenLayers project."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:337
msgid "geonode.proxy.views.geoserver"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:333
msgid "This view proxies requests to GeoServer.  Instead of a URL-encoded URL parameter, the path component of the request is expected to be a path component for GeoServer.  Requests to this URL require valid authentication against the Django site, and will use the default ``OGC_SERVER`` ``USER``, ``PASSWORD`` and ``LOCATION`` settings as defined in the maps application."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:340
msgid "``geonode.search`` - Provides the GeoNode search functionality."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:341
msgid "This Django app provides a fast search functionality to GeoNode."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:345
msgid "search_api- Builds and executes a search query based on url parameters and returns matching results in requested format."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:348
msgid "``geonode.security`` - GeoNode granular Auth Backend"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:350
msgid "This app provides an authentication backend for use in assigning permissions to individual objects (maps and layers)."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:360
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:358
msgid "LOCKDOWN_GEONODE"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:358
msgid "By default, the GeoNode application allows visitors to view most pages without being authenticated.  Set ``LOCKDOWN_GEONODE = True`` to require a user to be authenticated before viewing the application."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:368
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:349
msgid "AUTH_EXEMPT_URLS"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:363
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:318
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:350
msgid "Default: ``()`` (Empty tuple)"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:365
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:352
msgid "A tuple of url patterns that the user can visit without being authenticated. This setting has no effect if ``LOCKDOWN_GEONODE`` is not True.  For example, ``AUTH_EXEMPT_URLS = ('/maps',)`` will allow unauthenticated users to browse maps."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:377
msgid "geonode_media <media_name>"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:373
msgid "Accesses entries in MEDIA_LOCATIONS without requiring the view to explicitly add it to the template context.  Example usage::"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:383
msgid "has_obj_perm <user> <obj> <permission>"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:380
msgid "Checks whether the user has the specified permission on an object."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:382
msgid "``{% has_obj_perm user obj \"app.view_thing\" as can_view_thing %}``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:386
msgid "Django's error templates"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:388
msgid "GeoNode customizes some of Django's default error templates."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:391
msgid "500.html"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\django-apps.rst:393
msgid "If no custom handler for 500 errors is set up in the URLconf module, django will call django.views.defaults.server_error which expects a 500.html file in the root of the templates directory. In GeoNode, we have put a template that does not inherit from anything as 500.html and because most of Django's machinery is down when an INTERNAL ERROR (500 code) is encountered the use of template tags should be avoided."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\index.rst:4
msgid "GeoNode Advanced Configuration"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\index.rst:6
msgid "Here you will find information about each and every component of Geonode, for example geoserver, geonode settings, security, etc."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\index.rst:8
msgid ":ref:`settings`"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\index.rst:10
msgid ":ref:`djangoapps`"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\index.rst:12
msgid ":ref:`release`"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:4
msgid "Make a GeoNode release"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:6
msgid "Making a GeoNode release requires a quite complex preparation of the environment while once everything is set up is a really easy and quick task. As said the complex part is the preparation of the environment since it involves, the generation of a password key to be uploaded to the Ubuntu servers and imported in launchpad."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:9
msgid "If you have already prepared the environment then jump to the last paragraph."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:11
msgid "Before start, make sure to have a `pypi`_ and a `launchpad`_ account."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:16
msgid "Before doing the release, a GeoNode team member who can already make release has to add you as a launchpad GeoNode team member."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:19
msgid "Creating and importing a gpg key"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:21
msgid "A gpg key is needed to push and publish the package. There is a complete guide on how to `create and import`_ a gpg key"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:27
msgid "Preparing the environment"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:29
msgid "Make sure to have a Ubuntu 12.04 machine. Install the following packages in additon to the python virtulenv tools::"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:34
msgid "Get the GeoNode code (from master) in a virtuelnv::"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:40
msgid "Edit the .bashrc file and add the following lines (the key ID can be found in \"your personal keys\" tab::"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:47
msgid "then close and::"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:51
msgid "Type \"env\" to make sure all the variables are correctly exported"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:53
msgid "Set the correct git email::"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:57
msgid "Register on Pypi with your Pypi credentials::"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:63
msgid "Make the release"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:65
msgid "The followings are the only commands needed if the environment and the various registrations have already been done."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:67
msgid "Make sure to have pulled the master to the desired commit. Edit the file geonode/__init__.py at line 21 and set the correct version."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:70
msgid "Install GeoNode in the virtualenv (make sure to have the virtualenv activated and be in the geonode folder)::"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:74
msgid "Publish the package::"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:79
msgid "The last command will:"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:81
msgid "Tag the release and push it to GitHub"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:82
msgid "Create the debian package and push it at ppa:geonode/testing in launchpad"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:83
msgid "Create the .tar.gz sources and push them to Pypi"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\release.rst:84
msgid "Update the changelog and commit it to master"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:5
msgid "Settings"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:7
msgid "Here’s a list of settings available in GeoNode and their default values.  This includes settings for some external applications that GeoNode depends on."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:15
msgid "Documents settings"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:17
msgid "Here's a list of settings available for the Documents app in GeoNode."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:21
msgid "Default: ``['doc', 'docx', 'xls', 'xlsx', 'pdf', 'zip', 'jpg', 'jpeg', 'tif', 'tiff', 'png', 'gif', 'txt']``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:30
msgid "Metadata settings"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:46
msgid "A dict with pycsw's configuration.  Of note are the sections ``metadata:main`` to set CSW server metadata and ``metadata:inspire`` to set INSPIRE options.  Setting ``metadata:inspire['enabled']`` to ``true`` will enable INSPIRE support.   Server level configurations can be overridden in the ``server`` section.  See http://docs.pycsw.org/en/latest/configuration.html for full pycsw configuration details."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:54
msgid "DEFAULT_TOPICCATEGORY"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:55
msgid "Default: ``'location'``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:57
msgid "The identifier of the default topic category to use when uploading new layers.  The value specified for this setting must be present in the TopicCategory table or GeoNode will return a ``TopicCategory.DoesNotExist`` exception."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:61
msgid "MODIFY_TOPICCATEGORY"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:64
msgid "Metadata Topic Categories list should not be modified, as it is strictly defined by ISO (See: http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml and check the <CodeListDictionary gml:id=\"MD_MD_TopicCategoryCode\"> element)."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:68
msgid "Some customisation it is still possible changing the is_choice and the GeoNode description fields."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:71
msgid "In case it is absolutely necessary to add/delete/update categories, it is possible to set the MODIFY_TOPICCATEGORY setting to True."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:75
msgid "Maps settings"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:97
msgid "MAP_BASELAYERS"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:98
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:385
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:409
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:457
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:483
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:525
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:536
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:548
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:598
msgid "Default::"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:159
msgid "A list of dictionaries that specify the default map layers."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:162
msgid "LAYER_PREVIEW_LIBRARY"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:163
msgid "Default:  ``\"leaflet\"``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:165
msgid "The library to use for display preview images of layers.  The library choices are:"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:167
msgid "``\"leaflet\"``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:168
msgid "``\"geoext\"``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:174
msgid "A dictionary of OGC servers and and their options.  The main server should be listed in the 'default' key.  If there is no 'default' key or if the ``OGC_SERVER`` setting does not exist Geonode will raise an Improperly Configured exception.  Below is an example of the ``OGC_SERVER`` setting::"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:207
msgid "An optional string that represents the name of a vector datastore that Geonode uploads are imported into.  In order to support vector datastore imports there also needs to be an entry for the datastore in the ``DATABASES`` dictionary with the same name.  Example::"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:236
msgid "GEOGIG_ENABLED"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:239
msgid "A boolean that represents whether the OGC server supports GeoGig datastores."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:245
msgid "A boolean that represents whether Geonode's security application is enabled."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:280
msgid "The URL used to in most public requests from Geonode.  This settings allows a user to write to one OGC server (the LOCATION setting) and read from a seperate server or the PUBLIC_LOCATION."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:302
msgid "TIMEOUT"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:303
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:341
msgid "Default: ``10``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:305
msgid "The maximum time, in seconds, to wait for the server to respond."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:311
msgid "A base URL for use in creating absolute links to Django views and generating links in metadata."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:314
msgid "Proxy settings"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:317
msgid "PROXY_ALLOWED_HOSTS"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:320
msgid "A tuple of strings representing the host/domain names that GeoNode can proxy requests to. This is a security measure to prevent an attacker from using the GeoNode proxy to render malicious code or access internal sites."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:323
msgid "Values in this tuple can be fully qualified names (e.g. 'www.geonode.org'), in which case they will be matched against the request’s Host header exactly (case-insensitive, not including port). A value beginning with a period can be used as a subdomain wildcard: ``.geonode.org`` will match geonode.org, www.geonode.org, and any other subdomain of geonode.org. A value of '*' will match anything and is not recommended for production deployments."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:330
msgid "PROXY_URL"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:331
msgid "Default ``/proxy/?url=``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:333
msgid "The url to a proxy that will be used when making client-side requests in GeoNode.  By default, the internal GeoNode proxy is used but administrators may favor using their own, less restrictive proxies."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:337
msgid "Search settings"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:340
msgid "DEFAULT_SEARCH_SIZE"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:343
msgid "An integer that specifies the default search size when using ``geonode.search`` for querying data."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:346
msgid "Security settings"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:361
msgid "By default, the GeoNode application allows visitors to view most pages without being authenticated. If this is set to ``True`` users must be authenticated before accessing URL routes not included in ``AUTH_EXEMPT_URLS``."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:365
msgid "RESOURCE_PUBLISHING"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:368
msgid "By default, the GeoNode application allows GeoNode staff members to publish/unpublish resources. By default resources are published when created. When this settings is set to True the staff members will be able to unpublish a resource (and eventually publish it back)."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:375
msgid "Social settings"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:378
msgid "SOCIAL_BUTTONS"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:381
msgid "A boolean which specifies whether the social media icons and javascript should be rendered in GeoNode."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:384
msgid "SOCIAL_ORIGINS"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:405
msgid "A list of dictionaries that is used to generate the social links displayed in the Share tab.  For each origin, the name and and url format parameters are replaced by the actual values of the ResourceBase object (layer, map, document)."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:408
msgid "CKAN_ORIGINS"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:417
msgid "A list of dictionaries that is used to generate the links to CKAN instances displayed in the Share tab.  For each origin, the name and and abstract format parameters are replaced by the actual values of the ResourceBase object (layer, map, document).  This is not enabled by default.  To enabled, uncomment the following line: SOCIAL_ORIGINS.extend(CKAN_ORIGINS)."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:420
msgid "TWITTER_CARD"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:421
#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:441
msgid "Default:: ``True``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:423
msgid "A boolean that specifies whether Twitter cards are enabled."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:426
msgid "TWITTER_SITE"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:427
msgid "Default:: ``'@GeoNode'``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:429
msgid "A string that specifies the site to for the twitter:site meta tag for Twitter Cards."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:432
msgid "TWITTER_HASHTAGS"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:434
msgid "Default:: ``['geonode']``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:436
msgid "A list that specifies the hastags to use when sharing a resource when clicking on a social link."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:439
msgid "OPENGRAPH_ENABLED"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:443
msgid "A boolean that specifies whether Open Graph is enabled.  Open Graph is used by Facebook and Slack."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:446
msgid "Upload settings"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:449
msgid "GEOGIG_DATASTORE_NAME"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:450
msgid "Default: ``None``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:452
msgid "A string with the default GeoGig datastore name.  This value is only used if no GeoGig datastore name is provided when data is uploaded but it must be populated if your deployment supports GeoGig."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:456
msgid "UPLOADER"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:467
msgid "A dictionary of Uploader settings and and their values."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:471
msgid "Default: ``'geonode.rest'``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:473
msgid "The uploader backend to use.  The backend choices are:"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:475
msgid "``'geonode.importer'``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:476
msgid "``'geonode.rest'``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:478
msgid "The importer backend requires the Geoserver importer extension to be enabled and is required for uploading data into GeoGig datastores."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:482
msgid "OPTIONS"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:491
msgid "TIME_ENABED"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:494
msgid "A boolean that specifies whether the upload should allow the user to enable time support when uploading data."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:497
msgid "GEOGIG_ENABED"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:500
msgid "A boolean that specifies whether the uploader should allow the user to upload data into a GeoGig datastore."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:503
msgid "User Account settings"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:506
msgid "REGISTRATION_OPEN"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:509
msgid "A boolean that specifies whether users can self-register for an account on your site."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:512
msgid "THEME_ACCOUNT_CONTACT_EMAIL"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:513
msgid "Default: ``'admin@example.com'``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:515
msgid "This email address is added to the bottom of the password reset page in case users have trouble un-locking their account."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:518
msgid "Download settings"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:521
msgid "DOWNLOAD_FORMATS_METADATA"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:523
msgid "Specifies which metadata formats are available for users to download."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:532
msgid "DOWNLOAD_FORMATS_VECTOR"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:534
msgid "Specifies which formats for vector data are available for users to download."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:544
msgid "DOWNLOAD_FORMATS_RASTER"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:546
msgid "Specifies which formats for raster data are available for users to download."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:555
msgid "Contrib settings"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:558
msgid "EXIF_ENABED"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:561
msgid "A boolean that specifies whether the Exif contrib app is enabled.  If enabled, metadata is generated from Exif tags when documents are uploaded."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:564
msgid "NLP_ENABED"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:567
msgid "A boolean that specifies whether the NLP (Natural Language Processing) contrib app is enabled.  If enabled, NLP (specifically MITIE) is used to infer additional metadata from uploaded documents to help fill metadata gaps."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:570
msgid "NLP_LOCATION_THRESHOLD"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:571
msgid "Default: ``1.0``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:573
msgid "A float that specifies the threshold for location matches."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:576
msgid "NLP_LIBRARY_PATH"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:577
msgid "Default:: ``'/opt/MITIE/mitielib'``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:579
msgid "A string that specifies the location of the MITIE library"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:582
msgid "NLP_MODEL_PATH"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:583
msgid "Default:: ``'/opt/MITIE/MITIE-models/english/ner_model.dat'``"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:585
msgid "A string that specifies the location of the NER (Named Entity Resolver).  MITIE comes with English and Spanish NER models.  Other models can be trained."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:588
msgid "SLACK_ENABED"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:591
msgid "A boolean that specifies whether the Slack contrib app is enabled.  If enabled, GeoNode will send messages to the slack channels specified in SLACK_WEBHOOK_URLS when a document is uploaded, metadata is updated, etc.  Coverage of events is still incomplete."
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:594
msgid "SLACK_WEBHOOK_URLS"
msgstr ""

#: ..\..\006_adv_workshop\002_geonode_settings\settings.rst:596
msgid "A list that specifies the urls to post Slack messages to.  Each url is for a different channel.  The default url should be replaced when slack integration is enabled."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:4
msgid "Logging all requests on the file system"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:6
msgid "The history mode logs all requests into a database. This can put a very significant strain on the database and can lead to insertion issues as the request table begins to host millions of records."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:10
msgid "As an alternative to the history mode it's possible to enable the auditing logger, which will log the details of each request in a file, which is periodically rolled. Secondary applications can then process these log files and built ad-hoc summaries off line."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:17
msgid "The ``monitor.properties`` file can contain the following items to enable and configure file auditing:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:19
msgid "Go to the ${GEOSERVER_DATA_DIR}/monitoring and open the ``monitor.properties`` then append the following configuration::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:25
msgid "Replace ``${TRAINING_ROOT}`` with the full path to the workshop root folder, and rememeber to always use forward slashes, ``/``, in the path, regardless of the operating system. For example, on Windows the path might look like ``c:/data/Training_2.5.X-32``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:27
msgid "Go to the Map `Map Preview <http://localhost:8083/geoserver/web/?wicket:bookmarkablePage=:org.geoserver.web.demo.MapPreviewPage>`_ and open the `geosolutions:states` layer clicking on the ``OpenLayer`` link."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:29
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:126
msgid "Perform a few times zoom the map."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:31
msgid "Open the new created log file (named like ``geoserver_audit_yyyymmdd_nn.log``) located at ${TRAINING_ROOT}."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:35
msgid "**audit.enable**: is used to turn on the logger (it is off by default)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:36
msgid "**audit.path**: is the directory where the log files will be created."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:37
msgid "**audit.roll_limit**: is the number of requests logged into a file before rolling happens."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:39
msgid "The files are also automatically rolled at the beginning of each day."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:42
msgid "Outputs and contents"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:44
msgid "The log directory will contain a number of log files following the ``geoserver_audit_yyyymmdd_nn.log`` pattern. The ``nn`` is increased at each roll of the file. The contents of the log directory will look like::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:56
msgid "Customizing the log contents"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:58
msgid "The log contents are driven by three FreeMarker templates. We can customize them to have the log file be a csv file for example."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:60
msgid "On the file system navigate to the GeoServer data directory located at $GEOSERVER_DATA_DIR."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:62
msgid "In the ``monitoring`` directory create a new file named ``header.ftl`` (is used once when a new log file is created to form the first few lines of the file)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:64
msgid "Open ``header.ftl`` in the text editor of your choice and enter the following content::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:68
msgid "Create another file named ``content.ftl``."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:70
msgid "Open ``content.ftl`` in the text editor of your choice and enter the following content::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:74
msgid "Create a last file named ``footer.ftl``, and leave its contents empty"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\auditing.rst:76
msgid "Run again a few requests, the log files should contain something like the following now::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:4
msgid "Basic Configuration of the Monitor Extension"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:6
msgid "Many aspects of the monitor extension are configurable. All configuration files are stored in the data directory under the ``monitoring`` directory::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:16
msgid "The function of these files will be discussed below."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:21
msgid "Monitor Mode"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:23
msgid "The monitoring extension supports different \"monitoring modes\" that control how request data is captured and stored. Currently three modes are supported:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:26
msgid "**history** *(Default)* - Only historical request information is available. No live information is maintained."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:27
msgid "**live** - Only information about live requests is maintained."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:28
msgid "**mixed** - A combination of live and history. This mode is experimental."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:30
msgid "The mode is set in the ``monitor.properties`` file."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:32
msgid "For the Virtual Machine GeoServer instance we are \"live\" mode."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:35
msgid "History Mode"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:37
msgid "History mode persists information about all requests in an external database. It does not provide any real time information. This mode is appropriate in cases where a user is most interested in analyzing request history over a given time period."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:43
msgid "Live Mode"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:45
msgid "Live mode only maintains short lived information about requests that are currently executing. It also maintains a small buffer of recent requests. No external database is used with this mode and no information is persisted for the long term."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:50
msgid "This mode is most appropriate in cases where a user only cares about what a server is doing in real time and is not interested about request history."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:54
msgid "Mixed Mode"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:56
msgid "Mixed mode combines both live and history mode in that it maintains both real time information and persists all request data to the monitoring database. This mode however is experimental and comes with more overhead than the other two modes. This is because mixed mode must perform numerous database transactions over the life cycle of a single request (in order to maintain live information), whereas history mode only has to perform a single database transaction for a request."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:64
msgid "This mode is most appropriate when both real time request information and request history are desired. This mode is also most appropriate in a clustered server environment in which a user is interested in viewing real time request information about multiple nodes in a cluster."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:70
msgid "Monitor Database"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:72
msgid "By default monitored request data is stored in an embedded H2 database located in the ``monitoring`` directory. This can be changed by editing the ``db.properties`` file::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:80
msgid "For example to store request data in an external PostgreSQL database::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:87
msgid "The above is just an example. Does not match the training users and environment."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:90
msgid "Request Filters"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:92
msgid "By default not all requests are monitored. Those requests excluded include any web admin requests or any monitor HTTP API requests. These exclusions are configured in the ``filter.properties`` file::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:98
msgid "These default filters can be changed or extended to filter more types of requests. For example to filter out all WFS requests::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:104
msgid "How to determine the filter path"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:106
msgid "The contents of ``filter.properties`` are a series of ant-style patterns that are applied to the *path* of the request. Consider the following request::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:111
msgid "The path of the above request is ``/wms``. In the following request::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:115
msgid "The path is ``/rest/workspaces/topp/datastores.xml``."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:117
msgid "In general, the path used in filters is comprised of the portion of the URL after ``/geoserver`` (including the preceding ``/``) and before the query string ``?``::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:122
msgid "For more information about ant-style pattern matching, see the `Apache Ant manual <http://ant.apache.org/manual/dirtasks.html>`_."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:124
msgid "Go to the Map `Map Preview <http://localhost:8083/geoserver/web/?wicket:bookmarkablePage=:org.geoserver.web.demo.MapPreviewPage>`_ and open the `geosolutions:Counties` layer clicking on the ``OpenLayer`` link."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:128
msgid "Use also the GML preview for said layer"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:130
msgid "Navigate to the `Monitor/Reports section <http://localhost:8083/geoserver/web/?wicket:bookmarkablePage=:org.geoserver.monitor.web.ReportPage>`_"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\configuration.rst:132
msgid "Click on ``OWS Request Summary`` to show a detailed chart like the following:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:4
msgid "Configuring the Control flow plugin"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:6
msgid "The ``control-flow`` module for GeoServer allows the administrator to control the amount of concurrent requests actually executing inside the server. This kind of control is useful for a number of reasons:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:9
msgid "*Performance*: tests show that, with local data sources, the maximum throughput in `GetMap` requests is achieved when allowing at most 2 times the number of CPU cores requests to run in parallel."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:10
msgid "*Resource control*: requests such as `GetMap` can use a significant amount of memory. The :ref:`WMS request limits<geoserver.parameters>` allow to control the amount of memory used per request, but an ``OutOfMemoryError`` is still possible if too many requests run in parallel. By controlling also the amount of requests executing it's possible to limit the total amount of memory used below the memory that was actually given to the Java Virtual Machine."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:11
msgid "*Fairness*: a single user should not be able to overwhelm the server with a lot of requests, leaving other users with tiny slices of the overall processing power."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:13
msgid "The control flow method does not normally reject requests, it just queues up those in excess and executes them late. However, it's possible to configure the module to reject requests that have been waited in queue for too long."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:16
msgid "Rule syntax reference"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:18
msgid "The current implementation of the control flow module reads its rules from a ``controlflow.properties`` property file located in the :ref:`GeoServer data directory <geoserver.gs_data_dir>`."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:21
msgid "Total OWS request count"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:23
msgid "The global number of OWS requests executing in parallel can be specified with::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:27
msgid "Every request in excess will be queued and executed when other requests complete leaving some free execution slot."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:30
msgid "Per request control"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:32
msgid "A per request type control can be demanded using the following syntax::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:36
msgid "Where:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:38
msgid "``<service>`` is the OWS service in question (at the time of writing can be ``wms``, ``wfs``, ``wcs``)"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:39
msgid "``<request>``, optional, is the request type. For example, for the ``wms`` service it can be ``GetMap``, ``GetFeatureInfo``, ``DescribeLayer``, ``GetLegendGraphics``, ``GetCapabilities``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:40
msgid "``<outputFormat>``, optional, is the output format of the request. For example, for the ``wms`` ``GetMap`` request it could be ``image/png``, ``image/gif`` and so on"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:42
msgid "A few examples::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:52
msgid "Per user control"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:54
msgid "This avoid a single user to make too many requests in parallel::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:58
msgid "Where ``<count>`` is the maximum number of parallel requests a single user can execute in parallel. The user tracking mechanism is cookie based, so it will work fine for browsers but not as much for other kinds of clients. An IP based mechanism is not provided at the time, but it would have its own fallacies as well, as it would limit all the users sitting behind a single router to ``<count>`` requests (imagine the effect on a big public administration)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:61
msgid "Timeout"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:63
msgid "A request timeout is specified with the following syntax::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:67
msgid "where ``<seconds>`` is the number of seconds a request can stay queued waiting for execution. If the request does not enter execution before the timeout expires it will be rejected."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:70
msgid "A complete example"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\controlflow.rst:72
msgid "Assuming the server we want to protect has 4 cores a sample configuration could be::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:7
msgid "Advanced Coordinate Reference System Handling"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:9
msgid "This section describes how coordinate reference systems (CRS) are handled in GeoServer, as well as what can be done to extend GeoServer's CRS handling abilities."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:12
msgid "Coordinate Reference System Configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:14
msgid "When adding data, GeoServer tries to inspect data headers looking for an EPSG code: if the data has a CRS with an explicit EPSG code and the full CRS definition behind the code matches the one in GeoServer, the CRS will be already set for the data. If the data has a CRS but no EPSG code, you'll have to manually guess the EPSG code. Browsing to `<www.spatialreference.org>`_ might be a good option to find the exact EPSG code for your data."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:17
msgid "If an EPSG code cannot be found, then either the data has no CRS or it is unknown to GeoServer.  In this case, there are a few options:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:19
msgid "Force the declared CRS, ignoring the native one.  This is the best solution if the native CRS is known to be wrong."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:20
msgid "Reproject from the native to the declared CRS.  This is the best solution if the native CRS is correct, but cannot be matched to an EPSG number. An alternative is to add a custom EPSG code that matches exactly the native SRS."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:22
msgid "If your data has no native CRS information, the only option is to specify/force an EPSG code."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:25
msgid "Custom CRS Definitions"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:28
msgid "Add a custom CRS"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:30
msgid "This example shows how to add a custom projection in GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:32
msgid "The projection parameters need to be provided as a WKT (well known text) definition.  The code sample below is just an example::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:55
msgid "This code sample has been formatted for readability.  The information will need to be provided on a single line instead, or with backslash characters at the end of every line (except the last one)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:57
msgid "Go into the :file:`user_projections` directory inside your data directory, and open the :file:`epsg.properties` file.  If this file doesn't exist, you can create it."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:59
msgid "Insert the code WKT for the projection at the end of the file (on a single line or with backslash characters)::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:82
msgid "Note the number that precedes the WKT.  This will determine the EPSG code.  So in this example, the EPSG code is 100002."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:84
msgid "Save the file."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:86
msgid "Restart GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:88
msgid "Verify that the CRS has been properly parsed by navigating to the `srs_list` page in the `web_admin`."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:90
msgid "If the projection wasn't listed, examine the logs for any errors."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:93
msgid "Override an official EPSG code"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:95
msgid "In some situations it is necessary to override an official EPSG code with a custom definition.  A common case is the need to change the TOWGS84 parameters in order to get better reprojection accuracy in specific areas."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:97
msgid "The GeoServer referencing subsystem checks the existence of another property file, :file:`epsg_overrides.properties`, whose format is the same as :file:`epsg.properties`. Any definition contained in :file:`epsg_overrides.properties` will **override** the EPSG code, while definitions stored in :file:`epsg.properties` can only **add** to the database."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:99
msgid "Special care must be taken when overriding the Datum parameters, in particular the **TOWGS84** parameters. To make sure the override parameters are actually used the code of the Datum must be removed, otherwise the referencing subsystem will keep on reading the official database in search of the best Datum shift method (grid, 7 or 5 parameters transformation, plain affine transform)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:101
msgid "For example, if you need to override the official **TOWGS84** parameters of EPSG:3003 to better match the peninsular area of Italy::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:125
msgid "You should write the following (in a single line, here it's reported formatted over multiple lines for readability)::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\crs_handling.rst:149
msgid "The definition has been changed in two places, the **TOWGS84** paramerers, and the Datum code, ``AUTHORITY[\"EPSG\",\"4265\"]``, has been removed."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:7
msgid "Advanced Database Connection Pooling Configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:14
msgid "Database connections are valuable resources and as such shall be managed with care:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:9
msgid "they are heavy to create and maintain for the database server itself since they are usually child processes of the DBMS server process"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:10
msgid "being processes that means that creating a connection is not a zero-cost process therefore we should avoid creating connections as we need to connect to a DB but we should tend to create them in advance in order to minimize the impact of the time needed to create them on the time needed to serve a request."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:11
msgid "as a consequence of the fact that a connection require non negligible resources on the server DBMS DBAs tend to"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:13
msgid "limit the number of connections globally available (e.g. PostgreSQL by default has a limit set to 100)"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:14
msgid "limit the lifetime of connections created in order to discourage clients from retaining connections for a really long time"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:16
msgid "The purpose served by a connection pool is to maintain connections to an underlying database between requests. The benefit is that connection set-up only need to occur once on the first request while subsequent requests use existing connections and achieve a performance benefit as a result."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:18
msgid "Ok, now let’s go into GeoServer specifics. In most GeoServer DataStores you have the possibility to use the JNDI [#f1]_  or the standard store which basically means you can have GeoServer manage the connection pool for you or you can configure it externally (from within the Application Server of choice) and then have GeoServer lean onto it to get connections. Baseline is, one way or the other you’ll always end-up using a connection pool in GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:22
msgid "GeoServer Internal Connection Pool Parameters"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:23
msgid "Whenever a data store backed by a database is added to GeoServer an internal connection pool, for which relies on Apache Commons DBCP [#f2]_, is created by default. This connection pool is configurable, however let me say this upfront, the number of pool configuration parameters that we expose is a subset of the possible ones, although the most interesting are there. Namely there are a few that you might want to customize. Here below you can find some more details on the available connection parameters."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:29
msgid "**max connections**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:30
msgid "The maximum number of connections the pool can hold. When the maximum number of connections is exceeded, additional requests that require a database connection will be halted until a connection from the pool becomes available and eventually times out if that’s not possible within the time specified in the connection time-out. *The maximum number of connections limits the number of concurrent requests that can be made against the database*."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:31
msgid "**min connections**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:34
msgid "The minimum number of connections the pool will hold. This number of connections is held even when there are no active requests. When this number of connections is exceeded due to serving incoming requests additional connections are opened until the pool reaches its maximum size (described above). The implications of this number are multiple:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:33
msgid "-1- If it is very far from the max connections this might limit the ability of the GeoServer to respond quickly to unexpected or random heavy load situations due to the fact that it takes a non negligible time to create a new connections. However this set up is very good when the DBMS is quite loaded since it tends to use as less connections as possible at all times."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:35
msgid "-2- If it is very close to the max connections value the GeoServer will be very fast to respond to random load situation. However in this case the GeoServer would put a big burden on DBMS shoulders as the the poll will try to hold all needed connections at all times."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:36
msgid "**validate connections**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:37
msgid "Flag indicating whether connections from the pool should be validated before they are used. A connection in the pool can become invalid for a number of reasons including network breakdown, database server timeout, etc.. The benefit of setting this flag is that an invalid connection will never be used which can prevent client errors. The downside of setting the flag is that a small performance penalty is paid in order to validate connections when the connection is borrowed from the pool since the validation is done by sending smal query to the server. However the cost of this query is usually small, as an instance on PostGis the validation query is *Select 1*."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:38
msgid "**fetch size**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:39
msgid "The number of records read from the database in each network exchange. If set too low (<50) network latency will affect negatively performance, if set too high it might consume a significant portion of GeoServer memory and push it towards an *Out Of Memory Error*. Defaults to 1000, it might be beneficial to push it to a higher number if the typical database query reads much more data than this, and there is enough heap memory to hold the results"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:40
msgid "**connection timeout**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:41
msgid "Time, in **seconds**, the connection pool will wait before giving up its attempt to get a new connection from the database. Defaults to 20 seconds. This timeout kicks in during heavy load conditions when the number of requests needing a connection to a certain DB outnumber greatly the number of available connections in the pool, therefore some requests might get error messages due to the timeouts while acquiring a connection. This condition is not per se problematic since usually a request does not use a DB connection for its entire lifecycle hence we do not need 100 connections at hand to respond to 100 requests; however we should strive to limit this condition since it would queue threads on the connection pool after they might have allocated memory (e.g. for rendering). We will get back to this later on."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:42
msgid "**max open prepared statements**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:43
msgid "Maximum number of prepared statements kept open and cached for each connection in the pool."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:44
msgid "**max wait**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:45
msgid "number of **seconds** the connection pool will wait before timing out attempting to get a new connection (default, 20 seconds)"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:46
msgid "**validate connection**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:47
msgid "It forces GeoServer to check that the connections borrowed from the pool are valid (i.e. not closed on the DMBS side) before using them."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:48
msgid "**Test while idle**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:49
msgid "Periodically test if the connections are still valid also while idle in the pool. Sometimes performing a test query using an idle connection can make the datastore unavailable for a while. Often the cause of this troublesome behaviour is related to a network firewall placed between Geoserver and the Database that force the closing of the underlying idle TCP connections."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:50
msgid "**Evictor run periodicity**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:51
msgid "Number of **seconds** between idle object evictor runs."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:52
msgid "**Max connection idle time**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:53
msgid "Number of **seconds** a connection needs to stay idle before the evictor starts to consider closing it."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:54
msgid "**Evictor tests per run**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:55
msgid "Number of connections checked by the idle connection evictor for each of its runs."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:58
msgid "Prepared statements consideration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:59
msgid "Prepared statements are used by databases to avoid re-planning the data access every time, the plan is done only once up-front, and as long as the statement is cached, the plan does not need to be re-computed."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:61
msgid "In business applications fetching a small amount of data at a time this is beneficial for performance, however, in spatial ones, where we typically fetch thousands of rows, the benefit is limited, and sometimes, turns into a performance problem. This is the case with PostGIS, that is able to tune the access plan by inspecting the requested BBOX, and deciding if a sequential scan is preferable (the BBOX really accesses most of the data) or using the spatial index is best instead. So, as a rule of thumb, when working with PostGis, it’s better not to enable prepared statements."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:64
msgid "With other databases there are no choices, Oracle currently works only with prepared statements, SQL server only without them (this is often related to implementation limitations than database specific issues)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:66
msgid "There is an upside of using prepared statement though: no sql injection attacks are possible when using them. GeoServer code tries hard to avoid this kind of attack when working without prepared statements, but enabling them makes the attack via filter parameters basically impossible."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:70
msgid "Final Thoughts"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:71
msgid "Summarising, when creating standard DataStores for serving vector data from DBMS in GeoServer you need to remember that internally a connection pool will be created. This approach is the simplest to implement but might lead to an inefficient distribution of the connections between different stores in the following cases:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:74
msgid "if we tend to separate tables into different schemas this will lead to the need for creating multiple stores to serve them out since GeoServer works best if the “schema” parameter is specified, this leading to the creation of (mostly unnecessary) connection pools"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:75
msgid "if we want to create stores in different workspaces connecting to the same database this again will lead to unnecessary duplication of connection pools in different store leading to inefficient usage of connections"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:77
msgid "Long story short the fact that the pool is internal with respect to the stores may lead to inefficient usage of connections to the underlying DBMS since they will be splitted between multiple stores limiting the scalability of each of them: in fact having 100 connections shared between N normal DataStore will impose limits to the maximum number that each can use, otherwise if we managed to keep the connections into a single pool shared, in turn, with the various DataStore we would achieve a much more efficient sharing between the store as, as an instance, a single store under high load could scale to use all the connections available."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:82
msgid "Configuration of a JNDI connection pool with Tomcat"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:83
msgid "Many DataStore in GeoServer provide the option of exploiting Java Naming and Directory Interface or `JNDI <http://en.wikipedia.org/wiki/Java_Naming_and_Directory_Interface>`_. for managing the connections pools. JNDI allows for components in a Java system to look up other objects and data by a predefined name. A common use of JNDI is to set-up a connection pool in order to improve the database resource management."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:85
msgid "In order to set-up a connection pool, Tomcat needs to be provided with a JDBC driver for the database used and the necessary pool configurations. Usually the JDBC driver can be found in the website of the DBMS provider or can be available in the database installation directory. This is important to know since we are not usually allowed to redistribute them."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:88
msgid "The JDBC driver for creating connection pool to be shared via JNDI shall be placed in the ``$TOMCAT_HOME/lib`` directory, where ``$TOMCAT_HOME`` is the directory on which Tomcat is installed."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:90
msgid "Make sure to remove the JDBC driver from the Geoserver ``WEB-INF/lib`` folder when copied to the Tomcat shared libs, to avoid issues in JNDI DataStores usage."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:92
msgid "The configuration is very similar between different databases. Here below some typical examples will be described."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:95
msgid "PostgreSQL JNDI Configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:97
msgid "For configuring a PostgreSQL JNDI pool you have to remove the Postgres JDBC driver (it should be named :file:`postgresql-X.X-XXX.jdbc3.jar`) from the GeoServer :file:`WEB-INF/lib` folder and put it into the :file:`TOMCAT_HOME/lib` folder."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:100
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:175
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:226
msgid "Tomcat Set-up"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:102
msgid "The first step to perform for creating a JNDI DataSource (connection pool) is to edit the **context.xml** file inside ``$TOMCAT_HOME/conf`` directory. This file contains the different JNDI resources configured for Tomcat. In this case, we are going to configure a JNDI DataSource for a PostgreSQL database. If the file is not present you should create it and add a content similar to the following::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:120
msgid "If the file is already present, do not add the `<Context></Context>` labels."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:122
msgid "In the previous XML snippet we configured a connection to a PostrgreSQL database called **testdb** which have the hostname as *localhost* and port number equal to *5432*."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:124
msgid "Note that the user shall set proper *username* and *password* for the database."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:126
msgid "Some of the parameters that can be configured for the JNDI connection pool are as follows:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:128
msgid "**maxActive** : The number of maximum active connections to use."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:129
msgid "**maxIdle** : The number of maximum unused connections."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:130
msgid "**maxWait** : The maximum number of **milliseconds** that the pool will wait."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:131
msgid "**poolPreparedStatements** : Enable the prepared statement pooling (very important for good performance)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:132
msgid "**maxOpenPreparedStatements** : The maximum number of prepared statements in pool."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:133
msgid "**validationQuery** : (default null) A validation query that double checks the connection is still alive before actually using it."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:134
msgid "**timeBetweenEvictionRunsMillis** : (default -1) The number of **milliseconds** to sleep between runs of the idle object evictor thread. When non-positive, no idle object evictor thread will be run."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:135
msgid "**numTestsPerEvictionRun** : (default 3) The number of objects to examine during each run of the idle object evictor thread (if any)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:136
msgid "**minEvictableIdleTimeMillis** : : (default 1000 * 60 * 30) The minimum amount of time, in **milliseconds**, an object may sit idle in the pool before it is eligable for eviction by the idle object evictor (if any)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:137
msgid "**removeAbandoned** : (default false) Flag to remove abandoned connections if they exceed the removeAbandonedTimout. If set to true a connection is considered abandoned and eligible for removal if it has been idle longer than the removeAbandonedTimeout. Setting this to true can recover db connections from poorly written applications which fail to close a connection."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:138
msgid "**removeAbandonedTimeout** : (default 300) Timeout in **seconds** before an abandoned connection can be removed."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:139
msgid "**logAbandoned** : (default false) Flag to log stack traces for application code which abandoned a Statement or Connection."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:140
msgid "**testWhileIdle** : (default false) Flag used to test connections when idle."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:142
msgid "The previous settings should be modified only by experienced users. Using wrong low values for **removedAbandonedTimeout** and **minEvictableIdleTimeMillis** may result in connection failures; if so try it is important to set-up **logAbandoned** to true and check your catalina.out log file."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:144
msgid "More informations about the parameters can be found at the `DBCP documentation <http://commons.apache.org/proper/commons-dbcp/configuration.html>`_."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:147
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:200
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:249
msgid "GeoServer Set-up"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:149
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:201
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:251
msgid "Launch GeoServer and navigate to the :menuselection:`Stores --> Add new Store` section."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:151
msgid "First, choose the *PostGIS (JNDI)* datastore and give it a name:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:156
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:163
msgid "PostGIS JNDI Store Configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:158
msgid "And then you can configure the connection pool:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:165
msgid "When you are doing this, make sure the schema is properly configured, or the DataStore will list all the tables it can find in the schema it is given access to."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:168
msgid "Microsoft SQLServer JNDI Configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:170
msgid "Before configuring a SQLServer connection pool you must follow these `Guidelines <http://docs.geoserver.org/stable/en/user/data/database/sqlserver.html>`_."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:172
msgid "You must remove the :file:`sqljdbc.jar` file from the ``WEB-INF/lib`` folder and put it inside the ``$TOMCAT_HOME/lib`` folder."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:177
msgid "In this case, we are going to configure a JNDI DataSource for a SQLServer database. You shall create/edit the **context.xml** file inside ``$TOMCAT_HOME/conf`` directory with the following lines::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:197
msgid "Note that **database name**, **username** and **password** must be defined directly in the URL."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:203
msgid "Then choose the *Microsoft SQL Server (JNDI)* datastore and give it a name:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:208
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:215
msgid "Microsoft SQLServer JNDI Store Configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:210
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:260
msgid "After, you can configure the connection pool:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:218
msgid "Oracle JNDI Configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:220
msgid "Before configuring an Oracle connection pool you should download the Oracle plugin from the `GeoServer Download Page <http://geoserver.org/download/>`_ and then put the the :file:`ojdbc14.jar` file into the ``$TOMCAT_HOME/lib`` folder."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:223
msgid "You must remove the :file:`ojdbc14.jar` file from the ``WEB-INF/lib`` folder and put it inside the ``$TOMCAT_HOME/lib`` folder."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:228
msgid "First you must create/edit the **context.xml** file inside ``$TOMCAT_HOME/conf`` directory with the following lines::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:253
msgid "Then choose the *Oracle NG (JNDI)* datastore and give it a name:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:258
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:265
msgid "Oracle JNDI Store Configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:267
msgid "In Oracle the schema is usually the user name, upper cased."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:270
msgid "Configuring Connection Pools for production usage"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:273
msgid "Connection waiting time and relation with other params"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:274
msgid "In general it is important to set the connection waiting time in a way that the connection pool does not become a place where to queue threads executing requests under big load. It is indeed possible that under big load threads executing requests for a vector layer will outnumber the available connections in the pool hence such threads will be blocked trying to acquire a new connection; if the number of connections is much smaller than the number of incoming requests and the max wait time is quite big (e.g. 60 seconds) we will find ourselves in the condition to have many threads waiting for a long time to acquire a connection after most of the resources they need will be allocated, especially the memory back buffer if these are WMS requests."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:276
msgid "The *max wait time* in general shall be set accordingly to the expected maximum execution time for a requests, end-to-end. This include things like, accessing the file system, loading the data. As an instance if we take into account WMS requests we are allowed to specify a maximum response time, therefore if set this to N seconds the max wait  time should be set to a value smaller than that since we don’t want to waste resources having threads blocked unnecessarily waiting for a connection. In this case it shall be preferable to fail fast to release resources that might be used unnecessarily otherwise."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:279
msgid "Maximizing sharing of Connection Pools"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:283
msgid "How the data is organized between database, schemas and table impact the degree of flexibility we have when trying to best share connections, regardless of the fact that we were using JNDI pools or not. Summarising:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:281
msgid "Splitting tables in many schemas makes it hard for GeoServer to access table belonging to different schemas unless we switch to JNDI since the schema must be specified as part of the connection params when using internal pools"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:282
msgid "Using different users for different schemas prevent JNDI from working efficiently across schemas. It’s best to use when possible a single dedicated account across schemas"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:283
msgid "Generally speaking having a complex combination of users and schema can lead to inefficient split of available connections in multiple pools"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:285
msgid "Long story short, whenever it’s possible strive to make use of a small number of users and if not using JNDI to a small number of schema, although JNDI is a must for organization willing to create a complex set up where different workspaces (i.e Virtual Services) serve the same content differently."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:288
msgid "Query Validation"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:289
msgid "Regardless of how we configure the validation query it is extremely important that we always remember to validate connections before using them in GeoServer; not doing this might lead to spurious errors due to stale connections sitting the pool. This can be achieved with the internal connection pool (via the validate connections box) as well as with the pools declared in JNDI (via the validation query mechanism); it is worth to remind that the latter will account for finer grain configurability."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:293
msgid "Footnotes"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:294
msgid "http://en.wikipedia.org/wiki/Java_Naming_and_Directory_Interface"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\db_pooling.rst:295
msgid "http://commons.apache.org/proper/commons-dbcp/"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:7
msgid "Advanced Production GeoServer configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:10
msgid "Most of the GeoServer downloads are geared towards quickly showing off the capabilities, with an array of demos, sample layers, and an embedded servlet container. If you are using GeoServer in a production environment, there are a few things we'd like to recommend. In this section the task is to configure your system to use it in production."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:12
msgid "Before you start, ensure that the `Web Administrator Interface - Server` section has been completed."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:15
msgid "Configuring your container for production"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:17
msgid "Most open source Java web containers, such as Tomcat, ship with development mode configurations that allow for quick startup but don't deliver the best performance."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:19
msgid "Make sure that in the 'setenv.sh', or 'setenv.bat' on Windows machines, file exists the following configuration to set up the Java virtual machine options in your container. Open the 'setenv.sh/.bat' file located in '<TRAINING_ROOT>' directory and look at the options:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:26
msgid "*Setting the JAVA_OPTS for Tomcat container*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:29
msgid "**-server**: Not present among the training options, this option enables the server JVM, which JIT compiles bytecode much earlier, and with stronger optimizations. Startup and first calls will be slower due to JIT compilation taking more time, but subsequent ones will be faster (to give you some numbers, on the same machine a vanilla VM returns GML at 7MB/s speed, a -server one runs at 10MB/s). This option is required only if the JMV does not already get into server mode, which happens on a server opearting system (Linux, Windows server) with at least 2 cores and 2 GB of memory."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:31
msgid "This parameter is necessary only for Windows environments of class workstation"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:33
msgid "**-Xms512m -Xmx512M**: give your server memory. By default JVM will use only 64MB of heap. If you're serving just vector data, you'll be full streaming, so having much memory won't help a lot, but if you're serving coverages JAI will use a cache to avoid hitting the disk often. In this case, give Geoserver at least 256MB or memory, or more if you have plenty of RAM, and go configure the JAI title cache size in the Geoserver configuration panel so that it uses 75% of the heap (0.75). If you have plenty of memory it is suggested to set -Xms to the same value as -Xmx, this will make heap management more stable during heavy load serving. Generally speaking, don't allocate more than 2GB for the GeoServer heap."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:35
msgid "**-XX:MaxPermSize=128m** (or more): the permanent generation is the heap portion where the class bytecode is stored. GeoServer uses lots of classes, and it may exhaust that space quickly leading to out of memory errors. If you'redeploying GeoServer along with other applications in the same container or if you need to deploy multiple GeoServer instances inside the same container (e.g., different instances for different customers or similar needs) you better raise up the MaxPermSize to 128m or more."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:39
msgid "In order to obtain best performance, install the native **JAI** version in your JDK. In particular, installing the native JAI is important for all raster processing, which is used heavily in both WMS and WCS to rescale, cut and reproject rasters. Installing the native JAI is also important for all raster reading and writing, which affects both WMS and WCS. Finally, native JAI is very useful even if there is no raster data involved, as WMS output encoding requires writing PNG/GIF/JPEG images, which are themselves rasters. For more information how to installa JAI and ImageIO see the :ref:`Installing the native JAI and ImageIO <geoserver.jai_io_install>` section"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:43
msgid "Setting up logging for production"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:45
msgid "Logging may visibly affect the  performance of your server. High logging levels are often necessary to track down issues, but by default you should run with low ones (and you can switch the logging levels at runtime, so don't worry about having to stop the server to gather more information). You can change the logging level by going to the GeoServer configuration panel, Server section."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:48
msgid "Go to `http://localhost:8083/geoserver <http://localhost:8083/geoserver>`_ and click on the 'Global' link in the 'Settings' section."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:51
msgid "Select 'PRODUCTION_LOGGING.properties' in *Logging Profile* and click submit."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:58
msgid "*Set up logging for production*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:62
msgid "Choosing a service strategy"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:64
msgid "A service strategy is the way we serve the output to the client. Basically, you have to choose between being absolutely sure of reporting errors with the proper OGC codes and serving output quickly."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:67
msgid "You can configure the service strategy modifying the web.xml file located in '<TOMCAT_HOME>/instances/instance1/webapps/geoserver/WEB-INF' directory of your GeoServer install:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:70
msgid "Set the 'serviceStrategy' param-name with 'SPEED'."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:72
msgid "All the possible strategies are:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:74
msgid "SPEED: serve outputs right away. The fastest strategy, make it unlikely to be able to report proper OGC errors in WFS though (they are reported only if the error occurs before the GML encodingstarts)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:76
msgid "BUFFER: stores the whole result in memory, and then serves it after the output is complete. This ensures proper OGC error reporting, but delays the response quite a bit and will exhaust memory if the response is big."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:78
msgid "FILE: same as buffer, but uses a file storage for buffering. Slower than BUFFER, ensures there won't be memory issues."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:80
msgid "PARTIAL-BUFFER2: a balance between the two, tries to buffer in memory a few kilobytes of response, then behaves like SPEED."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:85
msgid "Configuring all data and metadata to your instance"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:87
msgid "It may be tempting to just skip some of the configuration steps, leave in the same keywords and abstract as the sample. Please do not, as this will only confuse potential users. They will have a list of GeoServers called 'My GeoServer'."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:90
msgid "Completely fill out the WFS and WMS Contents sections."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:92
msgid "Put in your own URI (such as the name of your website) for the Namespace (Data -> Workspace) and remove the defaults."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:94
msgid "Make sure your datastores all use your URI."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:96
msgid "Remove the sample layers (states, spearfish, New York roads and the like, the easiest way to is go and remove the demo workspaces, everything contained in them will be removed as a result)"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:100
msgid "Change the administrator password"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:102
msgid "GeoServer ships by default with \"admin\" and \"geoserver\" as the default administrator user name and password. Before putting the GeoServer on-line it is imperative to change at least the administrator password."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:105
msgid "Making use of an external Data Directory to store your configurations"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:107
msgid "The configuration data resides within the GEOSERVER_DATA_DIR. To increase the portability of their data and to facilitate updates GeoServer, you should place this directory outside of GeoServer editing the web.xml file with the path that you prefer"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:109
msgid "See the 'GEOSERVER_DATA_DIR' context param in '<TRAINING_ROOT>/tomcat-6.0.36/instances/instance1/webapps/geoserver/WEB-INF':"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:119
msgid "The external data dir can be also configured throught the environment variables on the 'setenv.sh/.bat' file."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:122
msgid "Using a Spatial Database"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:124
msgid "We make shapefiles available as a datastore, as they are such a common format. But if you are running GeoServer in a production environment and if you need to manage the spatial indexes, transactions or if you have specific requirements involving the use of a database, setting up a spatial database and converting your shapefiles is highly recommended. If you're doing transactions against GeoServer this is essential. Even though we have a very nice transaction framework, doubling up with the native transaction support of relational databases ensures your data integrity. Most all the major spatial dbs provide support to easily turn shapefiles into their native format. We recommend PostGIS, open source extensions to the postgresql db, most of our testing has been performed against it. Oracle, DB2, SQL Server and ArcSDE are also well supported. At the moment we don't recommend MySQL, as it has trouble with rollbacks on geometry tables, and lacks advanced spatial functionality, but it is an option."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:128
msgid "Setting security"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:130
msgid "GeoServer by default includes WFS-T, which lets users modify your backend database. If you don't want that to happen, you can turn off transactions in the web admin tool, Service Panel -> WFS and set Service Level to Basic. If you'd like some users to be able to modify it, but not all, you'll have to set up data access level security. For extra security when operating in read only mode, make sure that the connection to the datastore that is open to all is with a user who has read only permissions. That will make it so it's completely impossible to do a SQL injection (though GeoServer is generally designed well enough that it's not vulnerable)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:134
msgid "Dealing with a locked down environment"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:136
msgid "GeoServer code, and the libraries it uses (Geotools, JAI) are not designed to be run in a security locked down enviroment. They need free access to environment variables, temp directory, user preferences and the like. In operating systems like Ubuntu the default Tomcat is locked down so that most of the above is not authorized. So far, the only way to run Geoserver in that environment is to grant all permissions to it."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:140
msgid "Caching"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\gsproduction.rst:142
msgid "Server-side caching of WMS tiles is the best way to get performance. Essentially how the caching works is the server will recognize a request and quickly return a pre-rendered result. This is how you can optimize for tile-based WMS clients and it works the best for them. There are several ways to set up caching for GeoServer like GeoWebCache."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\index.rst:7
msgid "Advanced GeoServer Configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\index.rst:9
msgid "In this module we are going to cover some advanced configurations and :"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\installation.rst:4
msgid "Installing the Monitoring Extension"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\installation.rst:6
msgid "Monitoring is an official extension, as such it can be found alongside any GeoServer release. The extension is split into two modules, \"core\" and \"hibernate\", where core provides the basic underpinnings of the module and allows to monitor \"live\" requests, while the hibernate extension provides database storage of the requests."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\installation.rst:8
msgid "Get the monitoring zip files, already downloaded for you, from the training material ``data\\plugins`` folder (search for zip files containing the ``monitoring`` word, there will be two)"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\installation.rst:10
msgid "Extract the contents of the archives into the ``<TRAINING_ROOT>/tomcat-6.0.36/instances/instance1/webapps/geoserver/WEB-INF/lib`` directory of the GeoServer installation."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\installation.rst:13
msgid "Verifying the Installation"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\installation.rst:15
msgid "There are two ways to verify that the monitoring extension has been properly installed."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\installation.rst:17
msgid "Start GeoServer and open the `Web Administration interface <http://localhost:8083/geoserver>`_.  Log in using the administration account.  If successfully installed, there will be a :guilabel:`Monitor` section on the left column of the home page."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\installation.rst:22
msgid "*Monitoring section in the web admin interface*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\installation.rst:24
msgid "Start GeoServer and navigate to the current data directory.  If successfully installed, a new directory named ``monitoring`` will be created in the data directory."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\index.rst:7
msgid "How to measure performances with JMeter"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\index.rst:9
msgid "In this submodule we are going to describe how to use the JMeter tool :"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:5
msgid "Configuring JMeter for testing Control Flow plugin"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:7
msgid "This section explains how GeoServer performances are improved when using Control-Flow plugin."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:9
msgid "This plugin avoid GeoServer to execute too many requests together, which could lead to bad performances, by reducing the number of concurrent operations to execute and appending the others to a queue. This behaviour improves GeoServer scalability."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:11
msgid "This example requires to have already completed :ref:`Adding a ShapeFile <geoserver.add_shp>` and :ref:`Adding a Style <geoserver.add_style>` sections."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:14
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:19
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:99
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:37
msgid "Configure JMeter"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:16
msgid "Go to ``$TRAINING_ROOT/data/jmeter_data`` and copy the file ``template.jmx`` file into ``controlflow.jmx``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:18
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:49
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:23
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:20
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:67
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:71
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:41
msgid "From the training root, on the command line, run ``jmeter.bat`` (or ``jmeter.sh`` if you're on Linux) to start JMeter"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:20
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:51
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:25
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:22
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:69
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:73
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:43
msgid "On the top left go to :guilabel:`File --> Open` and search for the new *jmx* file copied"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:22
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:27
msgid "Disable **View Results Tree** section"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:24
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:29
msgid "In the ``CSV Data Set Config`` element, modify the **path** of the CSV file by setting the path for the file ``controlflow.csv`` in the ``$TRAINING_ROOT/data/jmeter_data`` directory"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:26
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:59
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:31
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:28
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:75
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:77
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:49
msgid "In the **HTTP Request Default** element modify the following parameters:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:32
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:65
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:37
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:34
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:64
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:81
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:83
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:116
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:22
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:55
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:89
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:48
msgid "**Value**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:33
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:66
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:38
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:35
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:65
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:82
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:84
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:117
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:56
msgid "layers"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:34
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:46
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:115
msgid "geosolutions:Mainrd"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:35
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:68
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:40
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:37
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:84
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:86
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:58
msgid "srs"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:36
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:69
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:41
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:85
msgid "EPSG:2876"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:40
msgid "Test without Control Flow"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:42
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:74
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:106
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:49
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:42
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:65
msgid "Run the test"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:44
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:76
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:51
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:44
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:97
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:101
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:67
msgid "Remember to run and stop the test a few times for having stable results"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:46
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:78
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:53
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:99
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:103
msgid "When the test is completed, Save the results in a text file."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:48
msgid "You should notice that the throughput initially increases and then starts to decrease. This is associated to a bad scalability of the input requests. Remember which number of threads provides better throughput (it should be *8*). This value indicates the maximum number of concurrent requests that the server can execute simultaneously."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:53
msgid "*Decreased throughput (Note the results may be different in other machines)*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:55
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:80
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:110
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:60
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:101
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:105
msgid "Remove the result from JMeter by clicking on :guilabel:`Run --> Clear All` on the menu"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:57
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:82
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:62
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:67
msgid "Stop GeoServer"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:60
msgid "Configure Control Flow"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:61
msgid "Go to ``$TRAINING_ROOT/data/plugins/not_installed`` and copy ``geoserver-2.6-SNAPSHOT-control-flow-plugin.zip`` zip file inside ``$TRAINING_ROOT/tomcat-6.0.36/instances/instance1/webapps/geoserver/WEB-INF/lib``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:63
msgid "Unzip the content of ``geoserver-2.6-SNAPSHOT-control-flow-plugin.zip`` inside the same folder"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:65
msgid "Go to ``$TRAINING_ROOT/geoserver_data`` and create a new file called ``controlflow.properties`` and add the following snippet"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:72
msgid "This code snippet indicates that no more than 8 *GetMap* request can be executed simultaneously by the WMS service. Other informations about the configuration can be found in the next section"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:74
msgid "If during your test you have found another number for the maximum throughput, you should set that value instead of 8"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:77
msgid "Test with Control Flow"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:79
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:100
msgid "Restart GeoServer"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:81
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:104
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:134
msgid "Run again the test."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:83
msgid "You may see that the throughput is no more reduced after the control-flow configuration, because the input requests are scheduled by the control-flow plugin, improving GeoServer scalability."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_controlflow.rst:88
msgid "*Stable throughput (Note the results may be different in other machines)*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:7
msgid "Configuring JMeter for testing GeoWebCache fullWMS support"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:9
msgid "The following section compare GeoServer WMS with GeoWebCache ``fullWMS`` support. ``FullWMS`` is a new feature which allows GeoWebCache to act as a WMS endpoint, like GeoServer. Using GeoWebCache, the server is able to cache the requested tiles in order to return them faster then GeoServer."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:12
msgid "This example will show how to configure GeoWebCache with fullWMS support and how the performances are improved."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:16
msgid "Configuring GeoServer/GeoWebCache"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:18
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:20
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:50
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:81
msgid "On your Web browser, navigate to the GeoServer `Welcome Page <http://localhost:8083/geoserver/>`_."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:20
msgid "Go to :guilabel:`Gridsets` and click on ``Create a new gridest``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:22
msgid "Call it ``EPSG_2876`` and set ``EPSG:2876`` as :guilabel:`Coordinate Reference System`"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:24
msgid "Click on :guilabel:`Compute from maximum extent of CRS` and add 15 new **Zoom Levels** (from 0 to 14)by clicking on :guilabel:`Add zoom level`. It should look like this picture:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:29
msgid "*Create a new Gridset*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:31
msgid "Click on :guilabel:`Save`. Now this `GridSet` can be added to the Layer Group ``boulder`` for caching it with GeoWebCache"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:33
msgid "Go to :guilabel:`Layer Groups` and click on ``boulder``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:35
msgid "On the :guilabel:`Available gridsets` panel add the gridset ``EPSG_2876`` from the list. Then click on :guilabel:`Save`."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:40
msgid "*Add the new Gridset*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:42
msgid "Remember to set :guilabel:`Published zoom levels` to ``Min`` and ``Max``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:45
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:63
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:67
msgid "Configuring JMeter"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:47
msgid "Go to ``$TRAINING_ROOT/data/jmeter_data`` and copy the file ``template.jmx`` file into ``gwc.jmx``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:53
msgid "Disable all the **Thread Groups** except for **8**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:55
msgid "Disable the **Content-Type Check**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:57
msgid "In the ``CSV Data Set Config`` element, modify the **path** of the CSV file by setting the path for the file ``gwc.csv`` in the ``$TRAINING_ROOT/data/jmeter_data`` directory"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:67
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:39
msgid "boulder"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:72
msgid "Test GeoServer WMS"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:85
msgid "Test GeoWebCache fullWMS"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:87
msgid "Go to ``$TRAINING_ROOT/data/gwc/geowebcache.xml`` and add the following snippet:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:98
msgid "Setting ``fullWMS`` to `true` allows GeoWebCache to use fullWMS support"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:102
msgid "On the JMeter **HTTP Request Default** panel, change the *Path* from ``geoserver/ows`` to ``geoserver/gwc/service/wms`` in order to execute WMS requests directly to GeoWebCache, without passing from GeoServer"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:104
msgid "Add a new parameter called **hints** which can have 3 values ``speed``, ``default`` and ``quality``. The first one should be used for having a faster response without concerning about image quality; the last one, instead, is slower but with a better quality; the second one is a good trade off between them. For the first test set **hints** to ``speed``."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:108
msgid "At the first run, the throughput should be lower than that of GeoServer, because GeoWebCache has spent much time on generating the cached tiles."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:112
msgid "Run the same test again."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:114
msgid "Now the throughput should be improved, because GeoWebCache have already generated the tiles to cache and can reuse them. Image quality should be very poor because of the ``hints=speed`` configuration."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:119
msgid "*Result from GeoWebCache fullWMS with hints=speed*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:121
msgid "Run the same test with ``hints=default``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:126
msgid "*Result from GeoWebCache fullWMS with hints=default*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:128
msgid "Run the same test with ``hints=quality``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:133
msgid "*Result from GeoWebCache fullWMS with hints=quality*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_gwc.rst:135
msgid "It should be noted that changing the ``hints`` parameter changes the image quality, but the throughput is always greater than that of GeoServer WMS"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:5
msgid "Configuring JMeter for testing the Marlin renderer"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:7
msgid "This section explains how GeoServer performances are improved when using the **Marlin** renderer."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:9
msgid "The Oracle JDK and OpenJDK come with two different anti-aliased renderers:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:11
msgid "Oracle JDK uses **Ductus**, a fast native renderer that has scalability issues (good for desktop use, less so on the server side)"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:13
msgid "OpenJDK uses **Pisces**, a pure java renderer that is not as fast as \"Ductus\", but has good scalability (anecdotally, it becomes faster than Ductus above the 4 concurrent requests)"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:15
msgid "The `Marlin <https://github.com/bourgesl/marlin-renderer>`_ renderer is an improved version of Pisces that is as fast, if not faster, than Ductus, and scales up just as well as Pisces."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:21
msgid "Go to ``$TRAINING_ROOT/data/jmeter_data`` and copy the file ``template.jmx`` file creating a ``marlin.jmx`` file"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:45
msgid "Test without Marlin"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:47
msgid "Go and remove the contro"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:58
msgid "*Throughput without Marlin (Note the results may be different in other machines)*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:65
msgid "Setup Marlin"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:69
msgid "Download the Marlin rasterizer library at `https://github.com/bourgesl/marlin-renderer/releases/download/v0.4.4/marlin-0.4.4.jar <https://github.com/bourgesl/marlin-renderer/releases/download/v0.4.4/marlin-0.4.4.jar>`_ and save it in ``%TRAINING_ROOT%\\data``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:71
msgid "Open ``%TRAINING_ROOT%\\setenv.bat`` and add the following lines to enable the Marlin renderer, right before the \"Tomcat options for the JVM\" section::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:77
msgid "Start GeoServer again"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:79
msgid "Go to the map preview and open the ``boulder`` layer, you should see the following in the Tomcat console::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:102
msgid "Test with Marlin renderer"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:106
msgid "You may see that the throughput got significantly higher, especially at mid-high thread counts"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_marlin.rst:111
msgid "*Throughput with Marlin (Note the results may be different in other machines)*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:7
msgid "Configuring JMeter for testing Raster optimization"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:9
msgid "The following section explains how the GeoServer performances improves with the optimization of raster files."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:11
msgid "Optimization has already been discussed in the :ref:`Introduction To Processing With GDAL <geoserver.processing>` sections, describing the most common techniques used."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:13
msgid "This section requires the layers published in the :ref:`Adding an Image Mosaic <geoserver.mosaic>`, :ref:`Introduction To Processing With GDAL <geoserver.processing>` and :ref:`Advanced Mosaics Configuration <geoserver.mosaic_pyramid>` sections."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:16
msgid "Test the Unoptimized Mosaic"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:18
msgid "Go to ``$TRAINING_ROOT/data/jmeter_data`` and copy the file ``template.jmx`` file, creating a ``mosaic.jmx`` file"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:24
msgid "Disable the Thread Groups **8**, **16**, **32**, **64** by right-clicking on them and selecting `Disable`."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:26
msgid "In the ``CSV Data Set Config`` element of the remaining thread groups, modify the **path** of the CSV file by setting the path for the file ``optimized.csv`` in the ``$TRAINING_ROOT/data/jmeter_data`` directory"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:36
msgid "geosolutions:boulder_bg"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:38
msgid "EPSG:26913"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:40
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:256
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:90
msgid "At this point jMeter is configured to run a GeoServer performance test:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:46
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:69
msgid "You should see something like this:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:51
msgid "*`View Results Tree` panel*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:53
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:76
msgid "When the test is completed, Save the results in a text file and remove them from the console by clicking on :guilabel:`Run --> Clear All` on the menu"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:56
msgid "Test the Optimized Mosaic"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:58
msgid "In the **HTTP Request Default** section modify the following parameter:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:66
msgid "geosolutions:boulder_bg_optimized"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:68
msgid "Run the test again"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_mosaic.rst:70
msgid "Compare the results of this test with the ones saved before. **You should see that throughput is increased with the optimized Mosaic**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:7
msgid "Configuring JMeter for a Multiscale test"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:9
msgid "This chapter explains how to create a custom randomized Multiscale test with a set of multiple concurrent threads."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:11
msgid "In the first paragraph is described how to generate a CSV file for randomized requests at different scales. In the second one is shown how to configure a new JMeter test with multiple simultaneous threads."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:15
msgid "Create CSV file"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:17
msgid "Open the file :file:`gdal.bat` under **$TRAINING_ROOT** folder inside the training home folder."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:25
msgid "The output of the command will be something like this::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:54
msgid "The information needed for create a multiscale CSV file are:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:59
msgid "**Tile Size**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:60
msgid "256 x 256"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:61
msgid "**Pixel Size**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:62
msgid "0.000277777777778"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:63
msgid "**Bounding Box**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:64
msgid "((-105.7001389, -105.0001389), (39.8001389, 40.3001389))"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:76
msgid "**wms_request.py** is a python script which generates randomized request at different bounding box and resolutions. The parameters are described in the following table:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:81
msgid "**Parameter**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:83
msgid "*count*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:84
msgid "Indicates the number of requests to generate"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:85
msgid "*region*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:86
msgid "Indicates the maximum bounding box of each request"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:87
msgid "*minres/maxres*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:88
msgid "Indicates the minimum and maximum value for the Pixel Size to request (Tipically it should be at least the minimum resolution)"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:89
msgid "*minsize/maxsize*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:90
msgid "Indicates the minimum and maximum dimensions of the requested image (Tipically it should be at least as big as the tile size)"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:92
msgid "The CSV file is structured following the rule ``$width;$height;$bbox``."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:94
msgid "For example ``290;444;-105.5904,39.910198,-105.48776,40.067338`` indicates a request of size **290x444** and Bounding box **[-105.5904,39.910198,-105.48776,40.067338]**."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:96
msgid "JMeter must be configured for parsing the CSV file correctly by using the ``CSV Data Set Config`` element."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:101
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:21
msgid "From the training root, on the command line, run ``jmeter.bat`` (or ``jmeter.sh`` if you're on Linux) to start JMeter:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:106
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:26
msgid "*jMeter interface*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:108
msgid "Add 3 new **Thread Group** called *1*, *2*, *4*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:110
msgid "For each **Thread Group** set the ``Number of Thread(users)`` field equal to the **Thread Group** name, the ``ramp-up period`` and ``Loop Count`` fields to 1."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:115
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:47
msgid "*Setting the Thread Group*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:117
msgid "In the **Test Plan** section, check the `Run Thread Groups consecutively` checkbox"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:119
msgid "Add a new **Loop Controller** for each **Thread Group** object:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:121
msgid "Each **Loop Controller** should be configured following this schema:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:126
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:130
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:134
msgid "**Thread Group**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:127
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:24
msgid "1"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:128
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:132
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:136
msgid "**Loop Controller --> Loop Count**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:129
msgid "100"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:131
msgid "2"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:133
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:137
msgid "50"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:135
msgid "4"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:140
msgid "Right click on each ``Loop Controller`` tree node and add a new **HTTP Request** element with the same name of the **Thread Group**:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:145
msgid "*Setting the HTTP Request*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:147
msgid "In each **HTTP Request** add the following fields to the panel:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:153
msgid "Name"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:154
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:200
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:235
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:70
msgid "Value"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:155
msgid "Encode?"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:156
msgid "Include Equals?"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:157
msgid "bbox"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:158
msgid "${bbox}"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:159
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:163
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:167
msgid "unchecked"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:160
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:164
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:168
msgid "checked"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:161
msgid "height"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:162
msgid "${height}"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:165
msgid "width"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:166
msgid "${width}"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:169
msgid "Which should look like in the picture"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:174
msgid "*HTTP Request panel configuration*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:176
msgid "Uncheck the ``Follow Redirects`` and ``Use KeepAlive`` checkbox"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:178
msgid "Right click on each ``Loop Controller`` tree node and add a new **CSV Data Set Config** element:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:183
msgid "*Setting the CSV Data Set Config*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:185
msgid "Configure the ``CSV Data Set Config`` element by adding the **path** of the CSV file created before and setting the variable definitions:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:190
msgid "*Configuring the CSV Data Set Config*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:193
msgid "From the ``Test Plan`` tree node add an **HTTP Request Default** element and enter the following basic configuration:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:199
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:234
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:69
msgid "Field"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:201
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:71
msgid "Server Name or IP"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:202
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:72
msgid "localhost"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:203
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:73
msgid "Port Number"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:204
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:74
msgid "8083"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:205
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:75
msgid "Path"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:206
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:76
msgid "geoserver/ows"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:208
msgid "It should look like this:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:213
msgid "*HTTP Default Request host/port/path configuration*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:215
msgid "From the training data dir root, open the ``data/jmeter_data/jmeter_request_params_2.txt``, select and copy its contents in the clipboard, then click \"Add from Clipboard\" in the \"HTTP request\" panel to setup a sample GetMap request:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:217
msgid "Add the following listeners by right clicking on ``Test Plan`` tree node: \"View results Tree\", \"Summary Report\""
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:219
msgid "Add the following assertions by right clicking on ``Test Plan`` tree node: \"Response Assertion\""
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:224
msgid "*Adding Assertions*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:226
msgid "Using ``Assertions`` is helpful because it avoids to continuously do a visual check on the results."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:228
msgid "Configure the \"Response Assertion\" following this table:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:236
msgid "Apply to"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:237
msgid "Main sample only"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:238
msgid "Response field to test"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:239
msgid "Response Headers"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:240
msgid "Pattern Matching Rules"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:241
msgid "Contains"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:243
msgid "In the ``Pattern to test`` panel add:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:249
msgid "The final result should look like in the picture:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:254
msgid "*Configuring Response Assertion*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:258
msgid "Select the **Test Plan** tree node and select ``Run`` - ``Start`` from the top menu to start the jMeter test."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:263
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:97
msgid "*starting jMeter test*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:265
msgid "Select ``View Results Tree`` to directly see the request information produced and the requests results:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:270
msgid "*The View Results Tree panel with a sample request*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:275
msgid "*Another request with different resolution and bounding box*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:277
msgid "Select ``Summary report`` to view the statistical information about the requests:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_multiscale.rst:282
msgid "*Suymmary report panel*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:7
msgid "Configuring JMeter for a simple test"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:9
msgid "Apache JMeter is an open source Java desktop application, built to verify functional behavior, perform load tests, and measure performance."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:11
msgid "This section explains how to run performance tests using JMeter in order to evaluate the GeoServer performances when serving WMS requests. The performance test aim to stress the server and evaluate  the response time and throughput with an increasing number of simulated users sending concurrent request to the server."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:15
msgid "Ideally, to avoid adding extra load to the server JMeter should run on a different machine."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:17
msgid "If you have performed the exercises in the security section, please go back to the layer and service security pages and open access to everybody, on all data and all services, before performing the exercises in this section"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:28
msgid "Add a new **Thread Group** with the mouse right click on ``Test Plan`` tree node:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:33
msgid "*Adding a new Thread Group*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:35
msgid "Add a new **Loop Controller** with the mouse right click on ``Thread Group`` tree node:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:40
msgid "*Adding a new Loop Controller*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:42
msgid "In the ``Thread Group`` panel set the number of thread for the test to  4 (this represents the number of simultaneous requests that are made to GeoServer) and the ramp-up period to 60. Also, chek ``Forever`` on the **Loop Count** field."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:49
msgid "Right click on the ``Loop Controller`` tree node and add a new **HTTP Request** element:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:54
msgid "*Adding a new HTTP Request*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:56
msgid "Add the following listeners by right clicking on ``Test Plan`` tree node: ``View results Tree``, ``Summary Report``, ``Graph results``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:61
msgid "*Adding a Listeners*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:63
msgid "In the **HTTP Request** enter the following basic configuration:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:81
msgid "*HTTP Request host/port/path configuration*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:83
msgid "From the training data dir root, open the ``data/jmeter_data/jmeter_request_params.txt``, select and copy its contents in the clipboard, then click \"Add from Clipboard\" in the \"HTTP request\" panel to setup a sample GetMap request:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:88
msgid "*HTTP parameters configuration*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:92
msgid "Select on **Thread Group** tree node and afted click on ``Run`` tool and select **Start** to startig the jMeter test."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:99
msgid "Select ``View Results Tree`` to directly see the request informations produced and the request result:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:104
msgid "*The View Results Tree panel*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:106
msgid "Select ``Suymmary report`` to view the statistical information about the requests:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:111
msgid "*The Aggregate Graph panel*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:113
msgid "Select ``Graph Results`` to analyze the technical trend of the requests:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_simple.rst:118
msgid "*The Spline Visualizer panel*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:7
msgid "Configuring JMeter for testing Style optimization"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:9
msgid "The following section explains how GeoServer performances are improved when using optimized styles. Styling is an important feature for GeoServer, but requires some attention in order to avoid slowing down the performances."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:12
msgid "This tutorial is aimed to show how GeoServer performances change by choosing a different style for the same data set using JMeter."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:14
msgid "This example requires to have already completed the first 9 steps of the :ref:`Creating a Base Map with a Layer Group <geoserver.base_map>` section, :ref:`Adding a Shapefile <geoserver.add_shp>` and :ref:`Adding a Style <geoserver.add_style>` sections ."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:18
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:48
msgid "Configuring GeoServer"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:22
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:60
msgid "Go to :guilabel:`Styles` and click on ``Add new Style``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:24
msgid "On the bottom of the page, click on :guilabel:`Choose File` and select the SLD file called ``line_label`` in the ``$TRAINING_ROOT/data/jmeter_data`` directory"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:26
msgid "Click on :guilabel:`Upload` and then on :guilabel:`Submit`. Now we have a style which supports labeling but has no control on the label conflicts and overlapping"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:28
msgid "Return to the GeoServer `Welcome Page <http://localhost:8083/geoserver/>`_."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:30
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:106
msgid "Go to :guilabel:`Layer Groups` and click on ``test``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:32
msgid "Add a new Layer to the Layer Group called **bbuildings**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:37
msgid "*Add a new Layer to the Layer Group*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:39
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:108
msgid "Change the associated styles by clicking on each style and choosing another one on the list. Use the following styles:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:44
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:113
msgid "**Layer**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:45
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:114
msgid "**Style**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:47
msgid "line_label"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:48
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:117
msgid "geosolutions:BoulderCityLimits"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:49
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:51
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:53
msgid "polygon"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:50
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:119
msgid "geosolutions:bplandmarks"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:52
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:121
msgid "geosolutions:bbuildings"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:58
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:127
msgid "*Styles configuration*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:60
msgid "Click on :guilabel:`Save`. With this configuration we have a Layer Group composed by 4 Layers with 4 bad styles associated. This will result in a low throughput, if compared to that of the test with optimized styels."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:65
msgid "Go to ``$TRAINING_ROOT/data/jmeter_data`` and copy the file ``template.jmx`` file and create a ``styles.jmx`` one"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:71
msgid "Disable **Thread Group** **8**, **16**, **32** and **64**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:73
msgid "In the ``CSV Data Set Config`` element, modify the **path** of the CSV file by setting the path for the file ``style.csv`` in the ``$TRAINING_ROOT/data/jmeter_data`` directory"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:83
msgid "test"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:88
msgid "Test with unoptimized styles"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:90
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:94
msgid "Run the test. You should see something like this:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:95
msgid "*View Results Tree panel with a bad styling*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:104
msgid "Setting optimized styles"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:116
msgid "mainrd"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:118
msgid "citylimits"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:120
msgid "arealandmarks"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:122
msgid "buildings"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:129
msgid "Click on :guilabel:`Save`. The new styles contain scale dependencies and label optimization, which will result in a better throughput."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:132
msgid "Test with optimized styles"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:139
msgid "*View Results Tree panel with good styling*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_styles.rst:141
msgid "You may see that the throughput is greater than that of the first test. The use of scale dependencies reduces the layers to see at lower zoom levels while conflict resolution avoids to show multiple overlapping label at each zoom level."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:7
msgid "Configuring JMeter for testing Vector data"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:9
msgid "The following section compare vector data preparation using Shapefile and PostGis. For this example a Shapefile containing primary or secondary roads is used."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:11
msgid "The purpose is to test the throughput between the shapefile and an optimized database containing the same data. The result will demonstrate that database optimization can provide a better throughput than the one of the shapefile"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:16
msgid "Configuring the database"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:18
msgid "Open the terminal and go to the ``%TRAINING_ROOT%``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:20
msgid "Load the shapefile ``tl_2014_01_prisecroads`` located in ``%TRAINING_ROOT%\\data\\user_data`` into PostGIS with the following commands:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:30
msgid "More information can be found at :ref:`Loading a Shapefile into PostGIS <geoserver.shp_postgis>`"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:32
msgid "On the ``%TRAINING_ROOT%`` run **pgAdmin.bat**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:34
msgid "Go to the table ``pgroads`` inside database ``shape2`` and execute the following SQL script for creating an index on the *MTFCC* column:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:43
msgid "*Create a new index*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:45
msgid "The following index optimizes the access to the database when filtering on the *MTFCC* column."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:52
msgid "Following the instructions on :ref:`Adding a Postgis layer <geoserver.postgis_lay>`, configure the database ``shape2`` in GeoServer and call it **pgroads**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:54
msgid "Note that the database `Coordinate Reference System` is ``EPSG:4269``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:56
msgid "Configure the shapefile ``tl_2014_01_prisecroads`` used before in GeoServer following the instructions in :ref:`Adding a Shapefile <geoserver.add_shp>` and call it **allroads**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:58
msgid "Note that the shapefile `Coordinate Reference System` is ``EPSG:4269``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:62
msgid "On the bottom of the page, click on :guilabel:`Choose File` and select the SLD file called ``shproads`` in the ``$TRAINING_ROOT/data/jmeter_data`` directory"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:64
msgid "Click on :guilabel:`Upload` and then on :guilabel:`Submit`. This new style supports scale dependency which is used as filter on the roads to display."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:69
msgid "Go to ``$TRAINING_ROOT/data/jmeter_data`` and copy the file ``template.jmx`` file creating a ``vector.jmx`` file."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:75
msgid "In the ``CSV Data Set Config`` element, modify the **path** of the CSV file by setting the path for the file ``shp2pg.csv`` in the ``$TRAINING_ROOT/data/jmeter_data`` directory"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:85
msgid "geosolutions:allroads"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:87
msgid "EPSG:4269"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:88
msgid "styles"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:89
msgid "shproads"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:92
msgid "Test the Shapefile"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:99
msgid "*Sample request on the Shapefile*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:108
msgid "Test the Database"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:110
msgid "In the **HTTP Request Default** element modify the following parameter:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:118
msgid "geosolutions:pgroads"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_vector.rst:120
msgid "Run the test again. It should be noted that database throughput is greater than that of the Shapefile, because the new index created provides a faster access on the database, improving GeoServer performances"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:5
msgid "Configuring JMeter for testing WMS Resource Limits"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:7
msgid "The following section explains how GeoServer performances are improved when setting the resource limits for WMS."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:10
msgid "Preliminary Steps"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:12
msgid "Open your Web browser and navigate to the GeoServer `Welcome Page <http://localhost:8083/geoserver/>`_."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:14
msgid "Go to :guilabel:`Stores` and select ``storms`` DataStore"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:16
msgid "Change the following parameters:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:23
msgid "max connections"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:25
msgid "Connection timeout"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:26
msgid "20000000"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:27
msgid "It should appear something like this:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:32
msgid "*Change `storms` parameters*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:34
msgid "Now you have configured this store to enqueue all the requests in a single queue until they are not timed out."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:39
msgid "Go to ``$TRAINING_ROOT/data/jmeter_data`` and copy the file ``template.jmx`` file and create ``limit.jmx``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:45
msgid "Disable all the **Thread Groups** except for the **64** one in order to create a test environment with multiple concurrent requests to be enqueued."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:47
msgid "In the ``CSV Data Set Config`` element, modify the **path** of the CSV file by setting the path for the file ``limits.csv`` in the ``$TRAINING_ROOT/data/jmeter_data`` directory"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:57
msgid "geosolutions:storm_obs"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:59
msgid "EPSG:4326"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:63
msgid "Test without WMS Limits"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:74
msgid "*View Results Tree*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:79
msgid "Configure WMS Limits"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:83
msgid "Go to :guilabel:`WMS` and edit the :guilabel:`Raster Rendering Options` section:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:90
msgid "Max rendering time"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:91
msgid "10"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:96
msgid "*Changing WMS limit configuration*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:98
msgid "With this option, GeoServer will cut off all the requests that need more than 10s to be rendered, making GeoServer more responsive. Note that this will result in various error returned by GeoServer for those operations which are cut off. You can choose another value to set. For having a good result you should take a value minor than the average response time of the first test."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:103
msgid "Test with WMS Limits"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:105
msgid "Run again the test. You should see multiple errors like this:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:110
msgid "*Exceptions caused by maximum rendering limit exceeded*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:112
msgid "You may see that the throughput is increased because most of the timed out requests have been removed. With this kind of configuration you can control the responsiveness of your GeoServer by removing stale requests instead of waiting for them."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\jmeter\jmeter_wmslimits.rst:115
msgid "At the end of the test remove the limits and restore the previous configuration of the ``storms`` DataStore"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\monitoring.rst:5
msgid "Installing and Configuring the Monitoring plugin"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\monitoring.rst:7
msgid "The monitoring extension provides a request monitor for GeoServer. It captures information about each request a GeoServer instance handles and produces reports based on the request data."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:7
msgid "Configuring GeoServer for robustness"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:9
msgid "In a production environment may be necessary to properly configure the WMS service in order to give a limit to resources associated with a request. The **Resource Limits** options allow the administrator to limit the resources consumed by each WMS GetMap request."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:11
msgid "GeoServer provides a user interface for these options:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:17
msgid "*Setting the Resource consumption limits*"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:20
msgid "The following table shows each option name, a description, and the minimum GeoServer version at which the option is available (old versions will just ignore it if set)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:27
msgid "**Version**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:28
msgid "**Max rendering memory**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:29
msgid "Sets the maximum amount of memory, in kilobytes, a single GetMap request is allowed to use. Each output format will make a best effort attempt to respect the maximum using the highest consuming portion of the request processing as a reference. For example, the PNG output format will take into consideration the memory used to prepare the image rendering surface in memory, usually proportional to the image size multiplied by the number of bytes per pixel"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:30
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:33
#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:36
msgid "1.7.5"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:31
msgid "**Max rendering time**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:32
msgid "Sets the maximum amount of time, in seconds, GeoServer will use to process the request. This time limits the \"blind processing\" portion of the request serving, that is, the part in which GeoServer is computing the results before writing them out to the client. The portion that     is writing results back to the client is not under the control of this parameter, since this time is also controlled by how fast the network between the server and the client is. So, for example, in the case of PNG/JPEG image generation, this option will control the pure rendering time, but not the time used to write the results back."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:34
msgid "**Max rendering errors**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:35
msgid "Sets the maximum amount of rendering errors tolerated by a GetMap. Usually GetMap skips over faulty features, reprojection errors and the like in an attempt to serve the results anyways. This makes for a best effort rendering, but also makes it harder to spot issues, and consumes CPU cycles as each error is handled and logged"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:38
msgid "Out of the box GeoServer uses 65MB, 60 seconds and 1000 errors respectively. All limits can be disabled by setting their value to ``0``."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:40
msgid "Once any of the set limits is exceeded, the GetMap operation will stop and a ``ServiceException`` will be returned to the client."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:42
msgid "It is suggested that the administrator sets all of the above limits taking into consideration peak conditions. For example, while a GetMap request under normal circumstance may take less than a second, under high load it is acceptable for it to take longer, but usually, it's not sane that a request goes on for 30 minutes straight. The following table shows some example values for the configuration options above, with explanations of how each is computed:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:49
msgid "**Rationale**"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:50
msgid "maxRequestMemory"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:51
msgid "65000"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:52
msgid "65MB are sufficient to render a 4078x4078 image at 4 bytes per pixel (full color and transparency), or a 8x8 meta-tile if you are using GeoWebCache or TileCache. Mind the rendering process will use an extra in memory buffer for each subsequent FeatureTypeStyle in your SLD, so this will also limit the size of the image. For example, if the SLD contains two FeatureTypeStyle element in order to draw cased lines for an highway the maximum image size will be limited to 2884x2884 (the memory goes like the square of the image size, so halving the memory does not halve the image size)"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:53
msgid "maxRenderingTime"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:54
msgid "60"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:55
msgid "A request that processes for one minute straight is probably drawing a lot of features independent of the current load. It might be the result of a client making a GetMap against a big layer using a custom style that does not have the proper scale dependencies"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:56
msgid "maxRenderingErrors"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:57
msgid "1000"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\adv_gsconfig\parameters.rst:58
msgid "Encountering 1000 errors is probably the result of a request that is trying to reproject a big data set into a projection that is not suited to area it covers, resulting in many reprojection failures."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:5
msgid "GeoSites: GeoNode Multi-Tenancy"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:7
msgid "GeoSites is a way to run multiple websites with a single instance of GeoNode. Each GeoSite can have different templates, apps, and data permissions but share a single database (useful for sharing users and data layers), GeoServer, and CSW.  This is useful when multiple websites are desired to support different sets of users, but with a similar set of data and overall look and feel of the sites.  Users can be given permission to access multiple sites if needed, which also allows administrative groups can be set up to support all sites with one account."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:11
msgid "Master Website"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:13
msgid "A GeoSites installation uses a 'master' GeoNode website that has soms additional administrative pages for doing data management. Layers, Maps, Documents, Users, and Groups can all be added and removed from different sites.  Users can be given access to any number of sites, and data may appear on only a single site, or all of them.  Additionally, if desired, any or all of the django apps installed on the other sites can be added to the master site to provide a single administrative interface that gives full access to all apps.  The master site need not be accessible from the outside so that it can be used as an internal tool to the organization."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:15
msgid "Users created on a particular site are created with access to just that site.  Data uploaded to a particular site is given permission on that site as well as the master site.   Any further adjustments to site-based permissions must be done from the master site."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:18
msgid "Database"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:19
msgid "The master site, and all of the individual GeoSites, share a single database. Objects, including users, groups, and data layers, all appear within the database but an additional sites table indicates which objects have access to which sites.  The geospatial data served by GeoServer (e.g., from PostGIS) can exist in the database like normal, since GeoServer will authenticate against GeoNode, which will use it's database to determine permissions based on the object, current user, and site."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:23
msgid "GeoServer"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:24
msgid "A single GeoServer instance is used to serve data to all of the GeoSites.  To keep data organized each site specifies a default workspace (DEFAULT_WORKSPACE) that GeoServer will use to partition the data depending on which site uploaded the data.   The workspaces themselves don't have any impact on permissions, since data can be added and removed from different sites, however it provides at least some organization of the data based on the initial site."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:26
msgid "Data that is common to all sites can be added to the master site which will appear in the generic 'geonode' workspace."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:30
msgid "Settings Files and Templates"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:32
msgid "A key component in managing multiple sites is keeping data organized and using a structured series of settings files so that common settings can be shared and only site specific settings are separated out. It is also best to import the default GeoNode settings from the GeoNode installation.  This prevents the settings from having to be manually upgraded if there is any default change the GeoNode settings."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:34
msgid "Settings which are common to all GeoSites, but differ from the default GeoNode, are separated into a master_settings.py file.  Then, each individual site has settings file which imports from the master site and will then only need to specify a small selection that make that site unique, such as:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:36
msgid "SITE_ID: Each one is unique, the master site should have a SITE_ID of 1."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:37
msgid "SITENAME"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:39
msgid "ROOT_URLCONF: This may be optional. The master site url.conf can be configured to automatically import the urls.py of all SITE_APPS, so a different ROOT_URLCONF is only needed if there are further differences."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:40
msgid "SITE_APPS: Containing the site specific apps"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:41
msgid "App settings: Any further settings required for the above sites"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:42
msgid "Other site specific settings, such as REGISTRATION_OPEN"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:44
msgid "A GeoSite therefore has three layers of imports, which is used for settings as well as the search path for templates. First it uses the individual site files, then the master GeoSite, then default GeoNode. These are specified via variables defined in settings:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:46
msgid "SITE_ROOT: The directory where the site specific settings and files are located (templates, static)"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:47
msgid "PROJECT_ROOT: The top-level directory of all the GeoSites which should include the global settings file as well as template and static files"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:48
msgid "GEONODE_ROOT: The GeoNode directory."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:50
msgid "The TEMPLATE_DIRS, and STATICFILES_DIRS will then include all three directories as shown::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:64
msgid "At the end of the settings_global.py the following variables will be set based on site specific settings::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:73
msgid "Templates and Static Files"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:75
msgid "As mentioned above for each website there will be three directories used for template and static files.  The first template file found will be the one used so templates in the SITE_ROOT/templates directory will override those in PROJECT_ROOT/templates, which will override those in GEONODE_ROOT/templates."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:77
msgid "Static files work differently because (at least on a production server) they are collected and stored in a single location.  Because of this care must be taken to avoid clobbering of files between sites, so each site directory should contain all static files in a subdirectory with the name of the site (e.g., static/siteA/logo.png )"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:79
msgid "The location of the proper static directory can then be found in the templates syntax such as::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:84
msgid "Permissions by Site"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:85
msgid "By default GeoNode is publicly available. In the case of GeoSites, new data will be publicly available, but only for the site it was added to, and the master site (all data is added to the master site)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:88
msgid "Adding New Sites"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\geosites.rst:89
msgid "A management command exists to easily create a new site.  This will create all the needed directories, as well as a site specific settings file.  The command may also create a website configuration file."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\index.rst:4
msgid "GeoNode on Production"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\index.rst:6
msgid ":ref:`production`"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\index.rst:8
msgid ":ref:`geoserver_adv_config`"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\index.rst:10
msgid ":ref:`ssl`"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\index.rst:12
msgid ":ref:`geosites`"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:5
msgid "Configuring GeoNode for Production"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:7
msgid "This page documents recommendations for configuring GeoNode in production environments. The steps mentioned in the first section are required to run GeoNode, the ones in the second section are either optional or ways to get more performance."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:10
msgid "This document makes numerous references to the **<host>** variable, please replace it with the IP Address of your GeoNode or the DNS entry."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:12
msgid "For example: instead of ``http://<host>/geoserver``, write down: ``http://mygeonode.com/geoserver`` or ``http://127.0.0.1/geoserver``"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:15
msgid "Set the correct GeoServer Proxy URL value"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:17
msgid "Navigate to ``http://localhost/geoserver``, log in and click on the ``Global`` link in the Settings section."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:19
msgid "The Geoserver default username is **admin** with **geoserver** as the password. Change this ASAP."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:23
msgid "Find the ``Proxy Base URL`` text field, put the complete address there::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:30
msgid "Configure the Printing Module"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:32
msgid "This lives in the GeoServer Data dir ``/usr/share/geoserver/data/printing/config.yaml``, add your server's IP address or domain name to the list of exceptions. Please refer to http://docs.geoserver.org/2.4.x/en/user/datadirectory/index.html for additional information on managing the geoserver data directory::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:42
msgid "Recommended Steps (optional)"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:45
msgid "Adding layers from Google, Bing and other providers"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:48
msgid "Bing"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:50
msgid "Get an API key from Microsoft at http://bingmapsportal.com/ and place it in ``local_settings.py``.::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:54
msgid "Copy the ``MAP_BASELAYERS`` dictionary from ``settings.py`` into ``local_settings.py`` and add the following snippet::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:69
msgid "Google"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:71
msgid "Get an API key from Google at http://code.google.com/apis/maps/signup.html and place it in ``local_settings.py``, for example::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:75
msgid "Copy the ``MAP_BASELAYERS`` dictionary from ``settings.py`` into ``local_settings.py`` (or edit the previously copied snippet) and add the following snippet::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:89
msgid "Sitemaps Configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:91
msgid "GeoNode can automatically generate a sitemap suitable for submission to search engines which can help them to index your GeoNode site more efficiently and effectively."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:95
msgid "In order to generate the sitemap properly, the sites domain name must be set within the sites framework. This requires that an superuser login to the admin interface and navigate to the sites module and change example.com to the actual domain name (and port if applicable). The admin interface can be accessed at http://<host>/admin/sites/site/. Click on the ``example.com`` link, and change both the ``Domain name`` and ``Display name`` entries to match your system."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:103
msgid "It is possible to 'inform' google of changes to your sitemap. This is accomplished using the ping_google management command. More information can be found here http://docs.djangoproject.com/en/dev/ref/contrib/sitemaps/#django.contrib.sitemaps.ping_google It is recommended to put this call into a cron (scheduled) job to update google periodically."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:110
msgid "Configuring User Registration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:112
msgid "You can optionally configure GeoNode to allow new users to register through the web.  New registrants will be sent an email inviting them to activate their account."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:114
msgid "To allow new user registration:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:116
msgid "Set up the email backend for Django (see `Django documentation <http://docs.djangoproject.com/en/dev/topics/email/#e-mail-backends>`_) and add the appropriate settings to ``./src/GeoNodePy/geonode/local_settings.py``.  For example::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:125
msgid "In the same settings file set::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:129
msgid "With the Django application running, set the domain name of the service properly through the admin interface as specified above in the Sitemaps section.  (This domain name is used in the account activation emails.)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:131
msgid "Restart apache::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:135
msgid "(Optional) Disable automatic approval of new users. Administrators would receive an email and need to manually approve new accounts. For this option to work, an email backed has to be defined in order to email the users with Staff status the notification to approve the new account::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:140
msgid "To register as a new user, click the ''Register'' link in the GeoNode index header."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:143
msgid "Additional Configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:145
msgid "Some other things that require tweaking:"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:147
msgid "Web-accessible uploads directory for user profile photos"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:152
msgid "Robot Exclusion File"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:154
msgid "GeoNode has several views that require considerable resources to properly respond - for example, the download links on layer detail pages require GeoServer to dynamically generate output in PDF, PNG, etc. format."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:156
msgid "Crawlers for web search engines such as Google may cause problems by quickly following many such links in succession."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:158
msgid "In order to request that \"robots\" do not make requests directly to GeoServer, you can ensure that requests to ``/robots.txt`` return a text file with the following content::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:163
msgid "This will only affect automated web agents; web browsers in particular are unaffected."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:168
msgid "Memory Management"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:170
msgid "At the time of the GeoNode 1.0 release, the GeoNode manual recommended at least 4GB RAM for servers running GeoNode."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:172
msgid "While 4GB *physical* RAM is sufficient, it is recommended that machines be configured with at least 6GB total *virtual* memory."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:174
msgid "For example, a machine with 4GB physical RAM and 2GB swap space should be able to run GeoNode, but if you would like to run without a swapfile then you should configure the machine with at least 6GB RAM."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:176
msgid "On Linux and MacOSX hosts, you can check the available RAM with the following command::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:184
msgid "The \"total\" column lists the available physical memory and swap space in megabytes; adding them together yields the amount of virtual memory available to the system."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:186
msgid "In this example, there is no Swap space so that field is 0 and the available RAM on the system is 6096MB (6 GB)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:189
msgid "Security Integration Optimization"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:191
msgid "GeoServer delegates authentication and authorization to GeoNode. The default configuration uses an HTTP endpoint in GeoNode to discover the current user and the layers that are accessible. For production, it is advisable to use a database-level connection."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:194
msgid "Installing the Stored Procedure"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:196
msgid "The SQL for the stored procedure is distributed with the GeoServer web application archive and can be found at :file:`WEB-INF/classes/org/geonode/security/geonode_authorize_layer.sql` in the webapps directory. It can be loaded using the `psql` command by following these steps (if not using tomcat6 or Ubuntu, locate the webapps directory for your configuration)::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:203
msgid "Configuring GeoServer to Use the Database Security Client"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:205
msgid "If a context configuration XML file does not already exist, create one for GeoServer. If using Tomcat6 on Ubuntu, this file resides at :file:`/etc/tomcat6/Catalina/localhost/geoserver.xml`. If creating a new file, the following XML should be added (replace ALLCAPS with your specific values)::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:213
msgid "If the file exists already, just add the `Parameter` element from above."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:216
msgid "Verification of Database Security Client"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:218
msgid "To verify the settings change, look in the GeoServer logs for a line that notes: \"using geonode database security client\". If any issues arise, check your connection configuration as specified in the context file above."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:221
msgid "Configuring the Servlet Container"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:223
msgid "GeoServer is the most resource intensive component of GeoNode."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:225
msgid "There are some general notes on setting up GeoServer for production environments in the `GeoServer manual <http://docs.geoserver.org/stable/en/user/production/index.html>`_ ."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:227
msgid "However, the following are some GeoServer recommendations with GeoNode's specific needs in mind."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:231
msgid "JVM Options"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:233
msgid "The JRE used with GeoNode should be that distributed by Oracle."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:235
msgid "Others such as OpenJDK may work but Oracle's JRE is recommended for higher performance rendering."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:237
msgid "Startup options should include the following::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:242
msgid "These can be specified using the ``CATALINA_OPTS`` variable in Tomcat's ``bin/catalina.sh`` file, or the ``JETTY_OPTS`` in Jetty's ``bin/jetty.sh`` file."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:247
msgid "Constrain GeoServer Worker Threads"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:249
msgid "While the JVM provides memory management for most operations in Java applications, the memory used for rendering (in GeoServer's case, responding to WMS GetMap requests) is not managed this way, so it is allocated in addition to the memory permitted by the JVM options above."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:251
msgid "If GeoServer receives many concurrent requests, it may increase the memory usage significantly, so it is recommended to constrain the number of concurrent requests at the servlet container (ie, Jetty or Tomcat)."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:255
msgid "For Tomcat, you can edit ``conf/server.xml``.  By default, this file contains an entry defining a ContextHandler::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:261
msgid "Add a ``maxThreads`` attribute to limit the number of threads (concurrent requests) to 50 (the default in Tomcat is 200)::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:267
msgid "This configuration is possible in Jetty as well but not yet documented in this manual."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:271
msgid "Native JAI and JAI ImageIO"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:273
msgid "Using the native-code implementation of JAI and JAI ImageIO speeds up GeoServer, thereby requiring less concurrency at the same level of throughput."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:275
msgid "The GeoServer manual contains `platform-specific instructions <http://docs.geoserver.org/stable/en/user/production/java.html#install-native-jai-and-jai-image-i-o-extensions>`_ for configuring JAI and JAI ImageIO."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:279
#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:109
msgid "GeoServer Configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:281
msgid "There are a few controls to be set in the GeoServer configuration itself as well."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:285
msgid "On the JAI Settings page"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:289
msgid "There are two considerations for the JAI settings."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:291
msgid "Enable JPEG and PNG Native Acceleration to speed up the performance of WMS requests"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:293
msgid "Disable Tile Recycling as this optimization is less relevant on recent JVM implementations and has some overhead itself."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:297
msgid "On the WMS Service page"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:301
msgid "There is only one consideration for the Web Map Service page"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:303
msgid "Don't set the \"Resource Consumption Limits.\" This sounds a bit counter intuitive, but these limits are implemented in an inefficient way such that unless resource-intensive requests are common on your server it is more efficient to avoid the limits. A better implementation of this feature is available for GeoServer 2.1 and will be incorporated in GeoNode 1.1."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:309
msgid "Printing with the Mapfish Print Service"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:311
msgid "The GeoNode map composer can \"print\" maps to PDF documents using the `Mapfish print service <http://www.mapfish.org/doc/print>`_.  The recommended way to run this service is by using the printing extension to GeoServer (if you are using the pre-built GeoNode package, this extension is already installed for you). However, the print service includes restrictions on the servers that can provide map tiles for printed maps.  These restrictions have a fairly strict default, so you may want to loosen these constraints."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:320
msgid "Adding servers by hostname"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:324
msgid "The Mapfish printing module is configured through a `YAML <yaml>`_ configuration file, usually named :file:`print.yaml`.  If you are using the GeoServer plugin to run the printing module, this configuration file can be found at :file:`{GEOSERVER_DATA_DIR}/printing/config.yaml`.  The default configuration should contain an entry like so::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:338
msgid "You can add host/port entries to this list to allow other servers."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:342
msgid "The `Mapfish documentation <http://www.mapfish.org/doc/print/configuration.html>`_ on configuring the print module."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\production.rst:346
msgid "The `GeoServer documentation <http://docs.geoserver.org/stable/en/user/community/printing/>`_ on configuring the print module."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:5
msgid "Running GeoNode under SSL"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:7
msgid "Enabling SSL will encrypt traffic between your GeoNode server and client browsers.  This approach involves re-configuring Apache to serve on port 443, instead of port 80.  Other approaches exist and should be added to this document."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:10
msgid "Generate SSL Key & Certificate"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:12
msgid "The first step is to generate a DES key.::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:25
msgid "Copy the key and certificate to the standard locations::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:30
msgid "Next add the certificate to the cacerts file for python and java::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:35
msgid "Note keytool will ask for a password and the standard password for the java cacerts file is ``changeit``."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:38
msgid "Apache Configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:40
msgid "Enable the ssl module in Apache with the command::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:44
msgid "Next as root edit the Apache geonode config file :file:`/etc/apache2/sites-available/geonode`.  At the beginning of the file replace::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:48
#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:57
#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:88
msgid "with::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:53
msgid "At the bottom of the file, replace::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:75
msgid "This tells Apache where to fine the key and certificate.  There are also some additional lines to handle MSIE, taken from Apache's default-ssl file."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:78
msgid "Tomcat Configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:80
msgid "As root edit the Tomcat server config file :file:`/var/lib/tomcat6/conf/server.xml`, and replace::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:98
msgid "This tells Tomcat that it is running behind an https proxy.  If this is omitted Tomcat will try to redirect to http."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:101
msgid "GeoNode Configuration"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:103
msgid "As root edit the geonode config file :file:`/etc/geonode/local_settings.py` and change the ``SITEURL`` protocol to https::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:111
msgid "As root edit the file :file:`/var/lib/tomcat6/webapps/geoserver/WEB-INF/web.xml` and ensure the ``GEONODE_BASE_URL`` is specified as follows::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:118
msgid "Also update ``proxyBaseUrl`` in the Geoserver global settings file :file:`/var/lib/geoserver/geonode-data/global.xml`::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:124
msgid "Restart"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:126
msgid "Finally restart Apache and Tomcat with::"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:131
msgid "This information was complied from a number of sources.  The main links are listed below.  Please contact the GeoNode list with any updates or corrections."
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:133
msgid "http://confluence.atlassian.com/display/JIRA/Connecting+to+SSL+services"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:134
msgid "http://confluence.atlassian.com/display/JIRA/Integrating+JIRA+with+Apache+using+SSL"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:135
msgid "http://www.akadia.com/services/ssh_test_certificate.html"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:136
msgid "https://help.ubuntu.com/10.04/serverguide/C/httpd.html"
msgstr ""

#: ..\..\006_adv_workshop\003_geonode_production\ssl.rst:137
msgid "https://help.ubuntu.com/10.04/serverguide/C/certificates-and-security.html"
msgstr ""

#: ..\..\006_adv_workshop\index.rst:5
msgid "Advanced Workshop"
msgstr ""

#: ..\..\006_adv_workshop\index.rst:7
msgid "Welcome to the GeoNode Training `Advanced Workshop` documentation v\\ |release|."
msgstr ""

#: ..\..\006_adv_workshop\index.rst:9
msgid "This module introduces advanced tecquinques and metodologies for the management of the geospatial data and the maintenance and tuning of the servers on *Production Environments*."
msgstr ""

#: ..\..\006_adv_workshop\index.rst:11
msgid "The last sections of the module will teach also you how to add brand new classes and functionalities to your GeoNode installation."
msgstr ""

#: ..\..\006_adv_workshop\index.rst:14
msgid "*Prerequisites*"
msgstr ""

#: ..\..\006_adv_workshop\index.rst:14
msgid "You should be familiar with GeoNode, GeoServer, Python framework and development concepts other than with system administrator and caching concepts and tecnquiques."
msgstr ""

#: ..\..\006_adv_workshop\index.rst:24
msgid ":ref:`adv_data_mgmt`"
msgstr ""

#: ..\..\006_adv_workshop\index.rst:24
msgid "Advanced Data Management and Processing tecquiques."
msgstr ""

#: ..\..\006_adv_workshop\index.rst:27
msgid ":ref:`geonode_settings`"
msgstr ""

#: ..\..\006_adv_workshop\index.rst:27
msgid "Learn how to deal with advanced GeoNode configuration settings and external DJango Apps."
msgstr ""

#: ..\..\006_adv_workshop\index.rst:29
msgid ":ref:`geonode_production`"
msgstr ""

#: ..\..\006_adv_workshop\index.rst:30
msgid "Concepts and tecquinques for the deployment af GeoNode and GeoServer on a Production system."
msgstr ""

