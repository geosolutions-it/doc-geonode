# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, GeoNode Development Team
# This file is distributed under the same license as the GeoNode package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GeoNode 2.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 18:58+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\005_dev_workshop\001_devel_intro\exercises.rst:4
#: ..\..\005_dev_workshop\002_devel_core\exercises.rst:4
#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:28
#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:43
msgid "Exercises"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\exercises.rst:7
msgid "Components and Services"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\exercises.rst:9
msgid "Hint, if ``bash-completion`` is installed, try <TAB><TAB> to get completions."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\exercises.rst:16
msgid "start/stop services"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\exercises.rst:28
msgid "basic psql interactions"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\exercises.rst:31
msgid "OGC Standards"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\exercises.rst:34
msgid "WMS"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\exercises.rst:36
msgid "Use the layer preview functionality in GeoServer to bring up a web map."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\exercises.rst:37
msgid "Copy a the URL for the image in the map."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\exercises.rst:38
msgid "Alter URL parameters for the request."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\exercises.rst:39
msgid "Use *curl* to get the capabilities document"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\exercises.rst:45
msgid "More: http://docs.geoserver.org/stable/en/user/services/wms/index.html"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\exercises.rst:48
msgid "WFS"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\exercises.rst:50
msgid "Describe a feature type using curl (replace ws:name with your layer)"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\exercises.rst:56
msgid "More: http://docs.geoserver.org/stable/en/user/services/wfs/reference.html"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:5
msgid "Introduction to GeoNode development"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:7
#: ..\..\005_dev_workshop\index.rst:24
msgid "This module will introduce you to the components that GeoNode is built with, the standards that it supports and the services it provides based on those standards, and an overview its architecture."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:9
#: ..\..\005_dev_workshop\index.rst:13
msgid "GeoNode is a web based GIS tool, and as such, in order to do development on GeoNode itself or to integrate it into your own application, you should be familiar with basic web development concepts as well as with general GIS concepts."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:11
msgid "A set of reference links on these topics is included at the end of this module."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:22
msgid "Development References"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:25
msgid "Basic Web based GIS Concepts and Background"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:27
msgid "OGC Services"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:29
msgid "http://www.opengeospatial.org/"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:30
msgid "http://en.wikipedia.org/wiki/Open_Geospatial_Consortium"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:32
msgid "Web Application Architecture"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:34
msgid "http://en.wikipedia.org/wiki/Web_application"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:35
msgid "http://www.w3.org/2001/tag/2010/05/WebApps.html"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:36
msgid "http://www.amazon.com/Web-Application-Architecture-Principles-Protocols/dp/047051860X"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:38
msgid "AJAX and REST"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:40
msgid "http://en.wikipedia.org/wiki/Ajax_(programming)"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:41
msgid "http://en.wikipedia.org/wiki/Representational_state_transfer"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:43
msgid "OpenGeo Suite"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:45
msgid "http://workshops.opengeo.org/suiteintro/"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:46
msgid "http://suite.opengeo.org/opengeo-docs/"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:48
msgid "GeoServer Administration"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:50
msgid "http://suite.opengeo.org/opengeo-docs/geoserver/"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:51
msgid "https://docs.google.com/a/opengeo.org/presentation/d/15fvUDYg0TO6WGFQlMLM2J1qiTVBYpfjCp0aQBDT0GrM/edit#slide=id.g2e4bd7ac_0_35"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:52
msgid "http://suite.opengeo.org/docs/sysadmin/index.html#sysadmin"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:54
msgid "PostgreSQL and PostGIS Administration - http://workshops.opengeo.org/postgis-intro/ - http://workshops.opengeo.org/postgis-spatialdbtips/"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:59
msgid "Core development tools and libraries"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:60
msgid "python"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:62
msgid "http://docs.python.org/2/tutorial/"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:63
msgid "http://www.learnpython.org/"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:64
msgid "http://learnpythonthehardway.org/book/"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:66
msgid "django"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:68
msgid "https://docs.djangoproject.com/en/dev/intro/tutorial01/"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:69
msgid "https://code.djangoproject.com/wiki/Tutorials"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:71
msgid "javascript"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:73
msgid "http://www.crockford.com/javascript/inheritance.html"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:74
msgid "http://geoext.org/tutorials/quickstart.html"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:76
msgid "jquery"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:78
msgid "http://www.w3schools.com/jquery/default.asp"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:79
msgid "http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:80
msgid "http://www.jquery-tutorial.net/"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:82
msgid "bootstrap"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:84
msgid "http://twitter.github.io/bootstrap/"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:85
msgid "http://www.w3resource.com/twitter-bootstrap/tutorial.php"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:87
msgid "geotools/geoscript/geoserver"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:89
msgid "http://docs.geotools.org/stable/tutorials/feature/csv2shp.html"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:90
msgid "http://geoscript.org/tutorials/index.html"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:91
msgid "http://docs.geotools.org/stable/tutorials/"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:92
msgid "https://github.com/dwins/gsconfig.py/blob/master/README.rst"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:94
msgid "geopython"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:96
msgid "http://pycsw.org/docs/documentation.html"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:97
msgid "http://geopython.github.io/OWSLib/"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:98
msgid "https://github.com/toblerity/shapely"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:99
msgid "https://github.com/sgillies/Fiona"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:100
msgid "http://pypi.python.org/pypi/pyproj"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:102
msgid "gdal/ogr"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:104
msgid "http://www.gdal.org/gdal_utilities.html"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\index.rst:105
msgid "http://www.gdal.org/ogr_utilities.html"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:4
msgid "Standards"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:6
msgid "GeoNode is based on a set of Open Geospatial Consortium (OGC) standards. These standards enable GeoNode installations to be interoperable with a wide variety of tools that support these OGC standards and enable federation with other OGC compliant services and infrastructure. Reference links about these standards are also included at the end of this module."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:8
msgid "GeoNode is also based on Web Standards ..."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:11
msgid "Open Geospatial Consortium (OGC) Standards"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:14
msgid "Web Map Service (WMS)"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:16
msgid "The Web Map Service (WMS) specification defines an interface for requesting rendered map images across the web. It is used within GeoNode to display maps in the pages of the site and in the GeoExplorer application to display rendered layers based on default or custom styles."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:19
msgid "Web Feature Service (WFS)"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:21
msgid "The Web Feature Service (WFS) specification defines an interface for reading and writing geographic features across the web. It is used within GeoNode to enable downloading of vector layers in various formats and within GeoExplorer to enable editing of Vector Layers that are stored in a GeoNode."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:24
msgid "Web Coverage Service (WCS)"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:26
msgid "The Web Coverage Service (WCS) specification defines an interface for reading and writing geospatial raster data as \"coverages\" across the web. It is used within GeoNode to enable downloading of raster layers in various formats."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:29
msgid "Catalogue Service for Web (CSW)"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:31
msgid "The Catalogue Service for Web (CSW) specification defines an interface for exposing a catalogue of geospatial metadata across the web. It is used within GeoNode to enable any application to search GeoNode's catalogue or to provide federated search that includes a set of GeoNode layers within another application."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:34
msgid "Tile Mapping Service (TMS/WMTS)"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:36
msgid "The Tile Mapping Service (TMS) specification defines and interface for retrieving rendered map tiles over the web. It is used within geonode to enable serving of a cache of rendered layers to be included in GeoNode's web pages or within the GeoExplorer mapping application. Its purpose is to improve performance on the client vs asking the WMS for rendered images directly."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:39
msgid "Web Standards"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:42
msgid "HTML"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:44
msgid "**HyperText Markup Language**, commonly referred to as **HTML**, is the standard markup language used to create web pages. [1]_ Web browsers can read HTML files and render them into visible or audible web pages. HTML describes the structure of a website semantically along with cues for presentation, making it a markup language, rather than a programming language."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:51
msgid "HTML elements form the building blocks of all websites. HTML allows images and objects to be embedded and can be used to create interactive forms. It provides a means to create structured documents by denoting structural semantics for text such as headings, paragraphs, lists, links, quotes and other items."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:57
msgid "The language is written in the form of HTML elements consisting of *tags* enclosed in angle brackets (like < >). Browsers do not display the HTML tags and scripts, but use them to interpret the content of the page."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:62
msgid "HTML can embed scripts written in languages such as JavaScript which affect the behavior of HTML web pages. Web browsers can also refer to Cascading Style Sheets (CSS) to define the look and layout of text and other material. The World Wide Web Consortium (W3C), maintainer of both the HTML and the CSS standards, has encouraged the use of CSS over explicit presentational HTML since 1997."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:70
#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:86
msgid "CSS"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:72
msgid "**Cascading Style Sheets** (**CSS**) is a style sheet language used for describing the presentation of a document written in a markup language. [2]_ Although most often used to set the visual style of web pages and user interfaces written in HTML and XHTML, the language can be applied to any XML document, including plain XML, SVG and XUL, and is applicable to rendering in speech, or on other media. Along with HTML and JavaScript, CSS is a cornerstone technology used by most websites to create visually engaging webpages, user interfaces for web applications, and user interfaces for many mobile applications. [3]_"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:83
msgid "CSS is designed primarily to enable the separation of document content from document presentation, including aspects such as the layout, colors, and fonts. [4]_ This separation can improve content accessibility, provide more flexibility and control in the specification of presentation characteristics, enable multiple HTML pages to share formatting by specifying the relevant CSS in a separate .css file, and reduce complexity and repetition in the structural content, such as semantically insignificant tables that were widely used to format pages before consistent CSS rendering was available in all major browsers. CSS makes it possible to separate presentation instructions from the HTML content in a separate file or style section of the HTML file. For each matching HTML element, it provides a list of formatting instructions. For example, a CSS rule might specify that “all heading 1 elements should be bold”, leaving pure semantic HTML markup that asserts “this text is a level 1 heading” without formatting code such as a ``<bold>`` tag indicating how such text should be displayed."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:101
msgid "This separation of formatting and content makes it possible to present the same markup page in different styles for different rendering methods, such as on-screen, in print, by voice (when read out by a speech-based browser or screen reader) and on Braille-based, tactile devices. It can also be used to display the web page differently depending on the screen size or device on which it is being viewed. Although"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:110
msgid "REST"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:112
msgid "In computing, **Representational State Transfer** (**REST**) is the software architectural style of the World Wide Web. [5]_ [6]_ [7]_ REST gives a coordinated set of constraints to the design of components in a distributed hypermedia system that can lead to a higher performing and more maintainable architecture."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:118
msgid "To the extent that systems conform to the constraints of REST they can be called RESTful. RESTful systems typically, but not always, communicate over the Hypertext Transfer Protocol with the same HTTP verbs (GET, POST, PUT, DELETE, etc.) which web browsers use to retrieve web pages and to send data to remote servers. [8]_ REST interfaces usually involve collections of resources with identifiers, for example ``/people/tom``, which can be operated upon using standard verbs, such as ``DELETE /people/tom``."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:127
msgid "`Hypertext Markup Language | Definition of hypertext markup language by Merriam-Webster <http://www.merriam-webster.com/dictionary/hypertext%20markup%20language>`_"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:129
msgid "`\"CSS developer guide\" <https://developer.mozilla.org/en-US/docs/Web/Guide/CSS>`_. Mozilla Developer Network. Retrieved 2015-09-24"
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:131
msgid "`\"Web-based Mobile Apps of the Future Using HTML 5, CSS and JavaScript\" <http://www.htmlgoodies.com/beyond/article.php/3893911/Web-based-Mobile-Apps-of-the-Future-Using-HTML-5-CSS-and-JavaScript.htm>`_. HTMLGoodies. Retrieved October 2014."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:133
msgid "`\"What is CSS?\" <http://www.w3.org/standards/webdesign/htmlcss#whatcss>`_. World Wide Web Consortium. Retrieved December 2010."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:135
msgid "Fielding, R. T.; Taylor, R. N. (2000). \"Principled design of the modern Web architecture\". pp. 407–416. doi:`10.1145/337180.337228 <https://dx.doi.org/10.1145%2F337180.337228>`_."
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:137
msgid "Richardson, Leonard; Sam Ruby (2007), `RESTful web service <http://books.google.com/books?id=XUaErakHsoAC>`_, O'Reilly Media, `ISBN 978-0-596-52926-0 <https://en.wikipedia.org/wiki/Special:BookSources/978-0-596-52926-0>`_, retrieved 18 January 2011, The main topic of this book is the web service architectures which can be considered RESTful: those which get a good score when judged on the criteria set forth in Roy Fielding's dissertation.\""
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:139
msgid "Richardson, Leonard; Mike Amundsen (2013), `RESTful web APIs <http://www.amazon.com/RESTful-Web-APIs-Leonard-Richardson/dp/1449358063/ref=sr_1_1?ie=UTF8&qid=1442372039&sr=8-1&keywords=restful+web+apis>`_, O'Reilly Media, `ISBN 978-1-449-35806-8 <https://en.wikipedia.org/wiki/Special:BookSources/978-1-449-35806-8>`_, retrieved 15 September 2015, The Fielding disertation explains the decisions behind the design of the Web.\""
msgstr ""

#: ..\..\005_dev_workshop\001_devel_intro\standards.rst:141
msgid "Fielding, Roy Thomas (2000). `\"Chapter 5: Representational State Transfer (REST)\" <http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm>`_. *Architectural Styles and the Design of Network-based Software Architectures* (Ph.D.). University of California, Irvine. This chapter introduced the Representational State Transfer (REST) architectural style for distributed hypermedia systems. REST provides a set of architectural constraints that, when applied as a whole, emphasizes scalability of component interactions, generality of interfaces, independent deployment of components, and intermediary components to reduce interaction latency, enforce security, and encapsulate legacy systems.\""
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:4
msgid "GeoNode's Core Modules"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:6
msgid "GeoNode is made up of a set of core Django pluggable modules (known as apps in Django) that provide the functionality of the application. Together they make up the key components of a GeoNode site. While your own use case and implementation may not require that you work directly on these modles, it is important that you become familiar with their layout, structure and the functionality that they provide. You may need to import these apps into your own apps, and as such, becoming familiar with them is an important step in becoming a proficient GeoNode developer."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:9
msgid "geonode.layers"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:11
msgid "geonode.layers is the most key GeoNode module. It is used to represent layers of data stored in a GeoNode's paired GeoServer. The layer model class inherits fields from the ResourceBase class which provides all of the fields necessary for the metadata catalogue, and adds fields that map the object to its corresponding layer in GeoServer. When your users upload a layer via the user interface, the layer is imported to GeoServer and a record is added to GeoNode's database to represent that GeoServer layer within GeoNode itself."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:13
msgid "The Layer model class provides a set of helper methods that are used to perform operations on a Layer object, and also to return things such as the list of Download or Metadata links for that layer. Additional classes are used to model the layers Attributes, Styles, Contacts and Links. The Django signals framework is used to invoke specific functions to synchronize with GeoServer before and after the layer is saved."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:15
msgid "The views in the layers app are used to perform functions such as uploading, replacing, removing or changing the points of contact for a layer, and views are also used to update layer styles, download layers in bulk or change a layers permissions."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:17
msgid "The forms module in the layer app is used to drive the user interface forms necessary for performing the business logic that the views provide."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:19
msgid "The Layers app also includes a set of templates that are paired with views and used to drive the user interface. A small set of layer template tags is also used to help drive the layer explore and search pages."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:21
msgid "Some helper modules such as geonode.layers.metadata and geonode.layers.ows are used by the layer views to perform specific functions and help keep the main views module more concise and legible."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:23
msgid "Additionally, the GeoNode specific management commands are a part of the geonode.layers app."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:25
msgid "You should spend some time to review the layers app through GitHubs code browsing interface."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:27
#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:40
msgid "https://github.com/GeoNode/geonode/tree/master/geonode/layers"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:30
msgid "geonode.maps"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:32
msgid "The geonode.maps app is used to group together GeoNodes multi layer map functionality. The Map and MapLayer objects are used to model and implement maps created with the GeoExplorer application. The Map object also extends from the ResourceBase class which provides the ability to manage a full set of metadata fields for a Map."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:34
msgid "The views in the maps app perform many of the same functions as the views in the layers app such as adding, changing, replacing or removing a map and also provide the endpoints for returning the map configuration from the database that is used to initialize the GeoExplorer app."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:36
msgid "The maps app also includes a set of forms, customization of the Django admin, some utility functions and a set of templates and template tags."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:38
msgid "You can familiarize yourself with the maps app on GitHub."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:43
msgid "geonode.security"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:45
msgid "The geonode.security app is used to provide object level permissions within the GeoNode Django application. It is a custom Django authentication backend and is used to assign Generic, User and Group Permissions to Layers, Maps and other objects in the GeoNode system. Generic permissions are used to enable public anonymous or authenticated viewing and/or editing of your data layers and maps, and User and Group specific permissions are used to allow specific users or groups to access and edit your layers."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:48
msgid "geonode.search"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:50
msgid "The geonode.search module provides the search API that is used to drive the GeoNode search pages. It is configured to index layers, maps, documents and profiles, but is extensible to allow you to use it to index your own model classes. This module is currently based on the Django ORM and as such has a limited set of search features, but the GeoNode development team is actively working on making it possible to use this module with more feature-rich search engines."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:53
msgid "geonode.catalogue"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:55
msgid "The geonode.catalogue app provides a key set of metadata catalogue functions within GeoNode itself. GeoNode is configured to use an integrated version of the pycsw library to perform these functions, but can also be configured to use any OGC compliant CS-W implementation such as GeoNetwork or Deegree. The metadata app allows users to import and/or edit metadata for their layers, maps and documents, and it provides an OGC compliant search interface for use in federating with other systems."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:58
msgid "geonode.geoserver"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:60
msgid "The geonode.geoserver module is used to interact with GeoServer from within GeoNode's python code. It relies heavily on the gsconfig library which addresses GeoServer's REST configuration API. Additionally, the geonode.geoserver.uploader module is used to interact with GeoServers Importer API for uploading and configuring layers."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:63
msgid "geonode.people"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:65
msgid "The geonode.people module is used to model and store information about both GeoNode users and people outside of the system who are listed as Points of Contact for particular layers. It is the foundational module for GeoNode's social features. It provides a set of forms for users to edit and manage their own profiles as well as to view and interact with the profiles of other users."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:68
msgid "geoexplorer"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:70
msgid "GeoNode's core GIS client functions are performed by GeoExplorer. The GeoExplorer app is in turn based on GeoExt, OpenLayers and ExtJS. It provides functionality for constructing maps, styling layers and connecting to remote services. GeoExplorer is the reference implementation of the OpenGeo Suite SDK which is based on GXP. GeoNode treats GeoExplorer as an external module that is used out of the box in GeoNode, but it is possible for you to create your own Suite SDK app and integrate it with GeoNode."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:73
msgid "Static Site"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:75
msgid "The front end of GeoNode is composed of a set of core templates, specific templates for each module, cascading style sheets to style those pages and a set of javascript modules that provide the interactive functionality in the site."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:78
msgid "Templates"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:80
msgid "GeoNode includes a basic set of core templates that use Django's template inheritance system to provide a modular system for constructing the web pages in GeoNode's interface. These core templates drive the overall page layout and things like the home page. You will start the process of customizing your GeoNode instance by overriding these templates, so you should familiarize yourself with their tructure and how they inherit from each other to drive the pages."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:83
msgid "Additionally, most of the apps described above have their own set of templates that are used to drive the pages for each module. You may also want to override these templates for your own purposes and as such should familiarize yourself with a few of the key ones."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:88
msgid "GeoNode's css is based on Twitter's Bootstrap Library which uses the lessc dynamic stylesheet language. GeoNode extends from the basic Boostrap style and you are able to create your own bootstrap based style to customize the look and feel of your own GeoNode instance. Sites like bootswatch.com also provide ready made styles that you can simply drop in to your project to change the style."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:91
msgid "Javascript"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\coremodules.rst:93
msgid "The interactive functionality in GeoNode pages is provided by the jQuery javascript framework and a set of jQuery plugins. The core set of GeoNode javascript modules closely aligns with the apps described above, and there are also a few pieces of functionality provided as javascript modules that are used through out all of the apps. You are able to add your own jQuery code and/or plugins to perform interactive functionality in your own application."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\exercises.rst:7
msgid "Shell and Utilities"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\exercises.rst:9
msgid "*ssh* into your virtual machine or other instance"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\exercises.rst:10
msgid "*sudo* to modify the *sshd_config* settings to verify disabling of dns resolution (UseDNS=no)"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\exercises.rst:11
msgid "install a command line helper"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\exercises.rst:17
msgid "exercise command completion"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\exercises.rst:23
msgid "activate/deactivate the *virtualenv* on your instance"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\exercises.rst:30
msgid "set the *DJANGO_SETTINGS_MODULE* env variable"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\exercises.rst:36
msgid "install the *httpie* utility via pip"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\exercises.rst:46
msgid "Python"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\exercises.rst:48
msgid "launch *ipython* and experiment"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\exercises.rst:57
msgid "execute a script with *ipython* and open the REPL"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\index.rst:4
msgid "Development Prerequsites and Core Modules"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\index.rst:6
#: ..\..\005_dev_workshop\index.rst:27
msgid "This module will introduce you to the basic tools and skills required to start actively developing GeoNode."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:4
msgid "GeoNode's Development Prerequisites"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:7
msgid "Basic Shell Tools"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:10
msgid "ssh and sudo"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:12
msgid "ssh and sudo are very basic terminal skills which you will need to deploy, maintain and develop with GeoNode. If you are not already familiar with their usage, you should review the basic descriptions below and follow the external links to learn more about how to use them effectively as part of your development workflow."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:14
msgid "*ssh* is the network protocol used to connect to a remote server where you run your GeoNode instance whether on your own network or on the cloud. You will need to know how to use an the ssh command from the terminal on your unix machine or how to use a ssh client like putty or winscp on windows. You may need to use pki certificates to connect to your remove server, and should be familiar with the steps and options necessary to connect this way. More information about ssh can be found in the links below."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:16
msgid "http://winscp.net/eng/docs/ssh"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:18
msgid "*sudo* is the command used to execute a terminal command as the superuser when you are logged in with a normal user. You will to use sudo in order to start, stop and restart key services on your GeoNode instance. If you are not able to grant yourself these privileges on the machine you are using for your GeoNode instance, you may need to consult with your network administrator to arrange for your user to be granted sudo permissions. More information about sudo can be found in the links below."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:20
msgid "http://en.wikipedia.org/wiki/Sudo"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:23
msgid "bash"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:25
msgid "*Bash* is the most common unix shell which will usually be the default on servers where you will be deploying your GeoNode instance. You should be familiar with the most common bash commands in order to be able to deploy, maintain and modify a geonode instance. More information about Bash and common bash commands can be found in the links below."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:27
msgid "http://en.wikipedia.org/wiki/Bash_(Unix_shell)"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:31
msgid "apt"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:33
msgid "*apt* is the packaging tool that is used to install GeoNode on ubuntu and other debian based systems. You will need to be familiar with adding Personal Package Archives to your list of install sources, and will need to be familiar with basic apt commands. More information about apt can be found in the links below."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:35
msgid "http://en.wikipedia.org/wiki/Advanced_Packaging_Tool"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:39
msgid "Python Development Tools"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:41
msgid "The GeoNode development process relies on several widely used python development tools in order to make things easier for developers and other users of the systems that GeoNode developers work on or where GeoNodes are deployed. They are considered best practices for modern python development, and you should become familiar with these basic tools and be comfortable using them on your own projects and systems."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:45
msgid "virtualenv"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:47
msgid "*virtualenv* is a tool used to create isolated python development environments such that the the versions of project dependencies are sandboxed from the system-wide python packages. This eliminates the commonly encountered problem of different projects on the same system using different versions of the same library. You should be familiar with how to create and activate virtual environments for the projects you work on. More information about virtualenv can be found in the links below."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:49
msgid "http://pypi.python.org/pypi/virtualenv"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:50
msgid "http://www.virtualenv.org/en/latest/"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:52
msgid "*virtualenvwrapper* is a wrapper around the virtualenv package that makes it easier to create and switch between virtual environments as you do development. Using it will make your life much easier, so its recommended that you install and configure it and use its commands as part of your virtualenv workflow. More info about virtualenvwrapper can be found in the links below."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:54
msgid "http://www.doughellmann.com/projects/virtualenvwrapper/"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:58
msgid "pip"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:60
msgid "*pip* is a tool for installing and managing python packages. Specifically it is used to install and upgrade packages found in the Python Pacakge Index. GeoNode uses pip to install itself, and to manage all of the python dependencies that are needed as part of a GeoNode instance. As you learn to add new modules to your geonode, you will need to become familiar with the use of pip and about basic python packaging usage. More information about pip can be found in the links below."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:62
msgid "http://www.pip-installer.org/en/latest/"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:63
msgid "http://pypi.python.org/pypi/pip"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:64
msgid "http://en.wikipedia.org/wiki/Pip_(Python)"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:68
msgid "miscellaneous"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:70
msgid "*ipython* is a set of tools to make your python development and debugging experience easier. The primary tool you want to use is an interactive shell that adds introspection, integrated help and command completion and more. While not strictly required to do GeoNode development, learning how to use ipython will make your development more productive and pleasant. More information about ipython can be found in the links below."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:72
msgid "http://ipython.org/"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:73
msgid "http://pypi.python.org/pypi/ipython"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:74
msgid "https://github.com/ipython/ipython"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:75
msgid "http://en.wikipedia.org/wiki/IPython"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:77
msgid "*pdb* is a standard python module that is used to interactively debug your python code. It supports setting conditional breakpoints so you can step through the code line by line and inspect your variables and perform arbitrary execution of statements. Learning how to effectively use pdb will make the process of debugging your application code significantly easier. More information about pdb can be found in the links below."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:79
#: ..\..\005_dev_workshop\004_devel_debug\python.rst:74
msgid "http://docs.python.org/2/library/pdb.html"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:83
msgid "Django"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:85
msgid "GeoNode is built on top of the *Django web framework*, and as such, you will need to become generally familiar with Django itself in order to become a productive GeoNode developer. Django has excellent documentation, and you should familiarize yourself with Django by following the Django workshop and reading through its documentation as required."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:89
msgid "Model Template View"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:91
msgid "Django is based on the Model Template View paradigm (more commonly called Model View Controller). Models are used to define objects that you use in your application and Django's ORM is used to map these models to a database. Views are used to implement the business logic of your application and provide objects and other context for the templates. Templates are used to render the context from views into a page for display to the user. You should become familiar with this common paradigm used in most modern web frameworks, and how it is specifically implemented and used in Django. The Django tutorial itself is a great place to start. More information about MTV in Django can be found in the links below."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:93
msgid "http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:94
msgid "http://www.codinghorror.com/blog/2008/05/understanding-model-view-controller.html"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:95
msgid "https://docs.djangoproject.com/en/1.4/"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:99
msgid "HTTP Request Response"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:101
msgid "Django and all other web frameworks are based on the HTTP Request Response cycle. Requests come in to the server from remote clients which are primarily web browsers, but also can be api clients, and the server returns with a Response. You should be familiar with these very basic HTTP principles and become familiar with the way that Django implements them. More information about HTTP, Requests and Responses and Djangos implementation in the links below."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:103
msgid "http://devhub.fm/http-requestresponse-basics/"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:104
msgid "http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:105
msgid "https://docs.djangoproject.com/en/dev/ref/request-response/"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:109
msgid "Management Commands"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:111
msgid "Django projects have access to a set of management commands that are used to manage your project. Django itself provides a set of these commands, and django apps (including GeoNode) can provide their own. Management commands are used to do things like synchronize your models with your database, load data from fixtures or back up your database with fixtures, start the development server, initiate the debugger and many other things. GeoNode provides management commands for synchronizing with a GeoServer or updating the layers already in your GeoNode. You should become familiar with the basic management commands that come with Django, and specifically with the commands that are part of GeoNode. The GeoNode specific commands are covered in section. More information about management commands can be found in the links below."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:113
msgid "https://docs.djangoproject.com/en/dev/ref/django-admin/"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:117
msgid "Django Admin Interface"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:119
msgid "Django provides a build-in management console that administrators and developers can use to look at the data in the database that is part of the  installed applications. Administrators can use this console to perform many common administration tasks that are a necessary part of running a GeoNode instance, and as a developer, you will use this interface during your development process to inspect the database and the data stored in your models. More information about the django admin interface can be found in the links below."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:121
msgid "https://docs.djangoproject.com/en/dev/ref/contrib/admin/"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:125
msgid "Template Tags"
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:127
msgid "Django templates make use of a set of tags to inject, filte and format content into a rendered HTML page. Django itself includes a set of built-in template tags and filters that you will use in your own templates, and GeoNode provides a geonode specific set of tags that are used in the GeoNode templates. You should become familiar with the built-in tag set and with GeoNode's specific tags as you work on developing your own templates or extending from GeoNode's. More information about Django template tags can be found in the links below."
msgstr ""

#: ..\..\005_dev_workshop\002_devel_core\prerequisites.rst:129
msgid "https://docs.djangoproject.com/en/dev/ref/templates/builtins/"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\gdal_install.rst:4
msgid "Install GDAL for Development"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\gdal_install.rst:6
msgid "In order to install GDAL (1.10.0+) in developing mode, in a virtual environment, on Ubuntu 12.04 the following steps may be required.  If you have already tried any of the approaches suggested elsewhere, it is recommended that, unless you know that this may affect other software, you do a full purge of any existing GDAL-related packages."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\gdal_install.rst:8
msgid "Install GDAL in your host environment"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\gdal_install.rst:18
msgid "Test that GDAL is installed in your host environment"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\gdal_install.rst:25
msgid "Take note of the GDAL Version"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\gdal_install.rst:27
msgid "Assuming that your geonode directory is installed directly off of your home directory, download and configure GDAL"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\gdal_install.rst:38
msgid "Test that GDAL is installed in your virtual environment"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:4
msgid "Install GeoNode for Development"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:7
msgid "In order to install Geonode 2.0 in developing mode on Ubuntu 12.04 the following steps are required:"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:9
#: ..\..\005_dev_workshop\index.rst:34
msgid "For Windows: (:ref:`install_win_devmode`)"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:11
msgid "Summary of the installation steps"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:13
#: ..\..\005_dev_workshop\003_devel_env\index.rst:36
msgid "Retrieve latest apt-get list"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:14
#: ..\..\005_dev_workshop\003_devel_env\index.rst:42
msgid "Install build tools and libraries"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:15
msgid "Install dependencies (Python, Postgresql and Java) and supporting tools"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:16
#: ..\..\005_dev_workshop\003_devel_env\index.rst:156
msgid "Add Nodejs PPA and other tools required for static development"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:17
msgid "Set up a virtual environment (virtualenv)"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:18
msgid "Clone geonode from github and install it in the virtual environment"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:19
msgid "Run paver to get install geoserver and start the development servers"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:20
msgid "Compile and Start the server"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:21
msgid "Start Geonode instance"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:22
#: ..\..\005_dev_workshop\003_devel_env\index.rst:321
#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:125
msgid "To stop the server"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:23
#: ..\..\005_dev_workshop\003_devel_env\index.rst:331
#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:133
msgid "Next create a superuser for your django geonode"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:25
msgid "The following steps have to be executed in your terminal. The steps have to be done as a root user, therefore don´t forget to type sudo in front!"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:27
#: ..\..\005_dev_workshop\003_devel_env\index.rst:300
#: ..\..\005_dev_workshop\003_devel_env\index.rst:366
msgid "Don't forget to stop the **GeoNode Production** services if enabled"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:34
msgid "If possible log as **root** user, open a terminal and ``cd /home/geonode/dev``"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:48
msgid "Install dependencies"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:50
msgid "*Python native dependencies*"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:56
msgid "*Install Python Virtual Environment*"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:62
msgid "*Postgresql*"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:64
msgid "The following steps must be executed **only** if you don't have PostgreSQL and PostGIS already installed on your system (see :ref:`install_geonode_application`)"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:70
msgid "Change postgres UNIX password"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:77
msgid "Create geonode role and database"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:98
msgid "*Java dependencies*"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:100
msgid "The following steps must be executed **only** if you don't have a Java JDK already installed on your system (see :ref:`install_geonode_application`)"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:106
msgid "*supporting tools*"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:112
msgid "Set up a virtual environment"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:114
msgid "Here is where Geonode will later be running."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:116
msgid "Add the virtualenvwrapper to your new environement."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:128
msgid "On Ubuntu, you can add the above settings to your .bashrc file and reload the settings running"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:139
msgid "Set up the local virtual environment for Geonode"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:146
msgid "This creates a new directory where you want your project to be and creates a new virtualenvironment"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:148
msgid "Get the code"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:150
msgid "To download the latest geonode version from github, the command *clone* is used"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:158
msgid "This is required for static development"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:181
msgid "Every time you want to update the static files after making changes to the sources, go to geonode/static and run 'grunt production'."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:183
msgid "Install GeoNode in the new active local virtualenv"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:193
msgid "If the install fails because of an error related to pyproj not being verified (happens on pip 1.5), use the following:"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:199
msgid "Create ``local_settings.py``"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:201
msgid "Add the ``local_settings.py`` to your GeoNode instllation"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:209
msgid "Add the following lines to the ``local_settings.py``"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:282
msgid "Compile and Start the server for the first time"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:284
msgid "Align the DataBase structure"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:290
#: ..\..\005_dev_workshop\003_devel_env\index.rst:319
msgid "If the start fails because of an import error related to osgeo, then please consult the :ref:`install_gdal_devmode`."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:292
msgid "The last step is to compile GeoServer and setup"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:298
#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:113
msgid "Now we can start our geonode instance"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:311
msgid "Visit the geonode site by typing http://localhost:8000 into your browser window."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:313
msgid "If you are using a different IP address (e.g 1.1.1.1), then start paver using the command below."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:323
msgid "type hold **Ctrl c**  on your keyboard to stop the server"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:325
msgid "now type:"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:333
msgid "Create a superuser so you can log on to your local geonode installation at http://localhost:8000"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:340
msgid "Start working on Geonode the next day after install"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:342
msgid "With every restart of your machine, you have to restart geonode as well. That means, you will not be able to open http://localhost:8000   directly after starting your machine new. In order to be able to use geonode now, you have to activate your virtualenvironment and to start the development servers."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:344
msgid "*username* is the name of your machine and personal folder!"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:346
msgid "Activate virtualenv"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:348
msgid "To activate your virtualenv you just need to type"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:356
msgid "or"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:362
msgid "Be careful with the path, it might not be the same for you!"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:364
msgid "Start the server"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:379
msgid "Now you are able to access http://localhost:8000 again."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:381
msgid "Remember that you have to do these steps each time you restart your machine!!"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\index.rst:383
msgid "Now you've followed these installation instructions, geonode is running in development mode. This also means that you are using all the default settings of geonode. If you want to change them, e.g use Tomcat instead of Jetty, or Postgresql instead of sqlite3, you may follow the steps from the section **Configure Manually** in :ref:`geonode_install`."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:4
msgid "Install GeoNode for Development (Windows)"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:6
msgid "In order to install Geonode 2.0 in developing mode on Windows 2008r2 the following steps are required:"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:8
msgid "install dependencies (Python and Java) and supporting tools"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:10
msgid "set up a virtual environment (virtualenv)"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:12
msgid "clone geonode from github and install it in the virtual environment"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:14
msgid "run paver to get install geoserver and start the development servers"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:16
msgid "The following steps have to be executed in your terminal where there is a \">\". The path will differ depending on installation."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:18
msgid "Install Dependencies.  All should be found in binary.  Only 32 bit versions have been tested."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:20
msgid "Latest Python 2.7.x Windows build https://www.python.org/download/releases/2.7.7/"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:22
msgid "Setuptools http://www.lfd.uci.edu/~gohlke/pythonlibs/#setuptools"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:24
msgid "Install core components of GDAL http://www.gisinternals.com/sdk/PackageList.aspx?file=release-1600-gdal-1-11-mapserver-6-4.zip gdal-111-1600-core.msi"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:30
msgid "Install Java for Geoserver.  If you already have java installed 32 or 64 bit versions work."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:32
msgid "http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:34
msgid "Ant and Maven are optional for custom builds of Geoserver"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:36
msgid "Install Supporting tools"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:38
msgid "Git http://git-scm.com/downloads"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:40
msgid "GetText (not tested yet)"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:42
msgid "Install node and tools for static development (not tested yet)"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:44
msgid "http://nodejs.org/download/"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:46
msgid "In the command prompt do the following: Will we need to be admins?"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:66
msgid "Get the GeoNode Code using Git."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:57
msgid "Open the Git bash or use your command prompt depending on how git was installed This command will download the latest version of GeoNode.  For the most recent stable version type number 2."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:105
msgid "Install all Dependencies in a new virtual environment"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:69
msgid "In the command prompt, navigate to where you want your python to be installed."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:75
msgid "Command not found?  Try adding your python scripts folder to the path environment variable.  In most cases it is C:\\Python27\\Scripts.  You will need to start a fresh command prompt to register the variables.  See next common error message to add the C:\\Python27 path"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:77
msgid "Errors about no package found and running python from the command prompt gives command not found, then add C:\\Python27 to your path environment variable."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:79
msgid "Initialize the virtual environment by navigating to your-virtualenv-directory/Scripts/activate"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:81
msgid "After you activate the virtual environment, run the following:"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:87
msgid "Navigate to your geonode code install and run"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:93
msgid "*Back to the parent directory*"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:107
msgid "Set up the Geoserver with command"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:119
msgid "Visit the geonode site by typing http://localhost:8000 into your browser window."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:121
msgid "If the start fails because of an import error related to osgeo, then ensure that the GDAL_LIBRARY_PATH is set in the Windows path."
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:123
msgid "If you get GEOSversion function not found, then need to need to change line 71 in geonode\\Lib\\site-packages\\Shapely-1.3.0-py2.7-win32.egg\\shapely\\geos.py from _lgeos = CDLL(\"geos.dll\") to _lgeos = CDLL(\"geos_c.dll\").  See issue https://github.com/Toblerity/Shapely/issues/136"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:127
msgid "type hold Ctrl c on your keyboard to stop the server"
msgstr ""

#: ..\..\005_dev_workshop\003_devel_env\win_devinstall.rst:135
msgid "Create a superuser so you can log on to your local geonode installation at http://localhost:8000"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:4
msgid "Debugging GeoNode in the Browser"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:6
msgid "This section covers some techniques for debugging browser and Django related response bugs using the Firefox web browser extension named Firebug. The concepts covered apply to other browser's tools but may vary in terminology."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:10
msgid "Another Firefox extension worth noting is 'jsonview'. This extension supports formatted viewing of JSON responses and integrates well with Firebug."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:13
#: ..\..\005_dev_workshop\004_devel_debug\python.rst:10
msgid "References:"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:15
msgid "https://getfirebug.com/faq/"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:16
msgid "http://jsonview.com/"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:19
msgid "Net Tab"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:21
msgid "The net tab allows viewing all of the network traffic from the browser. The subtabs (like the selected \"Images\" tab) allow filtering by the type of traffic."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:26
msgid "Firebug Net Tab"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:28
msgid "In this screen-shot, the mouse hover displays the image content and the full URL requested. One can right-click to copy-paste the URL or view in a separate tab. This is useful for obtaining test URLs. The grayed out entries show that the resource was cached via conditional-get (the 304 not modified). Other very useful advanced information includes the size of the response and the loading indicator graphics on the right. At the bottom, note the total size and timing information."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:31
msgid "Net Tab Exercises"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:33
msgid "Go to layers/maps/search pages and look at the various requests. Note the XHR subtab. Look at the various request specific tabs: headers, params, etc."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:36
msgid "Use the 'disable browser cache' option and see how it affects page loads. Discuss advantages/challenges of caching."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:41
msgid "DOM Tab"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:43
msgid "The DOM tab displays all of the top-level window objects. By drilling down, this can be a useful way to find out what's going on in a page."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:48
msgid "Firebug DOM Tab"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:50
msgid "In this example, the mouse is hovering over the ``app`` object. Note the high level view of objects and their fields. The console tab allows interacting with the objects."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:53
msgid "DOM Tab Exercises"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:55
msgid "Drill down in the DOM tab."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:56
msgid "Use the console to interactively exercise jquery."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:57
msgid "Use the console to interact with the app/map or other page objects"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:60
msgid "Script Tab"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:62
msgid "The script tab allows viewing scripts and debugging."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:67
msgid "The screen-shot displays a breakpoint set at line 3, the current code is stopped at line 8 and the mouse hover is displaying the value of the variable 'class_list'. On the right, the 'Watch' tab displays the various variables and scopes and offers a drill down view similar to the DOM view. The stack tab displays the execution stack context outside the current frame."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:70
msgid "Script Tab Exercises"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:72
msgid "Step through some code"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:73
msgid "Look at various features: variables, scopes, DOM drill-down"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:76
msgid "HTML Tab"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:78
msgid "The HTML tag allows viewing and drilling down into the DOM. This is an incredibly useful feature when doing CSS or HTML work."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:83
msgid "The screen-shot displays a search result 'article' element highlighted with padding and margin in yellow and purple. The DOM structure is displayed on the left and the right panel displays the specific style rules while the computed tab displays the effective style rules. The layout tab displays rulers and property values while the DOM tab displays a debug/DOM-like view of the actual object's properties."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:86
msgid "HTML Tab Exercises"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:88
msgid "Identify elements, look at the tabs on the right"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:89
msgid "Change styles, add new rules and styles"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\browser.rst:90
msgid "Edit existing HTML elements via the raw and tree-view"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoexplorer.rst:4
msgid "Debugging GeoExplorer"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoexplorer.rst:6
msgid "In case you want to debug the GeoExplorer behaviour in your browser with Firebug of Chromium Developer toolbar, you may do the following:"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoexplorer.rst:9
msgid "Install Boundless Suite::"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoexplorer.rst:15
msgid "Run GeoExplorer in debug mode::"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoexplorer.rst:20
msgid "Check if GeoExplore is running at this url: http://localhost:9080"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoexplorer.rst:22
msgid "Edit the ``layers/templates/layers/layer_geoext_map.html`` file and replace this line::"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoexplorer.rst:27
msgid "with this one::"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:4
msgid "Debugging GeoServer"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:6
msgid "Resources:"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:8
msgid "http://docs.geoserver.org/stable/en/user/advanced/logging.html"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:9
msgid "http://docs.geoserver.org/stable/en/user/production/troubleshooting.html"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:11
msgid "This section does not attempt to cover developer-level debugging in GeoServer as this is a much larger topic involving many more tools. The goal here is to provide 'black-box' techniques to help resolve and report problems."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:16
#: ..\..\005_dev_workshop\004_devel_debug\python.rst:8
msgid "Logging"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:18
msgid "GeoServer logging, while sometimes containing too much information, is the best way to start diagnosing an issue in GeoNode once the other. To create a proper error report for use in requesting support, providing any contextual logging information is critical."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:23
msgid "When using a standard geoserver installation, the GeoServer logs are located at :file:`/usr/share/geoserver/data/logs/geoserver.log`. The properties files that control the varying rules are also located here."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:30
msgid "Switch logging levels for various loggers."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:31
msgid "Look at the different logging profiles and discuss the loggers and levels."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:32
msgid "Learn how to read stacktraces, nested or otherwise."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:35
msgid "Advanced Troubleshooting"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:37
msgid "JVM diagnostics and advanced troubleshooting techniques are covered in the GeoServer documents linked to above. When providing information for a bug report, these can be helpful but in-depth Java knowledge is required to fully comprehend the output from some of these tools."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:45
msgid "Look at jstack output"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:48
msgid "Using Django to Help Debug"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\geoserver.rst:50
msgid "The gsconfig library provides a rich interface to interacting with GeoServer's REST API. This allows high-level functions as well as viewing raw REST responses."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\index.rst:4
msgid "GeoNode debugging techniques"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\index.rst:6
msgid "GeoNode can be difficult to debug as there are several different components involved:"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\index.rst:9
msgid "Browser - includes HTML/CSS issues, JavaScript, etc."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\index.rst:10
msgid "Django - GeoNode HTML views and web APIs"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\index.rst:11
msgid "GeoServer - Core Wxx services and Platform REST APIs"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\index.rst:13
msgid "When attempting to diagnose a specific problem, often the order of investigation mirrors the order above - that is, start with the client: Is this a bug in code running on the browser. If not, step to the next level: the Django responses to client requests. Often this is possible via the browser using the correct tools. Many requests require Django communications with GeoServer. This is the next stage of investigation if a specific bug does not appear to originate in Django or the client."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\index.rst:21
msgid "The following section covers techniques to help diagnose and debug errors."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:4
msgid "Debugging GeoNode's Python Components"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:12
msgid "http://docs.python.org/2/library/logging.html"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:13
msgid "https://docs.djangoproject.com/en/1.4/topics/logging/"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:15
msgid "Logging is controlled by the contents of the logging data structure defined in the :file:`settings.py`. The default settings distributed with GeoNode are configured to only log errors. During development, it's a good idea to override the logging data structure with something a bit more verbose."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:21
msgid "Output"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:23
msgid "In production, logging output will go into the apache error log. This is located in :file:`/var/log/apache2/error.log`. During development, logging output will, by default, go to standard error."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:28
msgid "Configuring"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:30
msgid "Ensure the 'console' handler is at the appropriate level. It will ignore log messages below the set level."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:32
msgid "Ensure the specific logger you'd like to use is set at the correct level."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:33
msgid "If attempting to log SQL, ensure ``DEBUG=True`` in your :file:`local_settings.py`."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:36
msgid "Debugging SQL"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:38
msgid "To trace all SQL in django, configure the ``django.db.backends`` logger to ``DEBUG``"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:40
msgid "To examine a specific query object, you can use the ``query`` field: str(Layer.objects.all().query)"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:42
msgid "You can gather more information by using ``django.db.connection.queries``. When ``DEBUG`` is enabled, query SQL and timing information is stored in this list."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:46
msgid "Hints"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:48
msgid "Don't use print statements. They are easy to use in development mode but in production they will cause failure."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:50
msgid "Take advantage of python. Instead of:"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:56
msgid "Use:"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:63
msgid "Excercises:"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:65
msgid "Enable logging of all SQL statements. Visit some pages and view the logging output."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:66
msgid "Using the python shell, use the ``queries`` object to demonstrate the results of specific queries."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:70
msgid "PDB"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:72
msgid "Reference:"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:76
msgid "For the adventurous, ``pdb`` allows for an interactive debugging session. This is only possible when running in a shell via ``manage.py runserver`` or ``paver runserver``."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:80
msgid "To set a breakpoint, insert the following code before the code to debug."
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:82
msgid "..code-block:: python"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:84
msgid "import pdb; pdb.set_strace()"
msgstr ""

#: ..\..\005_dev_workshop\004_devel_debug\python.rst:86
msgid "When execution reaches this statement, the debugger will activate. The commands are noted in the link above. In addition to those debugger specific commands, general python statements are supported. For example, typing the name of a variable in scope will yield the value via string coersion. Typing \"n\" will execute the next line, \"c\" wil continue the execution of the program, \"q\" will quit."
msgstr ""

#: ..\..\005_dev_workshop\index.rst:5
msgid "Developers Workshop"
msgstr ""

#: ..\..\005_dev_workshop\index.rst:7
msgid "Welcome to the GeoNode Training `Developers Workshop` documentation v\\ |release|."
msgstr ""

#: ..\..\005_dev_workshop\index.rst:9
msgid "This workshop will teach how to develop with and for the `GeoNode <http://geonode.org>`_ software application. This module will introduce you to the components that GeoNode is built with, the standards that it supports and the services it provides based on those standards, and an overview its architecture."
msgstr ""

#: ..\..\005_dev_workshop\index.rst:13
msgid "*Prerequisites*"
msgstr ""

#: ..\..\005_dev_workshop\index.rst:24
msgid ":ref:`intro_devel`"
msgstr ""

#: ..\..\005_dev_workshop\index.rst:27
msgid ":ref:`dev_core`"
msgstr ""

#: ..\..\005_dev_workshop\index.rst:34
msgid ":ref:`install_devmode`"
msgstr ""

#: ..\..\005_dev_workshop\index.rst:30
msgid "This module shows a step-by-step guide for the setup of a GeoNode Develeopment Environent on an Ubuntu system."
msgstr ""

#: ..\..\005_dev_workshop\index.rst:32
msgid "For other Linux distributions the commands are similar, the difference is mainly on the packages names."
msgstr ""

#: ..\..\005_dev_workshop\index.rst:36
msgid ":ref:`dev_debug`"
msgstr ""

#: ..\..\005_dev_workshop\index.rst:37
msgid "GeoNode can be difficult to debug as there are several different components involved. This module shows some tecniques to debug the different parts of GeoNode."
msgstr ""

